<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://lyushisyan.github.io/zh-CN/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lyushisyan.github.io/zh-CN/" rel="alternate" type="text/html" /><updated>2025-07-02T08:55:16+03:00</updated><id>https://lyushisyan.github.io/feed.xml</id><title type="html">blank</title><entry><title type="html">VASP + Phono3py 计算热导率</title><link href="https://lyushisyan.github.io/zh-CN/blog/2025/vasp-phono3py/" rel="alternate" type="text/html" title="VASP + Phono3py 计算热导率" /><published>2025-05-21T02:36:10+03:00</published><updated>2025-05-21T02:36:10+03:00</updated><id>https://lyushisyan.github.io/blog/2025/vasp-phono3py</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2025/vasp-phono3py/"><![CDATA[<p>VASP 是第一性原理软件。
Phono3py可以通过<strong>三阶力常数</strong>计算<strong>声子-声子相互作用</strong>。从而计算晶格热导率、声子寿命/谱线宽度、自能的虚部（最低阶近似）、联合态密度（JDOS）和加权联合态密度（w-JDOS）。</p>

<h2 id="1-生成带有位移的超胞的-poscar-文件">1. 生成带有位移的超胞的 <code class="language-plaintext highlighter-rouge">POSCAR</code> 文件</h2>
<p>以金刚石结构的硅（Si）为例，原胞的 <code class="language-plaintext highlighter-rouge">POSCAR-unitcell</code> 文件如下</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> Si
   1.0
     5.4335600309153529    0.0000000000000000    0.0000000000000000
     0.0000000000000000    5.4335600309153529    0.0000000000000000
     0.0000000000000000    0.0000000000000000    5.4335600309153529
 Si
   8
Direct
   0.8750000000000000 0.8750000000000000 0.8750000000000000
   0.8750000000000000 0.3750000000000000 0.3750000000000000
   0.3750000000000000 0.8750000000000000 0.3750000000000000
   0.3750000000000000 0.3750000000000000 0.8750000000000000
   0.1250000000000000 0.1250000000000000 0.1250000000000000
   0.1250000000000000 0.6250000000000000 0.6250000000000000
   0.6250000000000000 0.1250000000000000 0.6250000000000000
   0.6250000000000000 0.6250000000000000 0.1250000000000000
</code></pre></div></div>

<p>基于该原胞，生成带有位移的 2×2×2 超胞用于计算二阶力常数（fc2）和三阶力常数（fc3）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>phono3py -d --dim 2 2 2 -c POSCAR-unitcell
</code></pre></div></div>

<p>该命令将生成 111 个位移结构，保存在 <code class="language-plaintext highlighter-rouge">phono3py_disp.yaml</code> 中，并创建 111 个结构文件 <code class="language-plaintext highlighter-rouge">POSCAR-00XXX</code>（XXX 从 000 到 110）。</p>

<p>如果要在二阶力常数（fc2）计算中使用比三阶力常数（fc3）计算更大的超胞尺寸：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>phono3py -d --dim-fc2 4 4 4 --dim 2 2 2 -c POSCAR-unitcell
</code></pre></div></div>

<p>在这种情况下，还会创建 <code class="language-plaintext highlighter-rouge">POSCAR_FC2-xxxxx</code> 文件。</p>

<h2 id="2-运行-vasp-对每个超胞进行力计算">2. 运行 VASP 对每个超胞进行力计算</h2>

<p>为了计算超胞中原子所受的力，<code class="language-plaintext highlighter-rouge">POSCAR-xxxxx</code>（以及 <code class="language-plaintext highlighter-rouge">POSCAR_FC2-xxxxx</code>，如果存在）被用作 VASP 计算。同时还需要为每个位移超胞提供 <code class="language-plaintext highlighter-rouge">KPOINTS</code>、<code class="language-plaintext highlighter-rouge">POTCAR</code> 和 <code class="language-plaintext highlighter-rouge">INCAR</code> 文件。</p>

<p>让每个超胞的力计算都在名为 <code class="language-plaintext highlighter-rouge">disp-xxxxx</code>（以及 <code class="language-plaintext highlighter-rouge">disp_fc2-xxxxx</code>）的文件夹下执行，其中 xxxxx 是序号，也就是说，每个 <code class="language-plaintext highlighter-rouge">disp-XXXXX</code> 文件夹都将包含一组 VASP 输入文件，执行完 VASP 计算后 ，计算结果存在 <code class="language-plaintext highlighter-rouge">disp-XXXXX</code> 文件夹下的 <code class="language-plaintext highlighter-rouge">vasprun.xml</code> 文件中。</p>

<p>因此我们写下列脚本来完成这些操作：</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>

<span class="nv">P</span><span class="o">=</span><span class="si">$(</span><span class="nb">pwd</span><span class="si">)</span> 

<span class="k">for </span>i <span class="k">in</span> <span class="si">$(</span><span class="nb">seq</span> <span class="nt">-f</span> <span class="s2">"%05g"</span> 1 111<span class="si">)</span><span class="p">;</span> <span class="k">do 
	</span><span class="nb">dir</span><span class="o">=</span><span class="s2">"disp-</span><span class="nv">$i</span><span class="s2">"</span> 
	<span class="nb">mkdir</span> <span class="nt">-p</span> <span class="s2">"</span><span class="nv">$dir</span><span class="s2">"</span> 
	<span class="nb">cd</span> <span class="s2">"</span><span class="nv">$dir</span><span class="s2">"</span> <span class="o">||</span> <span class="k">continue 
	</span><span class="nb">cp</span> <span class="s2">"</span><span class="nv">$P</span><span class="s2">"</span>/INCAR <span class="s2">"</span><span class="nv">$P</span><span class="s2">"</span>/KPOINTS <span class="s2">"</span><span class="nv">$P</span><span class="s2">"</span>/POTCAR <span class="nb">.</span> 
	<span class="nb">cp</span> <span class="s2">"</span><span class="nv">$P</span><span class="s2">"</span>/POSCAR-<span class="s2">"</span><span class="nv">$i</span><span class="s2">"</span> POSCAR 
	<span class="nb">echo</span> <span class="s2">"Prepared </span><span class="nv">$dir</span><span class="s2">"</span> 
	<span class="nb">cd</span> <span class="s2">"</span><span class="nv">$P</span><span class="s2">"</span> 
<span class="k">done</span>
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>

<span class="nv">P</span><span class="o">=</span><span class="si">$(</span><span class="nb">pwd</span><span class="si">)</span>

<span class="k">for </span>i <span class="k">in</span> <span class="si">$(</span><span class="nb">seq</span> <span class="nt">-f</span> <span class="s2">"%05g"</span> 1 111<span class="si">)</span><span class="p">;</span> <span class="k">do
    </span><span class="nv">DIR</span><span class="o">=</span><span class="s2">"</span><span class="nv">$P</span><span class="s2">/disp-</span><span class="nv">$i</span><span class="s2">"</span>
    <span class="nb">cd</span> <span class="s2">"</span><span class="nv">$DIR</span><span class="s2">"</span> <span class="o">||</span> <span class="k">continue
    </span><span class="nb">echo</span> <span class="s2">"Running disp-</span><span class="nv">$i</span><span class="s2">..."</span>

    <span class="c"># 清理旧日志</span>
    <span class="nb">rm</span> <span class="nt">-f</span> OUTCAR vasprun.xml log.vasp

    <span class="c"># 执行 VASP 并捕获退出码</span>
    mpirun <span class="nt">-np</span> 16 vasp_std <span class="o">&gt;</span> log.vasp 2&gt;&amp;1
    <span class="nv">exit_code</span><span class="o">=</span><span class="nv">$?</span>

    <span class="k">if</span> <span class="o">[[</span> <span class="nv">$exit_code</span> <span class="nt">-ne</span> 0 <span class="o">]]</span><span class="p">;</span> <span class="k">then
        </span><span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"❌ disp-</span><span class="nv">$i</span><span class="s2"> FAILED (exit code </span><span class="nv">$exit_code</span><span class="s2">)"</span>
    <span class="k">elif </span><span class="nb">grep</span> <span class="nt">-q</span> <span class="s2">"F= "</span> log.vasp<span class="p">;</span> <span class="k">then
        </span><span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"✅ disp-</span><span class="nv">$i</span><span class="s2"> completed successfully"</span>
    <span class="k">else
        </span><span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"⚠️  disp-</span><span class="nv">$i</span><span class="s2"> might be incomplete (check log.vasp)"</span>
    <span class="k">fi

    </span><span class="nb">cd</span> <span class="s2">"</span><span class="nv">$P</span><span class="s2">"</span>
<span class="k">done</span>
</code></pre></div></div>

<h2 id="3-收集力计算结果">3. 收集力计算结果</h2>

<p>计算 fc3 和 fc2 所需要的力集合（force sets）按如下方式创建：</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>phono3py <span class="nt">--cf3</span> disp-<span class="o">{</span>00001..00057<span class="o">}</span>/vasprun.xml
</code></pre></div></div>

<p>此命令将生成：<code class="language-plaintext highlighter-rouge">FORCES_FC3</code></p>

<p>如果使用较大的超胞进行 fc2 计算时，<code class="language-plaintext highlighter-rouge">FORCES_FC2</code> 通过下列命令创建：</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>phono3py <span class="nt">--cf2</span> disp_fc2-<span class="o">{</span>00001..00002<span class="o">}</span>/vasprun.xml
</code></pre></div></div>

<h2 id="4-创建-fc2hdf-和-fc3hdf">4. 创建 <code class="language-plaintext highlighter-rouge">fc2.hdf</code> 和 <code class="language-plaintext highlighter-rouge">fc3.hdf</code></h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>phono3py --fc-symmetry
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">--fc-symmetry</code> 使 <code class="language-plaintext highlighter-rouge">fc3</code> 和 <code class="language-plaintext highlighter-rouge">fc2</code> 对称化。
<code class="language-plaintext highlighter-rouge">fc2.hdf5</code> 和 <code class="language-plaintext highlighter-rouge">fc3.hdf5</code> 由 <code class="language-plaintext highlighter-rouge">FORCES_FC3</code>（以及可选的 <code class="language-plaintext highlighter-rouge">FORCES_FC2</code>）和 <code class="language-plaintext highlighter-rouge">phono3py_disp.yaml</code> 创建。</p>

<p>此步骤并非必需，但使用 <code class="language-plaintext highlighter-rouge">--fc3</code> 和 <code class="language-plaintext highlighter-rouge">--fc2</code> 选项从这些文件中读取力常数时，可以避免每次运行时都计算 <code class="language-plaintext highlighter-rouge">fc2</code> 和 <code class="language-plaintext highlighter-rouge">fc3</code>。</p>

<h2 id="5-热导率计算">5. 热导率计算</h2>

<p>一个热导率计算的示例命令如下：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>phono3py --mesh 11 11 11 --br
</code></pre></div></div>

<p>该计算可能会耗费较长时间。<code class="language-plaintext highlighter-rouge">--thm</code> 选项表示使用<strong>四面体方法</strong>来执行布里渊区积分以计算声子寿命，这是默认方式。
你也可以使用 <code class="language-plaintext highlighter-rouge">--sigma</code> 选项指定展开宽度（smearing width）作为替代方法。</p>

<p>在上述命令中，程序会对多个网格点上的声子寿命进行串行计算。
由于不同网格点之间的计算彼此独立、无需通信，因此可以将其分开计算。处理步骤如下：</p>

<h4 id="第一步获取不可约网格点ir_grid-points">第一步：获取不可约网格点（ir_grid points）</h4>

<p>首先运行以下命令，并加上 <code class="language-plaintext highlighter-rouge">--wgp</code> 选项来生成不可约网格点信息：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>phono3py --fc3 --fc2 --mesh 11 11 11 --br --wgp
</code></pre></div></div>

<p>该命令将生成 <code class="language-plaintext highlighter-rouge">ir_grid_points.yaml</code> 文件，其中包含所有 <strong>不可约 q 点</strong> 的信息。你可以使用以下命令查看其网格索引：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>grep grid_point: ir_grid_points.yaml | awk '{printf("%d ", $3)}'
</code></pre></div></div>

<p>输出可能如下所示：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0 1 2 3 4 5 12 13 14 15 16 17 18 19 20 21 24 25 26 27 28 29 30 31 36 37 38 39 40 41 48 49 50 51 60 61 148 149 150 151 160 161 162 163 164 165 172 173 174 175 184 185 297 298 309 310
</code></pre></div></div>

<h4 id="第二步计算部分不可约网格点上的声子寿命">第二步：计算部分不可约网格点上的声子寿命</h4>

<p>你可以先计算前 10 个不可约网格点上的声子寿命，并将其存入 <code class="language-plaintext highlighter-rouge">gamma</code> 文件中，命令如下：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>phono3py --mesh 11 11 11 --br --write-gamma --gp 0 1 2 3 4 5 12 13 14 15
</code></pre></div></div>

<h4 id="第三步完成所有网格点计算后合并结果">第三步：完成所有网格点计算后，合并结果</h4>

<p>当你完成了对所有不可约网格点（如 0, 1, …, 310）上的声子寿命计算后，使用 <code class="language-plaintext highlighter-rouge">--read-gamma</code> 选项合并它们：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>phono3py --fc3 --fc2 --mesh 11 11 11 --br --read-gamma
</code></pre></div></div>

<p>如果该命令顺利运行完毕，之前为每个网格点单独生成的 <code class="language-plaintext highlighter-rouge">.hdf5</code> 文件就不再需要，可以安全删除。</p>]]></content><author><name></name></author><category term="Calculation" /><summary type="html"><![CDATA[VASP 是第一性原理软件。 Phono3py可以通过三阶力常数计算声子-声子相互作用。从而计算晶格热导率、声子寿命/谱线宽度、自能的虚部（最低阶近似）、联合态密度（JDOS）和加权联合态密度（w-JDOS）。]]></summary></entry><entry><title type="html">训练神经进化机器学习势</title><link href="https://lyushisyan.github.io/zh-CN/blog/2025/nep-train/" rel="alternate" type="text/html" title="训练神经进化机器学习势" /><published>2025-04-18T02:36:10+03:00</published><updated>2025-04-18T02:36:10+03:00</updated><id>https://lyushisyan.github.io/blog/2025/nep-train</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2025/nep-train/"><![CDATA[<p>经典的原子间势能在原子模拟中起着关键作用，可以高效计算材料的各种性质。
基于机器学习模型构建的原子间势能能够在大幅减少计算时间的情况下，达到与量子力学相当的精度。</p>

<p>目前，已经通过多种模型构建过机器学习势，包括：</p>
<ul>
  <li>人工神经网络 [Phys.Rev.Lett. 98, 146401 (2007)]</li>
  <li>高斯回归 [Phys.Rev.Lett. 104, 136403 (2010)]</li>
  <li>线性回归 [J. Comput. Phys. 285, 316 (2015)]</li>
</ul>

<p>对于任何模型，都需要通过用量子力学数据训练模型来确定许多拟合参数。大量的拟合参数是机器学习势能相较于传统经验势能具有优越插值能力的基础。</p>

<p>然而，找到一组优化的参数并非易事。神经网络势能的传统训练方法基于梯度下降，可能会陷入模型损失函数的局部最小值，从而导致次优解。</p>

<p>更好的训练方法基于<strong>进化算法</strong>，这种全局搜索方法与神经网络结合被称为<strong>神经进化</strong>。</p>

<p>最先进的进化算法，<strong>可分离自然进化策略</strong>，非常适合用于演化大规模神经网络。
[J. Mach. Learn. Res. 15, 949 (2014)]</p>

<p>尽管进化算法不太可能陷入局部最小值，但这些基于种群的方法需要在一次迭代内多次评估损失函数，通常比基于梯度下降的算法计算量更大。</p>

<h2 id="1-从坐标到描述符向量">1. 从坐标到描述符向量</h2>

<p>在机器学习势函数中，位置势能 $U_i$ 并不是直接作为相对坐标 ${\mathbf r_{ij}}$ 的函数进行建模，而是作为<strong>高维描述符向量</strong>的函数，该向量的分量对于空间平移、三维旋转和反演以及相同种类原子的排列是不变的。</p>

<p>已经提出了许多描述符，例如：</p>
<ul>
  <li>Behler 的对称函数 (Behler’s symmetry functions) [J. Chem. Phys. 134, 074106 (2011)]</li>
  <li>平滑原子位置重叠 (smooth overlap of atomic positions (SOAP)) [Phys.Rev.B 87, 184115 (2013)]</li>
  <li>双谱 (bispectrum) [Phys.Rev.Lett. 104, 136403 (2010)]</li>
  <li>库仑矩阵 (Coulomb matrix) [Phys. Rev. Lett. 108, 058301 (2012)]</li>
  <li>矩张量 (moment tensor) [Multis. Model. Simul. 14, 1153 (2016)]</li>
  <li>原子簇展开 (atomic cluster expansions) [Phys.Rev.B 99, 014104 (2019).]</li>
  <li>嵌入原子描述符 (embedded atom descriptor) [J. Phys. Chem. Lett. 10, 4962 (2019)]</li>
  <li>高斯矩 (Gaussian moments) [J. Chem. Theory Comput. 16, 5410 (2020)]</li>
  <li>原子置换不变多项式 (atomic permutationally invariant polynomials) [Mach. Learn.: Sci. Technol. 1, 015004 (2020)]</li>
</ul>

<p>还有一些库实现了各种描述符。
[Comput. Phys. Commun. 207, 310 (2016)]
[Comput. Phys. Commun. 247, 106949 (2020)]
[Mach. Learn.: Sci. Technol. 2, 027001 (2021)]</p>

<p>不同的原子环境描述符在这里： [J. Chem. Phys. 150, 154110 (2019)]</p>

<h3 id="11-单组分系统">1.1 单组分系统</h3>

<p>下面介绍的描述符受到<strong>Behler的对称函数</strong>和<strong>优化版SOAP</strong>的启发。</p>

<p>对于单组分系统中的中心原子 $i$，我们定义了一组<strong>径向描述符分量</strong> ($n\geq 0$)</p>

\[q_n^i = \sum_{j\neq i} g_n(r_{ij}) \tag{1}\]

<p>以及一组<strong>角度描述符分量</strong> ($n\geq 0$ 且 $n\geq 1$)</p>

\[q_{nl}^i = \sum_{j\neq i}\sum_{k\neq i} g_n(r_{ij}) g_n(r_{ik}) P_l(\cos\theta_{ijk}) \tag{2}\]

<p>其中，$P_l(\cos\theta_{ijk})$ 是 $l$ 阶的 Legendre 多项式，$\theta_{ijk}$ 是由 $ij$ 和 $ik$ 键所形成的夹角。</p>

<p>函数 $g_n(r_{ij})$ 是<strong>径向函数</strong>，我们选择将其表示为变量 $x\equiv2(r_{ij}/r_c − 1)^2−1$ 的第一类 Chebyshev 多项式：</p>

\[g_n(r_{ij}) = \frac{T_n(x)+1}{2} f_c(r_{ij}) \tag{3}\]

<p>变量 $x$ 被定义为取值范围从 -1 到 1 。</p>

<p>函数 $f_c(r_{ij})$ 是一个<strong>截断函数</strong></p>

\[f_c(r_{ij}) =
\begin{cases}
\left (1+\cos\left (\pi r_{ij}/{r_c}\right)\right) /2 &amp;\quad r\leq r_c \\  
0 &amp;\quad r &gt; r_c\\
\end{cases}  \tag{4}\]

<p>请注意，径向函数同时用于描述符的径向和角向分量中。</p>
<ul>
  <li>在径向分量中，径向展开达到给定阶数 $n_\text{max}^{\text R}$，即 $n = 0, 1,…, n_\text{max}^{\text R}$。</li>
  <li>对于角向分量，径向展开达到 $n_\text{max}^{\text A}$，即 $n = 0, 1,…, n_\text{max}^{\text A}$，角向展开达到 $l_\text{max}$，即 $l = 1,…,l_\text{max}$。</li>
</ul>

<p>完整的描述符向量的维度为</p>

\[N_\text{des} = (n_\text{max}^{\text R} + 1) + (n_\text{max}^{\text A} + 1) l_\text{max} \tag{5}\]

<p>请注意，径向和角向分量的截断半径不一定相同，分别用 $r_c^\text R$ 和 $r_c^\text A$ 表示可以取不同的值。</p>
<ul>
  <li>径向分量可用于表示相对较长程的相互作用（例如库仑和范德华相互作用），</li>
  <li>而角向分量主要描述中程相互作用。</li>
</ul>

<h3 id="12-多组分系统">1.2 多组分系统</h3>

<p>在上述讨论中，我们忽略了原子种类。
对于多组分系统，构建描述符的方法是：</p>
<ul>
  <li>将公式 (1) 中的项乘以权重因子，如 $Z_j$</li>
  <li>将公式 (2) 中的项乘以权重因子，例如 $Z_jZ_k$
该方法已被采用在 PyXtal_FF 包中，并应用于其中实现的所有描述符。</li>
</ul>

<p>基于我们在公式 (3) 中对 $g_n(r_{ij})$ 的定义，这将导致截断函数的修改：$f_c(r_{ij})$ 变为 $f_c(r_{ij})Z_j$ 或者 $f_c(r_{ij})\sqrt{Z_iZ_j}$ 。</p>

<h2 id="2-从描述符到位能">2. 从描述符到位能</h2>

<p>在机器学习势中，位能被视作描述符分量集合 ${q_{nl}^i}$ 的函数</p>

\[U_i=U_i({q_{nl}^i}) \tag{6}\]

<p>这是一个多变量标量函数。</p>

<p>不同的机器学习模型已被用于构建这个多变量函数，包括<strong>神经网络</strong>、<strong>高斯回归</strong>和<strong>线性回归</strong>。在NEP中，我们选择<strong>前馈神经网络</strong>作为机器学习模型。</p>

<p>描述符向量作为神经网络的输入层，位能量作为输出层。在两者之间，可以有一个或多个隐藏层的神经元（节点）。</p>

<p>描述符向量作为输入层与（第一）隐藏层相连。为便于表述，我们将两个标签 $n$ 和 $l$ 合并为一个单一标签 $\nu = (nl)$，并将原子 $i$ 的描述符向量表示为 $q_\nu^i$（$1\leq \nu \leq N_\text{des}$）。</p>

<p>隐藏层的状态也可以表示为一个向量 $x_\mu (1\leq\mu\leq N_\text{neu})$，其中 $N_\text{neu}$ 是隐藏层中神经元的数量。</p>

<p>隐藏层状态向量通过线性与非线性变换的组合从输入向量得到。</p>

\[x_\mu = \tanh\left(\sum_{\nu=1}^{N_\text{des}}w_{\mu\nu}^{(1)}q_\nu^i - b_\mu^{(1)}\right) \tag{7}\]

<p>其中 $w_{\mu\nu}^{(1)}$ 是神经元 $x_\mu$ 和 $q_\nu^i$ 之间的连接权重，$b_\mu^{(1)}$ 是神经元 $x_\mu$ 的偏置。</p>

<p>我们选择双曲正切函数作为隐藏层中的非线性变换，也称为<strong>激活函数</strong>。</p>

<p>输出层的状态，即位点能量，被计算为隐藏层状态向量的线性组合</p>

\[U_i = \sum_{\mu=1}^{N_\text{neu}}w_{\mu}^{(2)}x_\mu - b^{(2)} \tag{8}\]

<p>其中 $w_{\mu}^{(2)}$ 是神经元 $U_i$ 和 $x_\mu$ 之间的连接权重，$b^{(2)}$ 是神经元 $U_i$ 的偏置。</p>

<h2 id="3-训练机器学习势">3. 训练机器学习势</h2>

<h3 id="31-定义损失函数">3.1 定义损失函数</h3>

<p>训练的目的是确定神经网络中的一组权重和偏置，以使<strong>损失函数</strong>最小化。
<strong>损失函数</strong>量化了来自机器学习势计算出的量（能量、力和应力）与训练集中对应的量之间的误差，而训练集中的数据通常是通过量子力学计算准备的。</p>

<p>我们将神经网络中的一组参数表示为向量 $\mathbf z$，其维度为参数的总数 $N_\text{par}$。对于具有单个隐藏层的神经网络</p>

\[N_\text{par} = (N_\text{des}+2)N_\text{neu} + 1 \tag{9}\]

<p>我们可以将<strong>损失函数</strong>表示为<strong>神经网络参数</strong>的函数</p>

\[L = L(\mathbf z) \tag{10}\]

<p>并将其训练过程表述为一个<strong>实值优化问题</strong></p>

\[\mathbf z^* = \min L(\mathbf z) \tag{11}\]

<p>这里的 $\mathbf z^*$ 是一组最优参数。</p>

<p>损失函数由几部分的加权和组成，我们分别定义了能量、力和应力的损失函数，记为 $L_\text{e}(\mathbf z)$、$L_\text{f}(\mathbf z)$ 和 $L_\text{v}(\mathbf z)$。</p>

<p>此外，我们还考虑了正则化项的损失函数，记为 $L_1(\mathbf z)$ 和 $L_2(\mathbf z)$。</p>

<p>总损失函数被定义为所有这些单独的损失函数的加权和：</p>

\[L(\mathbf z) = \lambda_\text{e}L_\text{e}(\mathbf z) + \lambda_\text{f}L_\text{f}(\mathbf z) + \lambda_\text{v}L_\text{v}(\mathbf z) + \lambda_1L_1(\mathbf z) + \lambda_2L_2(\mathbf z) \tag{12}\]

<ul>
  <li><strong>能量损失函数</strong>定义为以下均方根误差（RMSE）：</li>
</ul>

\[L_\text{e}(\mathbf z) = \left( \frac{1}{N_\text{str}} \sum_{n=1}^{N_\text{str}} (U^\text{NEP}(n,\mathbf z)-U^\text{tar}(n))^2 \right)^{1/2} \tag{13}\]

<p>其中 $N_\text{str}$ 是训练数据集中结构的总数，$U^\text{tar}(n)$ 是第 $n$ 个结构的单原子的目标能量，$U^\text{NEP}(n, \mathbf z)$ 是使用参数为 $\mathbf z$ 的 NEP 势计算出的相应能量。</p>

<p>系统的能量 $U$ 的定义为  </p>

\[U = \sum_i U_i \tag{14}\]

<p>其中，原子 $i$ 的位点能量 $U_i$ 为 $U_i = U_i({\mathbf r_{ij}})$，$\mathbf r_{ij}$ 是原子 $i$ 到原子 $j$ 的相对位置 $\mathbf r_{ij} \equiv \mathbf r_j - \mathbf r_i$。</p>

<ul>
  <li><strong>力的损失函数</strong>定义为以下均方根误差：</li>
</ul>

\[L_\text{f}(\mathbf z) = \left( \frac{1}{3N} \sum_{i=1}^{3N} (\mathbf F^\text{NEP}_i(\mathbf z)-\mathbf F^\text{tar}_i)^2 \right)^{1/2} \tag{15}\]

<p>其中 $N$ 是训练数据集中原子的总数，$\mathbf F^\text{tar}_i$ 和 $\mathbf F^\text{NEP}_i(\mathbf z)$ 分别是第 $i$ 个原子的目标力和使用参数 $\mathbf z$ 从 NEP 势计算出的力。</p>

<p>力的表达式为</p>

\[\mathbf F_i = \sum_{j\neq i} \mathbf F_{ij} \tag{16}\]

\[\mathbf F_{ij} = -\mathbf F_{ji} = \frac{\partial U_i}{\partial \mathbf r_{ij}} - \frac{\partial U_j}{\partial \mathbf r_{ji}} \tag{17}\]

<p>这里，$\mathbf F_{ij}$ 为原子 $j$ 作用在原子 $i$ 上的力。</p>

<ul>
  <li><strong>应力损失函数</strong>被定义为以下均方根误差：</li>
</ul>

\[L_\text{v}(\mathbf z) = \left( \frac{1}{6N_\text{str}} \sum_{n=1}^{N_\text{str}} \sum_{\mu\nu} (W^\text{NEP}_{\mu\nu}(n,\mathbf z)-W^\text{tar}_{\mu\nu}(n))^2 \right)^{1/2} \tag{18}\]

<p>其中，\(W^\text{tar}_{\mu\nu}(n)\) 和 \(W^\text{NEP}_{\mu\nu}(n,\mathbf z)\) 分别表示第 \(n\) 个结构的单原子应力张量的 \(\mu\nu\) 目标分量和通过 NEP 势能计算得到的该分量。</p>

<p>应力的表达式为</p>

\[\mathbf W_i = \sum_{j\neq i} \mathbf r_{ij} \otimes \frac{\partial U_j}{\partial \mathbf r_{ji}} \tag{19}\]

<ul>
  <li><strong>正则化损失函数</strong></li>
</ul>

\[L_1(\mathbf z) = \frac{1}{N_\text{par}} \sum_{n=1}^{N_\text{par}}|z_n| \tag{20}\]

\[L_2(\mathbf z) = \left(\frac{1}{N_\text{par}} \sum_{n=1}^{N_\text{par}}z_n^2\right)^{1/2} \tag{21}\]

<p>这种正则化可以通过促使权重参数的绝对值比没有正则化时更小，从而帮助防止过拟合。</p>

<p>公式(12)中权重参数的值显然取决于相关量的单位：</p>
<ul>
  <li>在使用以电子伏特每原子(eV/atom)为能量和应力单位、以电子伏特每埃(eV/Å)为力的单位时，$\lambda_\text{e} = \lambda_\text{f} = \lambda_\text{v} =1$ 是一个非常好的选择。</li>
  <li>正则化项的权重参数 $\lambda_1$ 和 $\lambda_2$ 需要调整，以保持过度拟合与欠拟合之间的良好平衡。</li>
</ul>

<h3 id="32-可分离的自然进化策略作为训练算法">3.2 可分离的自然进化策略作为训练算法</h3>

<p>这是一种遵循损失函数的自然梯度来更新解群搜索分布的实值进化优化原理方法。</p>

<p>它可以被视为一种无导数的黑箱优化器，非常适合最小化公式(12)中的复杂损失函数。</p>

<p>我们训练算法的工作流程如下：  </p>

<p>（1）<strong>初始化</strong>
在解空间（维度为 $N_\text{par}$）中创建一个初始搜索分布，其均值向量为 $\textbf m$，标准差向量为 $\mathbf s$。
$\textbf m$ 的各分量可以在 $−1/2$ 到 $1/2$ 之间均匀选择的随机数，而 $\mathbf s$ 的各分量可以选择为常数，如0.1。</p>

<p>（2）<strong>循环迭代</strong> $N_\text{gen}$ 代：  </p>
<ul>
  <li>a. 基于当前的 $\textbf m$ 和 $\textbf s$ 创建解的群 $\mathbf z_k (1 \leq k \leq N_\text{pop})$ （符号 $\odot$ 表示元素级乘法）</li>
</ul>

\[\mathbf z_k \leftarrow \textbf m + \textbf s \odot \mathbf r_k \tag{22}\]

<p>其中种群规模为 $N_\text{pop}$，$\mathbf r_k$ 是一组均值为 0 方差为 1 的高斯分布随机数。</p>

<ul>
  <li>
    <p>b. 评估种群中所有个体解 $\mathbf z_k$ 的损失函数 $L(\mathbf z_k)$，并根据损失函数值从小到大对它们进行排序</p>
  </li>
  <li>
    <p>c. 更新自然梯度：</p>
  </li>
</ul>

\[\nabla_{\mathbf m} \mathbf J \leftarrow \sum_{k=1}^{N_\text{pop}}u_k\mathbf r_k \tag{23}\]

\[\nabla_{\mathbf s} \mathbf J \leftarrow \sum_{k=1}^{N_\text{pop}}u_k (\mathbf r_k \odot \mathbf r_k - 1) \tag{24}\]

<p>其中 $u_k$ 是一组基于排名的效用值，用于引导种群向更优个体解的方向演化。</p>

<ul>
  <li>d. 更新搜索分布的均值和标准差：</li>
</ul>

\[\textbf m \leftarrow \textbf m + \eta_{\mathbf m} (\textbf s \odot \mathbf \nabla_{\mathbf m} \mathbf J) \tag{25}\]

\[\textbf s \leftarrow \textbf s + \exp (\frac{\eta_\mathbf{s}}{2} \nabla_{\mathbf s} \mathbf J) \tag{25}\]

<p>其中，$\eta_{\mathbf m}$ 和 $\eta_{\mathbf s}$ 可以分别理解为 $\mathbf m$ 和 $\mathbf s$ 的学习率。</p>]]></content><author><name></name></author><category term="Machine-Learning" /><summary type="html"><![CDATA[经典的原子间势能在原子模拟中起着关键作用，可以高效计算材料的各种性质。 基于机器学习模型构建的原子间势能能够在大幅减少计算时间的情况下，达到与量子力学相当的精度。]]></summary></entry><entry><title type="html">电子和声子的兰道尔理论</title><link href="https://lyushisyan.github.io/zh-CN/blog/2025/el-ph-landauer/" rel="alternate" type="text/html" title="电子和声子的兰道尔理论" /><published>2025-03-05T09:36:10+03:00</published><updated>2025-03-05T09:36:10+03:00</updated><id>https://lyushisyan.github.io/blog/2025/el-ph-landauer</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2025/el-ph-landauer/"><![CDATA[<p>在纳米尺度的热输运问题中，如何从微观角度准确地描述电子或声子在两个接触区（热库）之间的热流是研究热点。Landauer 理论最初主要用于分析电子在量子导线中的输运，后来这一思想被推广到分析诸如声子等玻色子体系，进一步揭示了纳米或微纳结构中的输运本质。</p>
<ul>
  <li><strong>电子（费米子）</strong>：遵循费米-狄拉克分布。一个量子态中最多容纳两个电子（自旋简并）。化学势 $\mu$ 对电子输运起着关键作用。</li>
  <li><strong>声子（玻色子）</strong>：遵循玻色-爱因斯坦分布。一个量子态中可以容纳无限多个声子（无自旋简并，通常也不需要化学势 $\mu=0$）。</li>
</ul>

<h2 id="1-landauer-理论与热流描述">1. Landauer 理论与热流描述</h2>
<p>Landauer 理论在热传输中的核心观点是：<strong>输运过程可以被理解为量子态在相对简短的器件区域内的散射或透射</strong>，而输运的上限由可用的模态（传播通道）数目以及这些模态可通过器件的概率（即透射函数 $\tau(\mathbf{k})$）所决定。</p>

<p>一个简单的物理图像是：</p>
<ul>
  <li>将器件看成一个散射区域，左侧热库和右侧热库的分布函数不同。</li>
  <li>若某个波矢 $\mathbf{k}$ 对应的粒子可向右传播（$k_x &gt; 0$），则有一部分粒子从左库传到右库；反之，$k_x &lt; 0$ 则可从右库传到左库。</li>
  <li>最终的净热流等于“从左到右的热流”减去“从右到左的热流”。</li>
</ul>

<p>从左侧热库流向右侧热库的热流密度（单位：$\text{W}/\text{m}^{d-1}$）一般可写为：
\(J_{Q,L\to R}(T_1) = \frac{1}{L^d}\sum_p\sum_{\mathbf{k};k_x&gt;0} v_{gx,p}(\mathbf{k}) \tau_p(\mathbf{k}) [E_{i,p}(\mathbf{k}) - \mu][f_i^0(E_{i,p}(\mathbf{k}), T_1) + c_0]\)
其中变量含义如下：</p>
<ul>
  <li>$v_{gx,p}$：声子在 $x$ 方向的群速度分量；</li>
  <li>$\tau_p(\mathbf{k})$：透射函数，表示声子穿过器件的概率；</li>
  <li>$E_{i,p}$：粒子能量；</li>
  <li>$f_i^0$：平衡态分布函数；</li>
  <li>$\mu$：化学势；</li>
  <li>$c_0$：零点能修正项。</li>
</ul>

<p>类似地，可以写出从右热库到左热库的热流表达式，两者相加可得<strong>净热流</strong>： <br />
\(J_{Q,\text{net}} = \frac{1}{L^d}\sum_p\sum_{\mathbf{k};k_x&gt;0} v_{gx,p} \tau_p [E_{i,p} - \mu][f_i^0(T_1) - f_i^0(T_2)]\)
$c_0$ 零点能在净热流中相互抵消，说明它对热输运没有净贡献。</p>

<h2 id="2-从波矢求和到积分形式">2. 从波矢求和到积分形式</h2>
<p>为了更清晰地进行分析，通常将波矢求和形式转换为积分形式（Landauer 积分）。不同维度下的积分形式如下：</p>
<h4 id="一维系统1d">一维系统（1D）：</h4>
<p>\(J_{Q,\text{net}} = \sum_p \int_0^\infty \frac{v_{g,p} \tau_p [E_{i,p}(k) - \mu]}{2\pi} [f_i^0(T_1) - f_i^0(T_2)] dk\)</p>
<h4 id="二维系统2d">二维系统（2D）：</h4>
<p>\(J_{Q,\text{net}} = \sum_p\int_{-\pi/2}^{\pi/2}\int_0^\infty\frac{v_{g,p}\cos\theta\tau_p [E_{i,p}(k)-\mu]}{4\pi^2}[f_i^0(T_1)-f_i^0(T_2)]kdkd\theta\)
\(= \frac{1}{2\pi^2}\sum_p\int_0^\infty v_{g,p}\tau_p [E_{i,p}(k)-\mu] [f_i^0(T_1)-f_i^0(T_2)]kdk\)</p>
<h4 id="三维系统3d">三维系统（3D）：</h4>
<p>\(J_{Q,\text{net}} = \sum_p\int_0^{2\pi}\int_{0}^{\pi/2}\int_0^\infty\frac{v_{g,p}\cos\theta\tau_p [E_{i,p}(k)-\mu]}{8\pi^3} \nonumber \times[f_i^0(T_1)-f_i^0(T_2)]k^2dk\sin\theta d\theta d \varphi\)
\(= \frac{1}{8\pi^2}\sum_p\int_0^\infty v_{g,p}\tau_p [E_{i,p}(k)-\mu] [f_i^0(T_1)-f_i^0(T_2)]k^2dk\)
其中角度变量 $\theta$ 表示波矢方向与传输方向 $x$ 的夹角。分析中常假设透射函数与方向无关。</p>

<p>引入态密度，将波矢空间积分转化为频率 $\omega$ 或能量 $E$ 空间积分，更便于物理解释与工程计算。</p>
<h4 id="对于声子">对于声子：</h4>
<p>引入频率态密度 $D(\omega)$，并使用 $\hbar\omega = E$，由于 $\mu = 0$，热流密度为：</p>
<ul>
  <li><strong>一维：</strong>
\(J_{Q,\text{ph}} = \frac{1}{2} \sum_p \int_0^\infty v_{g,p} D_{\text{1D}}(\omega) \tau_p(\omega) \hbar\omega [f_{\text{BE}}^0(T_1) - f_{\text{BE}}^0(T_2)] d\omega\)</li>
  <li><strong>二维：</strong> <br />
\(J_{Q,\text{ph}} = \frac{1}{\pi} \sum_p \int_0^\infty v_{g,p} D_{\text{2D}}(\omega) \tau_p(\omega) \hbar\omega [f_{\text{BE}}^0(T_1) - f_{\text{BE}}^0(T_2)] d\omega\)</li>
  <li><strong>三维：</strong> <br />
\(J_{Q,\text{ph}} = \frac{1}{4} \sum_p \int_0^\infty v_{g,p} D_{\text{3D}}(\omega) \tau_p(\omega) \hbar\omega [f_{\text{BE}}^0(T_1) - f_{\text{BE}}^0(T_2)] d\omega\)</li>
</ul>

<h4 id="对于电子">对于电子：</h4>
<p>电子存在非零化学势 $\mu$，引入能量态密度 $D(E)$，则电子热流密度为：</p>
<ul>
  <li><strong>一维：</strong> 
\(J_{Q,\text{el}} = \frac{1}{2} \sum_p \int_0^\infty v_{g,p} D_{\text{1D}}(E) \tau_p(E) (E - \mu) [f_{\text{FD}}^0(T_1) - f_{\text{FD}}^0(T_2)] dE\)</li>
  <li><strong>二维：</strong>
\(J_{Q,\text{el}} = \frac{1}{\pi} \sum_p \int_0^\infty v_{g,p} D_{\text{2D}}(E) \tau_p(E) (E - \mu) [f_{\text{FD}}^0(T_1) - f_{\text{FD}}^0(T_2)] dE\)</li>
  <li><strong>三维：</strong> <br />
\(J_{Q,\text{el}} = \frac{1}{4} \sum_p \int_0^\infty v_{g,p} D_{\text{3D}}(E) \tau_p(E) (E - \mu) [f_{\text{FD}}^0(T_1) - f_{\text{FD}}^0(T_2)] dE\)</li>
</ul>

<h2 id="3-模态数与半波长解释">3. 模态数与半波长解释</h2>
<p>为了将定量分析与直观理解结合起来，Landauer 理论中引入了<strong>模态数（number of modes）</strong> 的概念。</p>

<p>我们将其方法借用来分析<strong>热流</strong> $Q$（单位为瓦特），即<strong>热流密度</strong> $J_Q$ 与“面积”的乘积：</p>
<ul>
  <li>对于 1D：面积为 1（或不考虑面积）；</li>
  <li>对于 2D：面积为接触宽度 $W$；</li>
  <li>对于 3D：面积为接触横截面积 $A$。</li>
</ul>

<h3 id="31-声子的热流通式">3.1 声子的热流通式</h3>
<p>对于声子，热流（或热功率）的一般表达式为： <br />
\(Q_{\text{ph}} = \frac{1}{2\pi} \int_0^\infty M(\omega)\tau(\omega)\hbar\omega [f_\text{BE}^0(T_1) - f_\text{BE}^0(T_2)]\,d\omega\)
其中：</p>
<ul>
  <li>$M(\omega)$ 是<strong>模态数（number of modes）</strong>，代表单位横截面积内，频率为 $\omega$ 的声子半波长（$\lambda/2$）的个数；</li>
  <li>$\tau(\omega)$ 是透射函数；</li>
  <li>$f_\text{BE}^0$ 是 Bose-Einstein 分布函数。</li>
</ul>

<h3 id="32-不同维度下的模态数">3.2 不同维度下的模态数</h3>
<p>模态数随维度的不同而变化：</p>
<ul>
  <li><strong>一维：</strong> <br />
\(M(\omega) = M_{\text{1D}}(\omega)\)</li>
  <li><strong>二维：</strong> <br />
\(M(\omega) = W \cdot M_{\text{2D}}(\omega)\)</li>
  <li><strong>三维：</strong> <br />
\(M(\omega) = A \cdot M_{\text{3D}}(\omega)\)
通过 $J_Q(1D)=Q$，$J_Q(2D)=Q/W$，$J_Q(3D)=Q/A$ 与热流密度表达式的对比，可以推导出不同维度下的模态密度 $M(\omega)$ 与态密度 $D(\omega)$ 的关系： <br />
\(M_{\text{1D}}(\omega) = 1 = \pi v_g(\omega) D_{\text{1D}}(\omega)\)
\(M_{\text{2D}}(\omega) = \frac{K(\omega)}{\pi} = \pi \cdot \frac{2v_g(\omega)}{\pi} D_{\text{2D}}(\omega)\)
\(M_{\text{3D}}(\omega) = \frac{K^2(\omega)}{4\pi} = \pi \cdot \frac{v_g(\omega)}{2} D_{\text{3D}}(\omega)\)
其中 $v_g(\omega)$ 是群速度，$K(\omega)$ 是波矢模长。 <br />
我们知道，声子的<strong>频率态密度</strong>为： <br />
\(D_{\text{1D}}(\omega) = \frac{1}{\pi v_g(\omega)}\)
\(D_{\text{2D}}(\omega) = \frac{K(\omega)}{2\pi v_g(\omega)}\)
\(D_{\text{3D}}(\omega) = \frac{K^2(\omega)}{2\pi^2 v_g(\omega)}\)
将上面的态密度代入模态数表达式后，得到如下的结果： <br />
\(M_{\text{1D}}(\omega) = \pi v_g(\omega) \cdot \frac{1}{\pi v_g(\omega)} = 1\)
\(M_{\text{2D}}(\omega) = W \cdot \pi \cdot \left[ \frac{2v_g(\omega)}{\pi} \right] \cdot \frac{K(\omega)}{2\pi v_g(\omega)}\)
\(M_{\text{3D}}(\omega) = A \cdot \pi \cdot \left[ \frac{v_g(\omega)}{2} \right] \cdot \frac{K^2(\omega)}{2\pi^2 v_g(\omega)}\)
    <h3 id="33-空间平均群速度的物理意义">3.3 空间平均群速度的物理意义</h3>
    <p>上述表达式中出现的中括号项，如下所示：</p>
  </li>
  <li>$[2v_g/\pi]$（2D）；</li>
  <li>$[v_g/2]$（3D）；</li>
</ul>

<p>实际上是某一频率下的 <strong>群速度在 $x$ 方向的空间平均值</strong>：</p>
<ul>
  <li><strong>1D</strong>：只能沿 x 方向运动，故平均值即为 $v_g$ 本身；</li>
  <li><strong>2D</strong>：在正半圆范围内积分 $\cos\theta$ 的平均值为 $2/\pi$，故得到 $\langle v_{gx} \rangle = 2v_g/\pi$；</li>
  <li><strong>3D</strong>：在正半球表面上积分 $\cos\theta$ 的平均值为 $1/2$，故得到 $\langle v_{gx} \rangle = v_g/2$。</li>
</ul>

<h3 id="34-与半波长的几何解释">3.4 与半波长的几何解释</h3>
<p>模态数 $M(\omega)$ 还可以用<strong>波长</strong>来解释，即在横截面中能容纳的“半波长”数量（每个模态等价于一个半波）。 <br />
在 1D 中，每个频率仅对应 1 个可能传播的模式； <br />
在 2D 中，可把横向宽度 $W$ 分为若干个“半波”段； <br />
在 3D 中，则是一个截面积 $A$ 的“半波”填充。三维情况下，那些几何因子（例如 $4/\pi$）出现在球坐标或圆截面积分的结果中。 <br />
\((\text{1D}) :\quad M(\omega)=1\)
\((\text{2D}) :\quad M(\omega) = \frac{W}{\lambda/2}\)
\((\text{3D}) :\quad M(\omega) = \frac{A}{4/\pi(\lambda/2)^2}\)</p>

<h3 id="35-对电子的类似分析">3.5 对电子的类似分析</h3>
<p>对电子进行类似分析时，热流（以能量积分形式）为： <br />
\(Q_{\text{el}} = \frac{1}{\pi\hbar} \int_0^\infty M(E) \tau(E)(E - \mu)[f_\text{FD}^0(T_1) - f_\text{FD}^0(T_2)]\,dE\)
其中，Lundstrom 和 Jeong（2013）对具有抛物型能带的电子模态数 $M(E)$ 给出如下表达： 
\((\text{1D}) :\quad M_\text{1D}(E) = H(E - E_c)\)
\((\text{2D}) :\quad M(E) = W \cdot g_v \cdot \frac{\sqrt{2m^(E - E_c)}}{\pi\hbar} \cdot H(E - E_c)\)
\((\text{3D}) :\quad M(E) = A \cdot g_v \cdot \frac{m^(E - E_c)}{2\pi\hbar^2} \cdot H(E - E_c)\)
其中：</p>
<ul>
  <li>$H(E - E_c)$ 是 Heaviside 函数，表示电子必须处于导带以上；</li>
  <li>$g_v$ 是能带简并度；</li>
  <li>$m^*$ 是电子的有效质量；</li>
  <li>$E_c$ 是导带底。</li>
</ul>

<h2 id="4-热导与频谱热导">4. 热导与频谱热导</h2>
<h3 id="41-热导">4.1 热导</h3>
<p><strong>热导</strong> $G_Q$ 是单位温差下的热流率 $Q$，定义为：
\(G_Q = \frac{Q}{T_1 - T_2}\)
当温差很小时，我们可以使用微分形式来表示热导： <br />
\(G_Q(T) = \frac{Q(T + \delta T/2, T - \delta T/2)}{\delta T}\)</p>
<h4 id="对于声子-1">对于声子：</h4>
<p>\(G_Q(T) = \frac{1}{2\pi} \int_0^\infty M(\omega) \tau(\omega) \hbar\omega \frac{\partial f_\text{BE}^0}{\partial T} \, d\omega\)</p>
<h4 id="对于电子-1">对于电子：</h4>
<p>\(G_Q(T) = \frac{1}{\pi\hbar} \int_0^\infty M(E) \tau(E) (E - \mu) \frac{\partial f_\text{FD}^0}{\partial T} \, dE\)
这里，$M$ 是模态数，$\tau$ 是透射函数，$f^0$ 是平衡态分布函数，$\mu$ 是化学势。</p>

<h3 id="42-频谱热导-spectral-conductance">4.2 频谱热导 Spectral Conductance</h3>
<p>热导的积分被积项（即积分内的函数）描述了<strong>每个频率或能量点对总热导的贡献</strong>，称为<strong>频谱热导 $G_Q’$</strong>：</p>
<ul>
  <li><strong>声子：</strong> <br />
\(G_Q'(\omega, T) = \frac{1}{2\pi} M(\omega) \tau(\omega) \hbar\omega \frac{\partial f_\text{BE}^0}{\partial T}\)</li>
  <li><strong>电子：</strong> <br />
\(G_Q'(E, T) = \frac{1}{\pi\hbar} M(E) \tau(E) (E - \mu) \frac{\partial f_\text{FD}^0}{\partial T}\)
这些函数表明，在不同频率（或能量）下，模态数 $M$ 和分布导数 $\frac{\partial f}{\partial T}$ 共同决定了能量传导的强度和频谱分布。</li>
</ul>

<p>为了简化分析，我们可以将热导 $G_Q$ <strong>归一化</strong>为单位模态数（mode）的导热能力。模态数 $M$ 通常依赖于系统的色散关系（即态密度的形式）。如果我们进一步假设<strong>理想透射</strong>（即 $\tau = 1$），那么可以定义一个<strong>归一化频谱热导</strong>，如下式所示： <br />
\(\tilde G_Q' = \frac{G_Q'}{C_0k_BM\tau} = (f_i^0)^2e^xx^2\)
其中 $x = \hbar\omega / k_B T$ 是无量纲能量。</p>

<p>声子情况：
对于低频声子，归一化热导趋于 1，这说明<strong>每一个模态在低频下对热导的贡献几乎相同</strong>，直到声子能量超过“热能” $k_BT$ 为止。</p>

<p>电子情况： <br />
对于低能电子模态，其对热导的贡献很小，这是因为<strong>费米-狄拉克分布中的泡利不相容原理</strong>使得低能电子难以参与热输运。换句话说，热激发能量不足以将这些电子提升到更高能态（即接近费米能级 $E \approx \mu$）。因此，电子的热响应主要来自费米能附近电子态的重新分布。</p>]]></content><author><name></name></author><category term="Physics" /><summary type="html"><![CDATA[在纳米尺度的热输运问题中，如何从微观角度准确地描述电子或声子在两个接触区（热库）之间的热流是研究热点。Landauer 理论最初主要用于分析电子在量子导线中的输运，后来这一思想被推广到分析诸如声子等玻色子体系，进一步揭示了纳米或微纳结构中的输运本质。 电子（费米子）：遵循费米-狄拉克分布。一个量子态中最多容纳两个电子（自旋简并）。化学势 $\mu$ 对电子输运起着关键作用。 声子（玻色子）：遵循玻色-爱因斯坦分布。一个量子态中可以容纳无限多个声子（无自旋简并，通常也不需要化学势 $\mu=0$）。]]></summary></entry><entry><title type="html">基于第一性原理的 PBTE 方法</title><link href="https://lyushisyan.github.io/zh-CN/blog/2025/abinitio-bte/" rel="alternate" type="text/html" title="基于第一性原理的 PBTE 方法" /><published>2025-02-16T09:36:10+03:00</published><updated>2025-02-16T09:36:10+03:00</updated><id>https://lyushisyan.github.io/blog/2025/abinitio-bte</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2025/abinitio-bte/"><![CDATA[<p>微纳尺度热传导中的尺寸效应主要涉及两个关键长度尺度：<strong>声子的波长</strong>和<strong>平均自由程（MFP）</strong>。 <br />
若系统的特征尺寸远大于声子的 MFP，则热传导处于<strong>宏观扩散输运</strong>机制中，此时经典的热扩散方程适用； <br />
若特征尺寸与声子的 MFP 相当，则需考虑<strong>经典尺寸效应</strong>，即<strong>声子弹道输运现象</strong>，此时应采用玻尔兹曼输运方程（BTE）描述能量传输； <br />
若特征尺寸进一步缩小至与声子波长相当，则需考虑声子的<strong>波动性特征</strong>。</p>

<p><strong>第一性原理的 PBTE（Phonon Boltzmann Transport Equation，声子玻尔兹曼输运方程）</strong>其实就是将下面三个计算方法的结合：</p>
<ul>
  <li><strong>第一性原理方法（first-principles method 或 ab initio method）</strong> 是指一种用于数值求解<strong>薛定谔方程</strong>的方法。</li>
  <li><strong>晶格动力学方法（lattice dynamics）</strong>，是指通过原子间力常数（IFCs）计算声子色散关系和弛豫时间的方法。</li>
  <li><strong>玻尔兹曼输运方程（BTE）</strong> 则是通过将声子色散关系和弛豫时间作为输入，计算体系总热导率的热传输模型。</li>
</ul>

<h2 id="1-第一性原理方法">1. 第一性原理方法</h2>

<p>第一性原理（first-principles）方法，又称从头算（ab initio）方法，指在量子力学框架下，通过<strong>最少</strong>的经验参数来求解材料中的电子结构、原子间相互作用等微观信息。它主要基于对薛定谔方程（或相应的有效方程）的数值解，从而得到材料的基态电子密度、能带结构、总能量以及其他相关物理性质。 <br />
在固体物理与材料科学中，第一性原理方法大多以 密度泛函理论（Density Functional Theory, DFT）为基础。由于完整的多体薛定谔方程难以直接求解，DFT 提供了一种在电子密度空间中处理多体问题的有效途径，被广泛应用于各种体系（如金属、半导体、绝缘体，以及分子、表面等）中。</p>

<h3 id="11-密度泛函理论的基本思想">1.1 密度泛函理论的基本思想</h3>

<p>密度泛函理论的核心思想源自于 Hohenberg-Kohn 定理和 Kohn-Sham 方程：</p>
<ol>
  <li><strong>Hohenberg-Kohn 定理</strong>指出，体系基态的所有物理量都可以视为电子密度 $\rho(\mathbf{r})$ 的泛函；也就是说，只要知道体系的基态电子密度，就能唯一确定体系的哈密顿量和能量等信息。</li>
  <li><strong>Kohn-Sham 方程</strong>将真实多电子体系映射为一个关于独立电子的辅助体系，通过一个合适的交换-关联势（exchange-correlation potential）来近似地描述真实电子间的相互作用。这样，求解含有电子-电子相互作用的多体问题，就转化为求解一组类单电子方程：</li>
</ol>

\[\left[ -\frac{\hbar^2}{2m}\nabla^2 + V_\text{ext}(\mathbf{r}) + V_\text{H}(\mathbf{r}) + V_\text{xc}(\mathbf{r}) \right] \phi_i(\mathbf{r}) = \epsilon_i \phi_i(\mathbf{r})\]

<p>其中：</p>
<ul>
  <li>$V_\text{ext}(\mathbf{r})$ 为原子核对电子的库仑势；</li>
  <li>$V_\text{H}(\mathbf{r})$ 为经典 Hartree 库仑势；</li>
  <li>$V_\text{xc}(\mathbf{r})$ 为交换-关联势，包含所有复杂的多体效应。</li>
</ul>

<p>在实际计算中，人们需要选用适当的交换-关联泛函（如局域密度近似 LDA、广义梯度近似 GGA 以及更高阶杂化泛函等），并结合赝势（pseudopotential）或全电子方法（如 PAW、APW+lo）等来有效处理实空间和动量空间。</p>

<h3 id="12-从-dft-获取原子间力常数ifcs">1.2 从 DFT 获取原子间力常数（IFCs）</h3>

<p>在研究热导时，关键的一步是获取材料的<strong>原子间力常数（interatomic force constants, IFCs）</strong>。这些力常数用于构造动力学矩阵并计算晶格动力学性质（如声子色散关系、声子寿命等）。从第一性原理出发，人们常用以下两种主流方法来获取 IFCs：</p>

<h4 id="121-线性响应方法density-functional-perturbation-theory-dfpt">1.2.1 线性响应方法（Density Functional Perturbation Theory, DFPT）</h4>

<p>在密度泛函微扰理论框架下，对晶体的周期性结构施加一个小的周期性扰动，求解线性化的 Kohn-Sham 方程，从而直接得到势能对原子位移的一阶、二阶甚至三阶响应。</p>
<ul>
  <li>DFPT 具备在声子波矢空间中直接计算各种力常数和声子模的优点，且无需在实空间中进行大规模有限位移计算。</li>
  <li>通过 DFPT 可获得二阶（简谐）和三阶（非简谐）原子间力常数，为后续的声子色散和散射分析打下基础。</li>
</ul>

<h4 id="122-有限位移法finite-displacement-method-fdm">1.2.2 有限位移法（Finite Displacement Method, FDM）</h4>

<p>在有限位移法中，通过在超胞（supercell）模型中对某个原子施加小的离散位移（例如 0.01 Å），计算体系总能量或力的变化，从而数值求解二阶或更高阶 IFCs。</p>
<ul>
  <li>需要构造足够大的超胞，以保证相互作用在边界处衰减到可以忽略；</li>
  <li>需要对各种不同位移构型做多次能量/力计算，以提取完整的二阶或三阶 IFCs。</li>
</ul>

<p>无论是 DFPT 还是有限位移法，都需要在 DFT 水平上做能量或力的计算。由于声子性质对计算精度相当敏感，需要在计算流程中仔细选择交换-关联泛函、平面波截断能（plane-wave cutoff）、$\mathbf{k}$-点采样密度等，以确保得到高精度的原子间力常数。</p>

<h2 id="2-简谐与非简谐晶格动力学">2. 简谐与非简谐晶格动力学</h2>

<p>在简谐晶格动力学（harmonic lattice dynamics）中，通过二阶原子间力常数（IFCs）可以获得声子的色散关系 $\omega_\lambda(\mathbf{q})$。一旦得到了色散关系，就可以计算每一个声子模 $\lambda$ 的比热容。 <br />
声子模 $\lambda$ 的群速度定义为频率对倒易空间坐标的梯度：$\mathbf{v}<em>\lambda = \nabla</em>\mathbf{q} \omega_\lambda$ <br />
声子的<strong>弛豫时间</strong> $\tau_\lambda$ 需要通过 <strong>非简谐晶格动力学（anharmonic lattice dynamics）</strong> 计算获得，该计算需要使用二阶（简谐）与高阶（非简谐）IFCs。</p>

<h3 id="21-色散关系"><strong>2.1 色散关系</strong></h3>

<p>对于一个周期性晶体，若原子在平衡位置附近仅发生小幅度振动，则体系总势能 $U$ 可以展开为泰勒级数：</p>

\[U = U_0 + \frac{1}{2!} \sum_{ij}\sum_{\alpha\beta} \Phi_{ij}^{\alpha\beta} u_i^\alpha u_j^\beta + \frac{1}{3!} \sum_{ijk}\sum_{\alpha\beta\gamma} \Psi_{ijk}^{\alpha\beta\gamma} u_i^\alpha u_j^\beta u_k^\gamma + \mathcal{O}(u^4)\]

<p>其中：</p>
<ul>
  <li>$U_0$：平衡态势能；</li>
  <li>$u_{i}^\alpha$：第 $i$ 个原子在 $\alpha$ 方向的位移；</li>
  <li>$\Phi_{ij}^{\alpha\beta}$：二阶原子间力常数（harmonic IFCs）；</li>
  <li>$\Psi_{ijk}^{\alpha\beta\gamma}$：三阶原子间力常数（anharmonic IFCs）；</li>
  <li>$\mathcal{O}(u^4)$：更高阶项。</li>
</ul>

<p>由于在平衡态时对任意原子 $i$ 都有 $\mathbf F_i = -\nabla_i U = 0$，因此在势能展开中不会出现一次项。若在<strong>简谐近似</strong>下忽略所有高于二阶的项，则势能只保留二阶 IFCs，可以得到运动方程。</p>

<p>如果晶体中第 $i$ 个原子是第 $l$ 个晶胞中的第 $b$ 个原子，而 $j$ 对应于晶胞 $l’$ 中的第 $b’$ 个原子，那么根据牛顿第二定律，有：</p>

\[m_b\frac{d^2 u_{lb}^\alpha (t)}{d t^2} = -\sum_{l'b',\beta} \Phi_{lb,l'b'}^{\alpha\beta} u_{l'b'}^{\beta} (t)\]

<p>其中：</p>
<ul>
  <li>$m_b$：为同一晶胞中第 $b$ 个原子的质量；</li>
  <li>$u_{lb}^\alpha (t)$：在第 $l$ 个晶胞中、第 $b$ 个原子沿 $\alpha$ 方向的位移。</li>
</ul>

<p>若假设解的形式为<strong>平面波</strong>：</p>

\[u_{lb}^\alpha (t) = \frac{1}{\sqrt{m_b}}\Lambda_\lambda e_{b,\lambda}^\alpha e^{i(\mathbf q\cdot\mathbf R_l - \omega_\lambda t)}\]

<p>将解代入运动方程，可得到如下形式的特征值方程：</p>

\[\omega_\lambda^2 \mathbf e _{b,\lambda} = \mathbf D_{bb'}^{\alpha\beta}(\textbf q) \textbf e_{b,\lambda}\]

<p>其中，$\mathbf D(\mathbf{q})$ 是所谓<strong>的 D 型动力学</strong>矩阵，其表达式为：</p>

\[\mathbf D_{bb'}^{\alpha\beta}(\textbf q) =\frac{1}{\sqrt{m_bm_{b'}}}\sum_{l'}\Phi_{0b,l'b'}^{\alpha\beta} e^{i\mathbf q\cdot(\mathbf R_{l'} - \mathbf R_0)}\]

<p>求解特征值问题，就可以得到声子色散关系 $\omega_\lambda(\mathbf{q})$，以及相应的特征向量 ${e_{b,\lambda}^\alpha}$。</p>

<h3 id="22-声子散射机制与弛豫时间"><strong>2.2 声子散射机制与弛豫时间</strong></h3>

<p>在实际材料中，声子不会无限传播而无损耗，而是会因各种散射机制而出现有限的传播寿命。在玻尔兹曼输运方程（BTE）框架下，这些散射过程常被归纳进一个总的<strong>散射率 **$\Gamma_\lambda$ 或等效的</strong>弛豫时间**$\tau_\lambda$。</p>

<h3 id="221-声子-声子散射">2.2.1 声子-声子散射</h3>

<p>在非金属晶体中，最主要的散射通常来自<strong>声子-声子相互作用</strong>，亦即晶格的非简谐振动效应。其理论根源在于势能展开中的三阶、四阶及更高阶项。 <br />
量子力学框架下，晶体哈密顿量可分为简谐项与非简谐项两部分。通常先对简谐部分做近似求解（将每个正常模视为量子简谐振子），再将非简谐相互作用作为微扰来处理。</p>

<p>三声子散射是最常见且主导的非简谐散射类型：一个声子可以与另一个声子“湮灭并产生”第三个声子（组合过程），或者一个声子“衰变”成两个声子（拆分过程）。当声子波矢 $\mathbf{q}$, $\mathbf{q}’$ 和 $\mathbf{q}’’$ 以及相应模频率 $\omega_\lambda$，$\omega_{\lambda’}$ 和 $\omega_{\lambda’’}$ 满足能量和动量守恒（含 Umklapp 过程）时，就会发生三声子散射。</p>

<p>用 $\lambda$ 表示声子模 （由波矢 $\mathbf{q}$ 和声子分支 $s$ 组成）。三声子过程的跃迁概率为：</p>

\[\Gamma_{\lambda\lambda'\lambda''}^{\pm} = \frac{\hbar\pi}{4}\begin{Bmatrix}n_{\lambda'}-n_{\lambda''} \\ n_{\lambda'} + n_{\lambda''}+1 \end{Bmatrix} \frac{\delta(\omega_\lambda\pm\omega_{\lambda'} - \omega_{\lambda''})}{\omega_{\lambda}\omega_{\lambda'}\omega_{\lambda''}}|V_{\lambda\lambda'\lambda''}^{\pm}|^2\Delta_{\mathbf{G}, \,\mathbf{q}\pm \mathbf{q}' - \mathbf{q}''}\]

<p>其中：</p>
<ul>
  <li>$\Delta_{\mathbf{G}, \,\mathbf{q}\pm \mathbf{q}’ - \mathbf{q}’’}$ 表示动量守恒（含 Umklapp 矢量 G\mathbf{G}G）的 Kronecker delta；</li>
  <li>$\delta(\cdot)$ 表示能量守恒的 Dirac delta；</li>
  <li>$\pm$ 分别对应<strong>组合</strong> ($\omega_\lambda + \omega_{\lambda’} = \omega_{\lambda’’}$）和<strong>拆分</strong>（$\omega_\lambda = \omega_{\lambda’} + \omega_{\lambda’’}$）两类过程；</li>
  <li>$|V^{\pm\lambda,\lambda’,\lambda’’}|^2$ 为三阶非简谐相互作用矩阵元，取决于所涉及的三个声子的特征向量和三阶 IFCs。</li>
</ul>

<h3 id="222-声子-杂质散射">2.2.2 声子-杂质散射</h3>
<p>当晶体中存在不同质量或不同类型的原子（如同位素、点缺陷等）时，会导致局部力常数或质量分布的微扰。 <br />
散射率通常用下述经验公式近似：</p>

\[\Gamma_{\lambda\lambda'} = \frac{\pi \omega_\lambda^2}{2}\delta(\omega_\lambda - \omega_{\lambda'})\sum_bg(b) |\mathbf e_{b,\lambda}^*\cdot \mathbf e_{b,\lambda'}|^2\]

<p>其中，$g(b)=\sum_s f_s(b)(1-\frac{m_{b,s}}{\overline{m}_b})^2$。$f_s$ 是杂质原子 $s$ 的浓度。平均质量为 $\overline m_b = \sum_s f_s(b) m_{b,s}$ 。$N_0$ 为波矢 $\mathbf q$ 点的数量。</p>

<h2 id="3-热导率与玻尔兹曼输运方程bte">3. 热导率与玻尔兹曼输运方程（BTE）</h2>

<h3 id="31-热导率">3.1 热导率</h3>

<p>根据傅里叶定律，材料的热导率 $\kappa$ 描述其传热能力，定义为：</p>

\[\mathbf J = -\kappa \nabla T\]

<p>其中，$\mathbf{J}$ 是热流矢量，$\nabla T$ 是温度梯度。若材料具有各向异性，热导率 $\kappa$ 是一个张量。 <br />
若要从微观层面（如声子特性）来预测 $\kappa$，通常需要使用玻尔兹曼输运方程（BTE）来描述声子群体在有限温度梯度下的非平衡分布。若假设系统处于稳态，且温度梯度足够小，可将 <strong>BTE 线性化</strong>，得到下式：</p>

\[-\mathbf v_\lambda \nabla T \frac{\partial n_\lambda^0}{\partial T} = \frac{n_\lambda'}{\tau_\lambda}\]

<p>其中 $n_\lambda’ = n_\lambda - n_\lambda^0$，即偏离平衡态的部分。 <br />
$n_\lambda$ 为声子模 $\lambda$ 的分布函数， <br />
$n_\lambda^0$ 表示平衡态（玻色-爱因斯坦）分布， <br />
$n_\lambda’$ 即偏离平衡态的微扰部分， <br />
$\tau_\lambda$ 为该声子模的弛豫时间， <br />
$\mathbf{v}_\lambda$ 为声子模的群速度。 <br />
声子是玻色子，其平衡态分布服从 <strong>玻色-爱因斯坦统计</strong>：</p>

\[n_\lambda^0 = \frac{1}{\exp\left(\frac{\hbar \omega_\lambda}{k_B T}\right) - 1}\]

<p>其中，$\hbar$ 是约化普朗克常数，$k_B$ 是玻尔兹曼常数，$\omega_\lambda$ 表示声子模的频率，$T$ 表示温度。 <br />
由声子贡献的热流（忽略电子热导等其他贡献）可写为</p>

\[\mathbf J = \frac{1}{V} \sum_\lambda \hbar\omega_\lambda \mathbf v_\lambda n_\lambda\]

<p>其中，$V$ 是系统体积，可以通过单位胞体积 $\Omega$ 与波矢 $\mathbf{q}$ 的总数 $N_0$ 得到：$V = N_0 \cdot \Omega$。 <br />
将上式与傅里叶定律 $J^\beta = -\kappa^{\alpha\beta} \frac{\partial T}{\partial \alpha}$ 进行对比，可以得到热导率张量的表达式：</p>

\[\kappa^{\alpha\beta} = \frac{1}{V}\sum_\lambda \hbar\omega_\lambda \frac{\partial n_\lambda^0}{\partial T} v_\lambda^\alpha v_\lambda^\beta \tau_\lambda = \sum_\lambda c_\lambda v_\lambda^\alpha v_\lambda^\beta \tau_\lambda\]

<p>其中， $c_\lambda = \frac{\hbar\omega_\lambda}{V}\frac{\partial n_\lambda^0}{\partial T}$ 为单个声子模的体积比热容。 <br />
若材料近似各向同性，则可进一步简化为</p>

\[\kappa = \frac{1}{3V}\sum_\lambda \hbar\omega_\lambda \frac{\partial n_\lambda^0}{\partial T} |\mathbf v_\lambda|^2 \tau_\lambda\]

<h3 id="32-单模弛豫时间近似smrta">3.2 <strong>单模弛豫时间近似（SMRTA）</strong></h3>

<p><strong>单模弛豫时间近似（SMRTA）</strong> 方法的假设是：在求解某一声子模 $\lambda$ 的偏离分布时，其他所有模都保持在平衡分布 $n_{\lambda’}^0$。，即：</p>

\[\begin{cases}
n_\lambda = n_\lambda^0 + n_\lambda' \\
n_{\lambda'} = n_{\lambda'}^0 \\
n_{\lambda''} = n_{\lambda''}^0
\end{cases}\]

<p>这会简化三声子散射项的计算，只需关注声子模 $\lambda$ 自身对平衡态的偏离。 <br />
单模弛豫时间近似下的弛豫时间：</p>

\[\frac{1}{\tau_\lambda^0} = \sum_{\lambda'\lambda''}^+ \Gamma_{\lambda\lambda'\lambda''}^+ + \sum_{\lambda'\lambda''}^- \frac{1}{2} \Gamma_{\lambda\lambda'\lambda''}^- + \sum_{\lambda'}\Gamma_{\lambda\lambda'}\]

<p>其中，上标 0 表示此弛豫时间是基于 SMRTA 获得的第零近似解。</p>

<h3 id="33-迭代解法">3.3 迭代解法</h3>

<p>为了克服 SMRTA 的局限性，可采用 <strong>全迭代方法（Full Iterative Method）</strong> 来求解 BTE。 <br />
在这种方法中，当计算某声子模 $\lambda$ 的偏离分布时，其他声子模 $\lambda’$ 也允许偏离平衡态，因而多声子模之间的散射耦合需要自洽求解。</p>

\[\begin{cases}
n_\lambda = n_\lambda^0 + n_\lambda' \\
n_{\lambda'} = n_{\lambda'}^0 + n_{\lambda'}' \\
n_{\lambda''} = n_{\lambda''}^0 + n_{\lambda''}''
\end{cases}\]

<p><strong>初始猜测</strong> <br />
常以 SMRTA 给出的 $\tau_\lambda^0$ 作为第零次近似。 <br />
<strong>自洽迭代</strong> <br />
将所有声子模的偏离量耦合起来写成一个方程组，通过迭代求解，直到收敛。这样能更精确地体现三声子 Normal 过程所导致的“声子再分配”效应。</p>

\[\tau_\lambda = \tau_\lambda^0 + \tau_\lambda^0 \Delta_\lambda\]

\[\Delta_\lambda = \sum_{\lambda'\lambda''}^+ \Gamma_{\lambda\lambda'\lambda''}^+ (\xi_{\lambda\lambda''}\tau_{\lambda''} - \xi_{\lambda\lambda'}\tau_{\lambda'}) \\ + \sum_{\lambda'\lambda''}^- \frac{1}{2} \Gamma_{\lambda\lambda'\lambda''}^-(\xi_{\lambda\lambda''}\tau_{\lambda''} + \xi_{\lambda\lambda'}\tau_{\lambda'}) \\+ \sum_{\lambda'}\Gamma_{\lambda\lambda'}\xi_{\lambda\lambda'}\tau_{\lambda'}\]

<p>由于全迭代方法包含更多相互作用细节，对高热导率材料或低温下 N 过程活跃的体系，往往能得到更准确的结果。不过，它对计算资源的需求也更高，算法实现更复杂。</p>

<h2 id="4-计算流程与软件">4. 计算流程与软件</h2>

<p>计算声子热导率的一般流程包括以下几个关键步骤：</p>

<h3 id="1提取原子间力常数ifcs">（1）提取原子间力常数（IFCs）</h3>

<p>原子间力常数是进行晶格动力学和热输运计算的基础数据，可通过以下三种方式获得：</p>
<ul>
  <li><strong>经典势函数</strong>：适用于结构简单、已有成熟势函数的材料；</li>
  <li><strong>机器学习势（ML potentials）</strong>：近年来快速发展，可兼顾精度和效率；</li>
  <li><strong>第一性原理方法（First-Principles/DFT）</strong>：最常用，能在无任何经验参数的前提下精确描述材料的基态性质，因此被广泛用于非简谐晶格动力学计算。</li>
</ul>

<p>准确提取 IFCs 并非易事，目前主要有两种方法：</p>
<ul>
  <li><strong>有限位移法（Finite Displacement Method）</strong>：对超胞中原子施加微小扰动，结合差分法从获得的原子力中提取 IFCs。该方法适用于经典势、机器学习势以及第一性原理计算；</li>
  <li><strong>密度泛函微扰理论（DFPT）</strong>：一种基于线性响应的严格方法，能直接从第一性原理中计算 IFCs，但仅适用于 DFT 框架。</li>
</ul>

<h3 id="2截断与对称性修正">（2）截断与对称性修正</h3>

<p>理论上，IFC 可存在于晶体中任意两个原子之间。但在实际计算中，通常需要人为设定<strong>截断半径</strong>，只保留一定距离内的相互作用。因此，需要测试不同截断范围对热导率结果的影响。 <br />
此外，由于数值噪声与截断带来的误差，从第一性原理获得的 IFCs 通常不完全满足 <strong>平移不变性（translational invariance）</strong> 等晶体对称性。这种不变性对于热导率预测至关重要，必须对 IFCs 做微小修正，以强制满足相应对称性。</p>

<h3 id="3计算声子热导率">（3）计算声子热导率</h3>

<p>在获得二阶和三阶 IFCs 后，可使用<strong>非简谐晶格动力学</strong>方法结合 <strong>玻尔兹曼输运方程（BTE）</strong> 计算热导率。常用的求解方式包括：</p>
<ul>
  <li><strong>单模弛豫时间近似（SMRTA）</strong>：假设除目标声子模外其他模处于平衡态，计算简单，适用于快速估算；</li>
  <li><strong>全迭代解法（Iterative Solution）</strong>：考虑所有声子模之间的相互影响，能更准确地反映三声子 N 过程的贡献，适用于高导热或低温系统。</li>
</ul>

<p>该方法<strong>无需任何拟合参数</strong>，仅依赖材料的初始原子结构即可预测热导率，具有高度的通用性和准确性。大量研究表明，该方法预测结果与实验数据高度一致。</p>

<h3 id="4数值误差与适用范围">（4）数值误差与适用范围</h3>

<p>尽管该方法非常强大，但仍可能受到以下数值因素的影响：</p>
<ul>
  <li>三阶 IFC 的精度依赖于 DFT 本身的收敛性、计算泛函以及位移步长的选择；</li>
  <li>IFC 截断距离的选取可能引入系统性误差；</li>
  <li>第一布里渊区内数值积分精度（如 $\mathbf{q}$-点网格密度）也会影响最终热导率的准确性。</li>
</ul>

<p>即便如此，该方法仍被广泛认为是目前预测晶格热导率最可靠的理论工具之一。它不仅可以输出<strong>总热导率</strong>，还可获得<strong>模分辨热导率贡献</strong>，并进一步用于研究界面热导、纳米结构热输运等复杂体系。</p>

<h3 id="5软件工具与接口">（5）软件工具与接口</h3>

<p>目前已有多个开源软件包可实现上述流程，包括：<strong>ShengBTE</strong>，<strong>phono3py</strong> 等； <br />
这些工具通常可与主流第一性原理软件包（如 <strong>VASP</strong>、<strong>Quantum ESPRESSO</strong>、<strong>ABINIT</strong> 等）良好对接，实现从结构优化到 IFC 提取、再到热导率预测的自动化计算流程。</p>]]></content><author><name></name></author><category term="Heat-conduction" /><category term="Calculation" /><summary type="html"><![CDATA[微纳尺度热传导中的尺寸效应主要涉及两个关键长度尺度：声子的波长和平均自由程（MFP）。 若系统的特征尺寸远大于声子的 MFP，则热传导处于宏观扩散输运机制中，此时经典的热扩散方程适用； 若特征尺寸与声子的 MFP 相当，则需考虑经典尺寸效应，即声子弹道输运现象，此时应采用玻尔兹曼输运方程（BTE）描述能量传输； 若特征尺寸进一步缩小至与声子波长相当，则需考虑声子的波动性特征。 第一性原理的 PBTE（Phonon Boltzmann Transport Equation，声子玻尔兹曼输运方程）其实就是将下面三个计算方法的结合： 第一性原理方法（first-principles method 或 ab initio method） 是指一种用于数值求解薛定谔方程的方法。 晶格动力学方法（lattice dynamics），是指通过原子间力常数（IFCs）计算声子色散关系和弛豫时间的方法。 玻尔兹曼输运方程（BTE） 则是通过将声子色散关系和弛豫时间作为输入，计算体系总热导率的热传输模型。 1. 第一性原理方法]]></summary></entry><entry><title type="html">拓扑声子的物理量与性质</title><link href="https://lyushisyan.github.io/zh-CN/blog/2024/topology/" rel="alternate" type="text/html" title="拓扑声子的物理量与性质" /><published>2024-12-02T02:36:10+03:00</published><updated>2024-12-02T02:36:10+03:00</updated><id>https://lyushisyan.github.io/blog/2024/topology</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2024/topology/"><![CDATA[<h2 id="拓扑几何">拓扑几何</h2>

<p>拓扑学研究在连续变化中保持不变的几何性质，这是一种反映全局特征的数学工具。<br />
例如，表面的 <strong>Gauss 曲率</strong> $K$ 是一种描述局部几何性质的量，通过以下 <strong>Gauss-Bonnet 定理</strong>将其与全局拓扑特性关联起来：</p>

\[\int_S K \, d^2r = 4\pi (1-\text{genus}),\]

<p>其中，$\text{genus}$（亏格）表示几何体上的孔洞数。例如，球体的亏格为 $0$，而环面（如甜甜圈）的亏格为 $1$。</p>

<div class="text-center">
  



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/topology_huan-480.webp 480w,/assets/img/blog/topology_huan-800.webp 800w,/assets/img/blog/topology_huan-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/topology_huan.gif" class="w-75" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
    <figcaption class="caption">图 1: 在拓扑学中，一个杯子和一个面包圈是相同的</figcaption>
  
</figure>

</div>

<h2 id="拓扑物理">拓扑物理</h2>

<p>拓扑物理主要研究动量空间中的拓扑特性。在周期性晶格中，电子态可以用以下定态薛定谔方程描述：</p>

\[H|\varphi\rangle = E|\varphi\rangle,\]

<p>其中 \(H\) 是体系的哈密顿量，\(E\) 是电子的能量本征值，\(\vert\varphi\rangle\) 是对应的本征态。通过求解该方程，可以获得能带结构，即电子的能量与动量的关系。</p>

<p>传统能带理论主要关注电子的能量本征值，而拓扑物理的重要贡献在于揭示波函数中隐藏的拓扑信息，即电子波函数的拓扑结构。例如，在 <strong>量子霍尔效应</strong>中，体系的时间反演对称性被破坏，陈数 $C \neq 0$。基于不同的对称性，研究者已构建出许多拓扑材料体系，如谷霍尔效应、拓扑晶体绝缘体，以及无能隙的拓扑半金属态，包括 Dirac 态、Weyl 态、节点线和三重拓扑简并点等。</p>

<h2 id="拓扑声子">拓扑声子</h2>

<p>声子由于不具备电荷和自旋属性，其拓扑性的研究起步较晚。传统上，声子研究主要关注其粒子性质（色散与散射）以及波动性质（相干效应）。近年来，受声子-电子类比的启发，研究者在声子体系中观察到了许多新的输运现象，如 <strong>声子热霍尔效应</strong>。</p>

<p>在声子体系中，破坏时间反演对称性较为困难。对于具有时间反演对称的晶体，其原子振动可用基于牛顿定律的动力学方程描述。在简谐近似下，声子特征方程可写为：</p>

\[\boldsymbol{D}(\boldsymbol{k}) \boldsymbol{u}(\boldsymbol{k}) = \omega^2(\boldsymbol{k}) \boldsymbol{u}(\boldsymbol{k}),\]

<p>其中，$\boldsymbol{u}(\boldsymbol{k})$ 为声子本征态，$\omega(\boldsymbol{k})$ 为声子频率。传统研究仅关注本征值，得到声子色散关系和态密度，而拓扑声子研究则进一步挖掘本征态中隐含的波函数拓扑信息。</p>

<h3 id="声子体系中的拓扑物理量">声子体系中的拓扑物理量</h3>

<p>通过声子本征态的波函数，可以定义拓扑物理量：</p>

<ul>
  <li>
    <p><strong>贝里联络</strong>：</p>

\[A_{s,\boldsymbol{k}} = \text{i} \langle u_{s\boldsymbol{k}} | \nabla_{\boldsymbol{k}} | u_{s\boldsymbol{k}} \rangle,\]

    <p>描述动量空间中波函数的几何性质。</p>
  </li>
  <li>
    <p><strong>贝里曲率</strong>：</p>

\[\Omega_{s,\boldsymbol{k}} = \nabla_{\boldsymbol{k}} \times A_{s,\boldsymbol{k}},\]

    <p>是贝里联络的旋度，表征波函数在动量空间中的局部拓扑结构。</p>
  </li>
  <li>
    <p><strong>贝里相位</strong>：</p>

\[\gamma_s = \int_L A \cdot d\boldsymbol{k},\]

    <p>是贝里联络沿特定路径或环路的积分。</p>
  </li>
  <li>
    <p><strong>陈数</strong>：<br />
对于三维体系中的声子，陈数定义为动量空间中包含该点的闭合曲面上的积分：</p>

\[C = \frac{1}{2\pi} \oint \Omega_{s,\boldsymbol{k}} d^2\boldsymbol{k}.\]
  </li>
</ul>

<p>由于声子不具有自旋 $1/2$ 属性，无法直接应用量子自旋霍尔态的理论。电子体系中的量子自旋霍尔态可视为两组具有相反陈数的量子霍尔态，其总陈数在时间反演对称下为 $0$。而在声子体系中，可以利用晶格对称性实现双重甚至多重简并，构造出类自旋的赝自旋，为拓扑声子研究提供了新思路。</p>

<p>在经典的声子输运研究中，晶格对称性用于分析声子散射通道，简化力常数计算；而从拓扑声子的角度，晶格对称性主要用于确定声子的简并性和对声子分支进行分类。</p>

<p>在材料的边界或界面处，拓扑声子可以形成特殊的边界态。这些边界态源自材料固有的拓扑不变量（如陈数或贝里曲率），能够沿着不受散射影响的通道传播。这种稳定性被称为 <strong>拓扑保护机制</strong>。</p>

<p>拓扑声子的色散关系也具有独特特性。在某些特定频率范围内，声子的传播更加顺畅，而在其他频率范围内，声子可能被抑制。</p>]]></content><author><name></name></author><category term="Physics" /><summary type="html"><![CDATA[拓扑几何]]></summary></entry><entry><title type="html">使用 VASP 进行结构优化计算</title><link href="https://lyushisyan.github.io/zh-CN/blog/2024/vasp-relax/" rel="alternate" type="text/html" title="使用 VASP 进行结构优化计算" /><published>2024-12-02T02:36:10+03:00</published><updated>2024-12-02T02:36:10+03:00</updated><id>https://lyushisyan.github.io/blog/2024/vasp-relax</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2024/vasp-relax/"><![CDATA[<h2 id="1-输入文件">1. 输入文件</h2>
<p>输入文件为 vasp 的四个基础文件：<code class="language-plaintext highlighter-rouge">INCAR</code>  <code class="language-plaintext highlighter-rouge">POSCAR</code>  <code class="language-plaintext highlighter-rouge">POTCAR</code>  <code class="language-plaintext highlighter-rouge">KPOINTS</code></p>

<h3 id="11-incar-的参数设置">1.1 <code class="language-plaintext highlighter-rouge">INCAR</code> 的参数设置</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>System <span class="o">=</span> Si-film    <span class="c"># 体系名称，可以随意定义，用于标记当前计算体系</span>

<span class="c"># 作业控制（Job Control）</span>
ISTART <span class="o">=</span> 0          <span class="c"># 初始状态设置：</span>
                    <span class="c"># 0 从头开始计算</span>
                    <span class="c"># 1 从已有的 WAVECAR 文件读取初始电子波函数</span>
                    <span class="c"># 2 从 WAVECAR 和 CHGCAR 文件读取初始波函数和电子密度</span>
ISPIN <span class="o">=</span> 1           <span class="c"># 自旋极化选项：</span>
                    <span class="c"># 1 无自旋极化（适用于非磁性材料）</span>
                    <span class="c"># 2 自旋极化（适用于磁性材料）</span>
ICHARGE <span class="o">=</span> 2         <span class="c"># 初始电子密度选择：</span>
                    <span class="c"># 2 从 POTCAR 提供的静态电子密度开始计算</span>
                    <span class="c"># 1 从头生成电子密度</span>
LWAVE <span class="o">=</span> .FALSE.     <span class="c"># 是否输出 WAVECAR 文件：</span>
                    <span class="c"># .TRUE. 输出（存储波函数数据）</span>
                    <span class="c"># .FALSE. 不输出（节省磁盘空间）</span>
LCHARG <span class="o">=</span> .FALSE.    <span class="c"># 是否输出 CHGCAR 文件：</span>
                    <span class="c"># .TRUE. 输出（存储静态电荷密度）</span>
                    <span class="c"># .FALSE. 不输出（节省磁盘空间）</span>
ISYM <span class="o">=</span> 0            <span class="c"># 对称性设置：</span>
                    <span class="c"># 0 关闭对称性（适用于含缺陷或非对称结构）</span>
                    <span class="c"># 1 或 2 保留对称性操作</span>

<span class="c"># 电子弛豫设置（Electronic Relaxation）</span>
ENCUT <span class="o">=</span> 500         <span class="c"># 平面波截断能量，单位 eV，决定计算精度和效率</span>
ISMEAR <span class="o">=</span> 0          <span class="c"># 展宽方法：</span>
                    <span class="c"># -5 (四电子系统)、0 (高斯展宽，适合半导体)、1 或 2 (费米展宽)</span>
SIGMA <span class="o">=</span> 0.05        <span class="c"># 展宽宽度（单位 eV），推荐值为 0.01 ~ 0.1</span>
EDIFF <span class="o">=</span> 1E-08       <span class="c"># SCF 收敛准则：两次迭代能量变化小于 1E-08 eV 时停止</span>
NELMIN <span class="o">=</span> 6          <span class="c"># 最小电子迭代次数，确保基础收敛过程</span>
NELM <span class="o">=</span> 300          <span class="c"># 最大电子迭代次数，避免迭代死循环</span>
GGA <span class="o">=</span> PE            <span class="c"># 泛函选择，采用 PBE（Perdew-Burke-Ernzerhof）交换-相关泛函</span>
LREAL <span class="o">=</span> .FALSE.     <span class="c"># 动量空间计算，提高精度但增加计算量</span>
ADDGRID <span class="o">=</span> .TRUE.    <span class="c"># 启用附加 FFT 网格，提升数值精度</span>
ALGO <span class="o">=</span> N            <span class="c"># 电子弛豫算法：</span>
                    <span class="c"># Normal（标准模式）、Fast 或 VeryFast（加速模式）</span>
PREC <span class="o">=</span> Accurate     <span class="c"># 精度设置：</span>
                    <span class="c"># Accurate（高精度）、Normal 或 Low（初步测试用）</span>

<span class="c"># 离子弛豫设置（Ionic Relaxation）</span>
ISIF <span class="o">=</span> 2            <span class="c"># 晶格优化选项：</span>
                    <span class="c"># 2 仅优化原子位置，不改变晶格参数</span>
                    <span class="c"># 3 优化原子和晶格形状</span>
EDIFFG <span class="o">=</span> <span class="nt">-0</span>.01      <span class="c"># 离子收敛准则：</span>
                    <span class="c"># 负值基于力（单位 eV/Å）</span>
                    <span class="c"># 正值基于能量</span>
IBRION <span class="o">=</span> 2          <span class="c"># 离子弛豫算法：</span>
                    <span class="c"># 2 使用共轭梯度算法（适用于大多数优化任务）</span>
POTIM <span class="o">=</span> 0.5         <span class="c"># 时间步长，控制优化过程速度</span>
NSW <span class="o">=</span> 200           <span class="c"># 最大离子优化步数</span>

<span class="c"># 并行控制（Parallel Control）</span>
NPAR <span class="o">=</span> 4            <span class="c"># FFT 网格的并行维度（推荐值为 sqrt(总核数)）</span>
KPAR <span class="o">=</span> 2            <span class="c"># k 点的并行处理数（总核数应为 NPAR × KPAR × NCORE 的整数倍）</span>
NCORE <span class="o">=</span> 12          <span class="c"># 每个任务的并行核数</span>
</code></pre></div></div>

<p>在结构优化中，<code class="language-plaintext highlighter-rouge">INCAR</code> 中的关键参数包括 <code class="language-plaintext highlighter-rouge">IBRION</code> ，<code class="language-plaintext highlighter-rouge">ISIF</code>，<code class="language-plaintext highlighter-rouge">NSW</code>，<code class="language-plaintext highlighter-rouge">EDIFF</code> 和 <code class="language-plaintext highlighter-rouge">EDIFFG</code></p>

<h4 id="111-ibrion-常用设置及适用场景">1.1.1 <code class="language-plaintext highlighter-rouge">IBRION</code> 常用设置及适用场景</h4>

<h5 id="1-单点能计算">(1) 单点能计算</h5>
<ul>
  <li><strong><code class="language-plaintext highlighter-rouge">IBRION = -1</code></strong><br />
<strong>用途</strong>：适用于单点能量计算，例如固定晶格、电子结构计算或 DOS 分析。
<strong>注意</strong>：在设置 <code class="language-plaintext highlighter-rouge">NSW &gt; 0</code> 时不要使用，否则会浪费计算资源。</li>
</ul>

<h5 id="2-结构优化">(2) 结构优化</h5>
<ul>
  <li>
    <p><strong><code class="language-plaintext highlighter-rouge">IBRION = 1</code></strong>（RMM-DIIS）<br />
<strong>用途</strong>：适用于势能面光滑、体系较简单的优化。<br />
<strong>限制</strong>：对于复杂或不稳定的势能面，可能导致收敛问题。</p>
  </li>
  <li>
    <p><strong><code class="language-plaintext highlighter-rouge">IBRION = 2</code></strong>（共轭梯度）<br />
<strong>用途</strong>：最常用的优化方法，适合大多数体系。<br />
<strong>优点</strong>：对势能面陡峭的复杂体系表现较好。</p>
  </li>
  <li>
    <p><strong><code class="language-plaintext highlighter-rouge">IBRION = 3</code></strong>（阻尼分子动力学）<br />
<strong>用途</strong>：优化路径可能振荡或不稳定时，可通过阻尼修正来避免发散。</p>
  </li>
</ul>

<h5 id="3-分子动力学模拟">(3) 分子动力学模拟</h5>
<ul>
  <li><strong><code class="language-plaintext highlighter-rouge">IBRION = 0</code></strong><br />
<strong>用途</strong>：用于研究体系在不同温度下的动态行为，例如扩散、振动模式、温度效应。</li>
</ul>

<h5 id="4-声子计算">(4) 声子计算</h5>

<p>a. <strong>有限差分法</strong>   <strong><code class="language-plaintext highlighter-rouge">IBRION = 5, 6</code></strong><br />
计算声子模式的有限差分方法，其中：</p>
<ul>
  <li><strong><code class="language-plaintext highlighter-rouge">5</code></strong>：不考虑对称性，适合缺陷或低对称性结构。</li>
  <li><strong><code class="language-plaintext highlighter-rouge">6</code></strong>：利用对称性加速计算，适合对称性较高的体系。</li>
</ul>

<p>b. <strong>微扰理论（DFPT）</strong> <strong><code class="language-plaintext highlighter-rouge">IBRION = 7, 8</code></strong><br />
通过密度泛函微扰理论（DFPT）计算声子模式，其中：</p>
<ul>
  <li><strong><code class="language-plaintext highlighter-rouge">7</code></strong>：无对称性优化，适用于复杂或低对称性结构。</li>
  <li><strong><code class="language-plaintext highlighter-rouge">8</code></strong>：利用对称性优化计算，更高效。</li>
</ul>

<h4 id="112-isif-常用设置及适用场景">1.1.2 <code class="language-plaintext highlighter-rouge">ISIF</code> 常用设置及适用场景</h4>

<ul>
  <li>
    <p>未设置 <code class="language-plaintext highlighter-rouge">ISIF</code> 时：
默认值为 <code class="language-plaintext highlighter-rouge">ISIF=2</code>，即优化原子位置但不改变晶胞形状和体积。</p>
  </li>
  <li>
    <p>当 <code class="language-plaintext highlighter-rouge">IBRION=0</code>（分子动力学）或 <code class="language-plaintext highlighter-rouge">LHFCALC=.TRUE.</code>（混合泛函计算）时：
默认值为 <code class="language-plaintext highlighter-rouge">ISIF=0</code>，仅优化原子位置。</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">ISIF = 2</code>（<strong>最常用</strong>）
优化内容： 优化原子位置，不改变晶胞形状和体积。
适用场景： 二维材料、已知晶格常数、表面或界面体系。</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">ISIF = 3</code>（<strong>体材料优化</strong>）
优化内容： 优化原子位置、晶胞形状和体积。
适用场景： 体材料结构优化、全方位晶格弛豫。</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">ISIF = 4</code>（<strong>固定体积优化</strong>）
优化内容： 优化原子位置和晶胞形状，但体积固定。
适用场景： 压力测试或固定体积弛豫。</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">ISIF = 6</code>（<strong>仅优化晶胞</strong>）
优化内容： 优化晶胞形状和体积，不优化原子位置。
适用场景： 测试晶胞参数或晶格变形分析。</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">ISIF = 0</code>（<strong>位置优化，无应力计算</strong>）
优化内容： 仅优化原子位置，不计算应力。
适用场景： 固定晶胞的优化。</p>
  </li>
</ul>

<h4 id="113-nswediff-和-ediffg-的设置规律">1.1.3 <code class="language-plaintext highlighter-rouge">NSW</code>，<code class="language-plaintext highlighter-rouge">EDIFF</code> 和 <code class="language-plaintext highlighter-rouge">EDIFFG</code> 的设置规律</h4>

<table>
  <thead>
    <tr>
      <th>参数</th>
      <th>功能</th>
      <th>初步优化</th>
      <th>高精度优化</th>
      <th>单点计算</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">NSW</code></td>
      <td>最大离子步数</td>
      <td>100-200</td>
      <td>200-500</td>
      <td>0</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">EDIFF</code></td>
      <td>SCF 迭代收敛准则（eV）</td>
      <td>1e-05</td>
      <td>1e-08</td>
      <td>1e-06</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">EDIFFG</code></td>
      <td>离子优化收敛准则（eV/Å）</td>
      <td>-0.1</td>
      <td>-0.01</td>
      <td>无需设置</td>
    </tr>
  </tbody>
</table>

<h3 id="12-poscar-的示例">1.2 <code class="language-plaintext highlighter-rouge">POSCAR</code> 的示例</h3>

<p>下面是描述了硅晶体结构的 <code class="language-plaintext highlighter-rouge">POSCAR</code> 文件示例：</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Si-bulk   <span class="c"># 系统名称，可自定义</span>
1.0          <span class="c"># 全局尺度因子（可以用于缩放晶格）</span>
   5.430    0.000    0.000  <span class="c"># 晶格向量 a</span>
   0.000    5.430    0.000  <span class="c"># 晶格向量 b</span>
   0.000    0.000    5.430  <span class="c"># 晶格向量 c</span>
Si           <span class="c"># 原子种类</span>
2            <span class="c"># 每种原子的个数</span>
Direct       <span class="c"># 坐标类型（Direct：分数坐标；Cartesian：笛卡尔坐标）</span>
  0.000  0.000  0.000  <span class="c"># 原子 1 的坐标</span>
  0.250  0.250  0.250  <span class="c"># 原子 2 的坐标</span>
</code></pre></div></div>

<p>下面是描述硅薄膜（Si-film）的 <code class="language-plaintext highlighter-rouge">POSCAR</code> 文件示例：
假设薄膜沿 $x$ 和 $𝑦$ 方向为周期性，沿 $z$ 方向有限（需要设置真空层）</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Si Thin Film                            
   1.00000000000000     
     5.4299999999999997    0.0000000000000000    0.0000000000000000
     0.0000000000000000    5.4299999999999997    0.0000000000000000
     0.0000000000000000    0.0000000000000000   20.8599999999999994
   Si
    16
Selective dynamics  <span class="c"># 启用 Selective dynamics</span>
Direct
0.000000 0.000000 0.200000 F F F  <span class="c"># 三个方向固定</span>
0.500000 0.500000 0.200000 T T F  <span class="c"># z 方向固定，x 和 y 方向可移动</span>
0.500000 0.000000 0.330153 T T T  <span class="c"># 三个方向可移动</span>
0.000000 0.500000 0.330153 T T T
0.250000 0.250000 0.265077 T T T
0.750000 0.750000 0.265077 T T T
0.750000 0.250000 0.395230 T T T
0.250000 0.750000 0.395230 T T T
0.000000 0.000000 0.460307 T T T
0.500000 0.500000 0.460307 T T T
0.500000 0.000000 0.590460 T T T
0.000000 0.500000 0.590460 T T T
0.250000 0.250000 0.525384 T T T
0.750000 0.750000 0.525384 T T T
0.750000 0.250000 0.655537 T T T
0.250000 0.750000 0.655537 T T T
</code></pre></div></div>

<h3 id="13-kpoints-的书写方式">1.3 <code class="language-plaintext highlighter-rouge">KPOINTS</code> 的书写方式</h3>

<h4 id="1-monkhorst-pack-网格">(1) Monkhorst-Pack 网格</h4>
<p>Monkhorst-Pack 网格是一种均匀分布的 k 点网格，常用于周期性晶体的电子结构计算。</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Automatic k-point generation   <span class="c"># 自动生成 k 点的方式（注释）</span>
0                              <span class="c"># 忽略 k 点总数，采用自动生成</span>
Monkhorst-Pack                 <span class="c"># 选择 Monkhorst-Pack 网格</span>
4 4 4                          <span class="c"># k 点网格密度，分别表示 x、y、z 方向的分布</span>
0 0 0                          <span class="c"># 网格偏移，0 表示不偏移</span>
</code></pre></div></div>

<p><strong>适用场景</strong>：周期性晶体，优化、DOS 计算、电子结构分析等。</p>

<h4 id="2-gamma-网格">(2) Gamma 网格</h4>
<p>Gamma 网格以 Gamma 点为中心，更适合小体系或非对称晶格。</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Automatic k-point generation   <span class="c"># 自动生成 k 点的方式（注释）</span>
0                              <span class="c"># 忽略 k 点总数，采用自动生成</span>
Gamma                          <span class="c"># 选择 Gamma 点中心网格</span>
4 4 4                          <span class="c"># k 点网格密度，分别表示 x、y、z 方向的分布</span>
0 0 0                          <span class="c"># 网格偏移，0 表示不偏移</span>
</code></pre></div></div>

<p><strong>适用场景</strong>：小体系、非对称晶格或需要快速计算的优化任务。</p>

<h3 id="14-potcar-的使用">1.4 <code class="language-plaintext highlighter-rouge">POTCAR</code> 的使用</h3>

<p><code class="language-plaintext highlighter-rouge">POTCAR</code> 包含了计算所需的赝势（pseudopotential）信息，用于描述体系中的原子种类及其相关的物理属性。</p>

<p>VASP 提供多种类型的赝势，包括：</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">POT_GGA_PAW</code>：使用 GGA 泛函的 PAW 赝势。</li>
  <li><code class="language-plaintext highlighter-rouge">POT_LDA_PAW</code>：使用 LDA 泛函的 PAW 赝势。</li>
</ul>

<p><strong>生成 POTCAR 文件</strong>：根据体系中的原子种类 (比如 Si 和 H)，逐个合并赝势文件：</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat</span> /POT_GGA_PAW/POTCAR_Si /POT_GGA_PAW/POTCAR_H <span class="o">&gt;</span> POTCAR
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">POTCAR</code> 文件中的泛函类型应与 <code class="language-plaintext highlighter-rouge">INCAR</code> 文件中设置的泛函一致</li>
  <li><code class="language-plaintext highlighter-rouge">POTCAR</code> 文件中原子顺序必须与 <code class="language-plaintext highlighter-rouge">POSCAR</code> 文件中元素顺序一致</li>
</ul>

<h2 id="2-输出文件">2. 输出文件</h2>

<p>主要输出文件有：<code class="language-plaintext highlighter-rouge">CONTCAR</code>  <code class="language-plaintext highlighter-rouge">OSZICAR</code>  <code class="language-plaintext highlighter-rouge">OUTCAR</code>  <code class="language-plaintext highlighter-rouge">XDATCAR</code> <code class="language-plaintext highlighter-rouge">vasprun.xml</code></p>

<h3 id="21-contcar-文件">2.1 <code class="language-plaintext highlighter-rouge">CONTCAR</code> 文件</h3>

<p><strong>内容：</strong></p>
<ul>
  <li>优化结束后的晶体结构，记录最新的原子坐标和晶格参数。</li>
</ul>

<p><strong>格式：</strong></p>
<ul>
  <li>文件格式与 <code class="language-plaintext highlighter-rouge">POSCAR</code> 相同，可以直接用作新的 <code class="language-plaintext highlighter-rouge">POSCAR</code> 文件继续计算。</li>
</ul>

<p><strong>用途：</strong></p>
<ul>
  <li>查看最终优化后的晶体结构。</li>
  <li>用作进一步的计算（如能带、态密度等）。</li>
</ul>

<h3 id="22-oszicar-文件">2.2 <code class="language-plaintext highlighter-rouge">OSZICAR</code> 文件</h3>

<p><strong>内容：</strong> 简要记录 SCF（自洽场）迭代的能量变化。</p>
<ul>
  <li>每步 SCF 迭代的能量（<code class="language-plaintext highlighter-rouge">E0</code>、<code class="language-plaintext highlighter-rouge">dE</code>）。</li>
  <li>自洽场（SCF）是否收敛的信息。</li>
  <li>优化时每一离子步的总能量变化。</li>
</ul>

<p><strong>用途：</strong></p>
<ul>
  <li>快速查看 SCF 计算或优化是否成功收敛。</li>
  <li>判断是否需要调整 <code class="language-plaintext highlighter-rouge">EDIFF</code> 或优化步骤。</li>
</ul>

<h3 id="23-outcar-文件">2.3 <code class="language-plaintext highlighter-rouge">OUTCAR</code> 文件</h3>

<p><strong>内容：</strong> 最详细的输出文件，包含优化和计算的全程信息。</p>
<ul>
  <li>计算参数：电子弛豫、迭代信息、收敛准则等。</li>
  <li>优化步骤：每步的能量、力、应力、原子坐标等。</li>
  <li>总能量：每一步 SCF 的自由能（Free energy）。</li>
  <li>力和应力：各方向的力（单位 eV/Å）和应力张量。</li>
  <li>电荷密度信息（如果有相关设置）。</li>
</ul>

<p><strong>用途：</strong></p>
<ul>
  <li>用于分析优化过程是否收敛，以及收敛过程中能量和力的变化。</li>
</ul>

<h3 id="24-xdatcar-文件">2.4 <code class="language-plaintext highlighter-rouge">XDATCAR</code> 文件</h3>

<p><strong>内容：</strong></p>
<ul>
  <li>优化或分子动力学（MD）过程中的每个离子步的原子坐标。</li>
</ul>

<p><strong>用途：</strong></p>
<ul>
  <li>分析原子在优化过程中的移动路径。</li>
  <li>对结构变化进行轨迹分析。</li>
</ul>

<h3 id="25-vasprunxml-文件">2.5 <code class="language-plaintext highlighter-rouge">vasprun.xml</code> 文件</h3>

<p>以 XML 格式记录的所有计算数据，便于解析和后处理。</p>

<p><strong>内容：</strong></p>
<ul>
  <li>电子迭代、离子优化过程中的所有参数和结果。</li>
  <li>能量、力、应力、原子坐标等数据。</li>
</ul>

<p><strong>用途：</strong></p>
<ul>
  <li>需要使用工具（如 <code class="language-plaintext highlighter-rouge">pymatgen</code> 或 <code class="language-plaintext highlighter-rouge">ASE</code>）提取关键信息。</li>
</ul>

<hr />

<h2 id="3-优化过程与收敛性判断">3. 优化过程与收敛性判断</h2>

<h3 id="31-优化过程">3.1 优化过程</h3>

<ol>
  <li><strong>初始化结构：</strong>
    <ul>
      <li>通过 <code class="language-plaintext highlighter-rouge">POSCAR</code> 文件提供初始结构。</li>
      <li>配置优化条件的 <code class="language-plaintext highlighter-rouge">POTCAR</code>、<code class="language-plaintext highlighter-rouge">KPOINTS</code> 和 <code class="language-plaintext highlighter-rouge">INCAR</code> 文件。</li>
    </ul>
  </li>
  <li><strong>逐步优化：</strong>
    <ul>
      <li>每一步离子优化后，重新计算体系的总能量、原子受力和晶格应力。</li>
      <li>优化会持续到满足收敛准则（如 <code class="language-plaintext highlighter-rouge">EDIFFG</code>），或达到最大步数 <code class="language-plaintext highlighter-rouge">NSW</code>。</li>
    </ul>
  </li>
  <li><strong>更新结构：</strong>
    <ul>
      <li>每一步优化的中间结果存储在 <code class="language-plaintext highlighter-rouge">XDATCAR</code> 文件中。</li>
      <li>优化完成后的最终结构保存至 <code class="language-plaintext highlighter-rouge">CONTCAR</code> 文件。</li>
    </ul>
  </li>
</ol>

<h3 id="32-收敛性的判断方法">3.2 收敛性的判断方法</h3>

<p>优化过程是否收敛，可通过以下方式判断：</p>

<ol>
  <li><strong><code class="language-plaintext highlighter-rouge">OUTCAR</code> 文件：</strong>
    <ul>
      <li>
        <table>
          <tbody>
            <tr>
              <td>检查每个原子的受力是否小于</td>
              <td><code class="language-plaintext highlighter-rouge">EDIFFG</code></td>
              <td>。</td>
            </tr>
          </tbody>
        </table>
      </li>
      <li>总能量变化是否小于 <code class="language-plaintext highlighter-rouge">EDIFF</code>。</li>
    </ul>
  </li>
  <li><strong><code class="language-plaintext highlighter-rouge">OSZICAR</code> 文件：</strong>
    <ul>
      <li>查看 SCF 迭代的能量变化（<code class="language-plaintext highlighter-rouge">E0</code> 和 <code class="language-plaintext highlighter-rouge">dE</code>）。</li>
      <li>判断 SCF 是否稳定收敛。</li>
    </ul>
  </li>
  <li><strong><code class="language-plaintext highlighter-rouge">CONTCAR</code> 文件：</strong>
    <ul>
      <li>提取最终优化的原子位置和晶格参数。</li>
      <li>如果优化未收敛，<code class="language-plaintext highlighter-rouge">CONTCAR</code> 保存的是最后一步的结构。</li>
    </ul>
  </li>
  <li><strong>借助工具：</strong>
    <ul>
      <li>使用 <code class="language-plaintext highlighter-rouge">pymatgen</code> 或 <code class="language-plaintext highlighter-rouge">ASE</code> 等工具解析 <code class="language-plaintext highlighter-rouge">vasprun.xml</code> 文件，判断优化收敛性。</li>
    </ul>
  </li>
</ol>

<h3 id="33-常见问题与解决方法">3.3 常见问题与解决方法</h3>

<h4 id="331-scf-不收敛"><strong>3.3.1 SCF 不收敛</strong></h4>

<p><strong>问题：</strong> SCF 迭代过程中能量振荡或发散。</p>

<p><strong>可能原因：</strong></p>
<ul>
  <li>初始电子密度设置不合理。</li>
  <li>截断能量（<code class="language-plaintext highlighter-rouge">ENCUT</code>）不足。</li>
</ul>

<p><strong>解决方法：</strong></p>
<ul>
  <li>增大 SCF 最大迭代次数：设置 <code class="language-plaintext highlighter-rouge">NELM=200</code>。</li>
  <li>提高截断能量：将 <code class="language-plaintext highlighter-rouge">ENCUT</code> 提高至 520 eV 或更高。</li>
</ul>

<h4 id="332-优化不收敛"><strong>3.3.2 优化不收敛</strong></h4>

<p><strong>问题：</strong> 优化迭代达到最大步数（<code class="language-plaintext highlighter-rouge">NSW</code>），但力或能量未满足收敛准则。</p>

<p><strong>可能原因：</strong></p>
<ul>
  <li>初始结构远离势能最低点。</li>
  <li>收敛准则（<code class="language-plaintext highlighter-rouge">EDIFFG</code>）过于严格。</li>
  <li>优化步长（<code class="language-plaintext highlighter-rouge">POTIM</code>）过大。</li>
</ul>

<p><strong>解决方法：</strong></p>
<ul>
  <li>提供合理的初始结构，或通过外部工具预优化初始结构。</li>
  <li>放宽收敛准则：将 <code class="language-plaintext highlighter-rouge">EDIFFG</code> 从 <code class="language-plaintext highlighter-rouge">-0.01</code> 调整为 <code class="language-plaintext highlighter-rouge">-0.02</code>。</li>
  <li>降低优化步长：将 <code class="language-plaintext highlighter-rouge">POTIM</code> 从 <code class="language-plaintext highlighter-rouge">0.5</code> 调整为 <code class="language-plaintext highlighter-rouge">0.2</code>。</li>
</ul>

<h4 id="333-优化过程振荡"><strong>3.3.3 优化过程振荡</strong></h4>

<p><strong>问题：</strong> 优化过程中能量和力反复波动，难以稳定收敛。</p>

<p><strong>可能原因：</strong></p>
<ul>
  <li>优化步长（<code class="language-plaintext highlighter-rouge">POTIM</code>）设置过大。</li>
  <li>优化算法不适合当前体系。</li>
</ul>

<p><strong>解决方法：</strong></p>
<ul>
  <li>减小优化步长：将 <code class="language-plaintext highlighter-rouge">POTIM</code> 设置为 <code class="language-plaintext highlighter-rouge">0.2</code> 或更小。</li>
  <li>更换优化算法：
    <ul>
      <li>使用共轭梯度法：设置 <code class="language-plaintext highlighter-rouge">IBRION=2</code>。</li>
      <li>使用阻尼分子动力学法：设置 <code class="language-plaintext highlighter-rouge">IBRION=3</code>。</li>
    </ul>
  </li>
</ul>

<h4 id="334-优化过程发散"><strong>3.3.4 优化过程发散</strong></h4>

<p><strong>问题：</strong> 优化中结构严重变形，能量大幅增加。</p>

<p><strong>可能原因：</strong></p>
<ul>
  <li>原子间距过小，初始结构设置不合理。</li>
  <li>真空层不足（适用于低维体系，如薄膜或纳米结构）。</li>
  <li>错误的赝势文件。</li>
</ul>

<p><strong>解决方法：</strong></p>
<ul>
  <li>确保合理的初始原子间距，避免原子间过近。</li>
  <li>增加真空层：对低维体系，设置真空层厚度至少为 15 Å。</li>
  <li>检查 <code class="language-plaintext highlighter-rouge">POTCAR</code> 文件，确保赝势与原子种类匹配。</li>
</ul>]]></content><author><name></name></author><category term="Calculation" /><summary type="html"><![CDATA[1. 输入文件 输入文件为 vasp 的四个基础文件：INCAR POSCAR POTCAR KPOINTS]]></summary></entry><entry><title type="html">声子蒙特卡罗模拟的理论基础</title><link href="https://lyushisyan.github.io/zh-CN/blog/2024/MC-phononBTE/" rel="alternate" type="text/html" title="声子蒙特卡罗模拟的理论基础" /><published>2024-11-16T02:36:10+03:00</published><updated>2024-11-16T02:36:10+03:00</updated><id>https://lyushisyan.github.io/blog/2024/MC-phononBTE</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2024/MC-phononBTE/"><![CDATA[<h2 id="1-玻尔兹曼输运方程">1. 玻尔兹曼输运方程</h2>

<h3 id="11-基于粒子玻尔兹曼输运方程">1.1 基于粒子玻尔兹曼输运方程：</h3>

\[\frac{\partial f}{\partial t} + \boldsymbol v_g(\omega,p)\nabla f = - \frac{f-f^{\text{loc}}}{\tau(\omega,p,T)}\]

<p>其中 $f=f(t,\boldsymbol x,\boldsymbol k,p)$ 是相空间中的声子分布函数，$\omega=\omega(\boldsymbol k,p)$ 是声子径向频率，$p$ 是声子极化，$T$ 是温度。此外，$f^\text{loc}$ 是由局部伪温度参数化的 BE 平衡分布。</p>

<p>使用声子束来代表模拟粒子：</p>

\[f(t,\boldsymbol x,\boldsymbol k,p) \approx 8\pi^3N_\text{eff}\sum_i \delta^3(\boldsymbol x - \boldsymbol x_i) \delta^3(\boldsymbol k - \boldsymbol k_i) \delta_{p,p_i}\]

<p>$N_\text{eff}$ 是每个声子束中的声子有效数量。</p>

<h3 id="12-基于能量玻尔兹曼输运方程-energy-based-bte">1.2 基于能量玻尔兹曼输运方程 (energy-based BTE)：</h3>

\[\frac{\partial e}{\partial t} + \boldsymbol v_g\nabla e = - \frac{e-e^{\text{loc}}}{\tau}\]

<p>这里，模拟粒子为能量 $e=\hbar\omega f$，且 $e^\text{loc}=\hbar\omega f^\text{loc}$。</p>

\[e \approx 8\pi^3\varepsilon_\text{eff}\sum_i \delta^3(\boldsymbol x - \boldsymbol x_i) \delta^3(\boldsymbol k - \boldsymbol k_i) \delta_{p,p_i}\]

<p>其中 $\varepsilon_\text{eff}$ 定义为每个模拟粒子携带的有效能量 $\varepsilon_\text{eff}=N_\text{eff}\hbar\omega$。这里定义的能量粒子 $\varepsilon_\text{eff}$ 所代表的声子的有效数量是可变的。</p>

<h3 id="13-基于偏差能量玻尔兹曼输运方程-deviational-energy-based-bte">1.3 基于偏差能量玻尔兹曼输运方程 (deviational energy-based BTE)：</h3>

\[\frac{\partial e^d}{\partial t} + \boldsymbol v_g\nabla e^d = \frac{(e^{\text{loc}}-e^{\text{eq}}_{T_\text{eq}})-e^d}{\tau}\]

<p>其中，</p>

\[e^{\text{eq}}_{T_\text{eq}}(\omega) = \frac{\hbar\omega}{\exp\left(\frac{\hbar\omega}{k_BT_\text{eq}}\right)-1}\]

<p>这里，模拟粒子为能量偏差：$e^d =e - e^{\text{eq}}<em>{T</em>\text{eq}}$。</p>

\[e^d \approx 8\pi^3\varepsilon_\text{eff}^d\sum_i s(i) \delta^3(\boldsymbol x - \boldsymbol x_i) \delta^3(\boldsymbol k - \boldsymbol k_i) \delta_{p,p_i}\]

<p>$s(i)=+1$ 的粒子代表相对于参考状态增加的偏差能量份额（即较高温度区的“超额”声子群）。</p>

<p>$s(i)=-1$ 的粒子则代表相对于参考状态的负偏差能量份额（即较低温度区的“欠额”声子群）。</p>

<div class="text-center">
  



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/peri_bond-480.webp 480w,/assets/img/blog/peri_bond-800.webp 800w,/assets/img/blog/peri_bond-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/peri_bond.png" class="w-75" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
    <figcaption class="caption">图 1: 偏差能量示意图</figcaption>
  
</figure>

</div>

<p>偏差能量方法通过引入参考平衡温度 $T_\text{eq}$，将计算聚焦于非平衡态的能量偏差，而不是完整的声子分布函数。这减少了计算中对大量平衡态声子的无效模拟，尤其在小温差或接近平衡态的情况下，显著提高了模拟效率。</p>

<p>偏差能量方法中，模拟粒子的数量和符号（正负）直接对应偏差能量的变化，减少了添加或删除粒子时可能引入的能量误差。同时，其计算机制天然遵循能量守恒原则。</p>

<h2 id="2-蒙特卡洛模拟算法">2. 蒙特卡洛模拟算法</h2>

<h3 id="21-基于粒子模拟">2.1 基于粒子模拟</h3>

<h3 id="初始化"><strong>初始化:</strong></h3>

<p>在初始温度 $T$ 下，使用 BE 统计计算体积 $V$ 中的声子数量：</p>

\[N=V\int_{\omega=0}^{\omega_\text{max}}\sum_p D(\omega,p) f_T^\text{eq}(\omega) d\omega\]

<p>模拟粒子（每个代表一个声子束）的数量由 $N/N_\text{eff}$ 给出。</p>

<p>$N_\text{eff}$ 的值是通过平衡计算成本与获得具有统计意义的结果所需的粒子数量来确定的。</p>

<h3 id="时间演化"><strong>时间演化:</strong></h3>

<p>系统初始化后，将通过应用时间步长为 $\Delta t$ 的分割算法来进行模拟。
每一个时间步长由三个子步骤组成：</p>

<p>1). <strong>声子 Drift</strong></p>

<p>在此期间模拟粒子 $i$ 移动 $\boldsymbol v_{g,i}\Delta t$。</p>

<p>2). <strong>采样</strong></p>

<p>记录温度 ($T$) 和伪温度 ($T_\text{loc}$)，它们是通过反转能量 ($E$) 和赝能量 ($\widetilde E$) 关系来计算的：</p>

\[E=N_\text{eff}\sum_i\hbar\omega_i=V\int_{\omega=0}^{\omega_\text{max}}\sum_p \frac{D(\omega,p) \hbar\omega}{\exp\left(\frac{\hbar\omega}{k_BT}\right)-1} d\omega\]

\[\widetilde E=N_\text{eff}\sum_i\frac{\hbar\omega_i}{\tau(\omega_i,p_i,T)}=V\int_{\omega=0}^{\omega_\text{max}}\sum_p \frac{D(\omega,p) \hbar\omega}{\tau(\omega,p,T)}\frac{1}{\exp\left(\frac{\hbar\omega}{k_BT_\text{loc}}\right)-1} d\omega\]

<p>温度 ($T$) 表示热平衡下的平均温度，伪温度 ($T_\text{loc}$) 与声子的散射过程有关，用于非平衡态下的声子行为分析。</p>

<p>3). <strong>声子 Scatter</strong></p>

<p>根据散射概率进行散射：</p>

\[P_i = 1-\exp\left(-\frac{\Delta t}{\tau(\omega_i,p_i,T)}\right)\]

<p>散射通过采样新的频率、偏振和传播方向来完成。散射后的频率必须从分布 $D(\omega,p)f^\text{loc}/\tau(\omega,p,T)$ 中得出。</p>

<p>散射过程中要保证能量守恒。然而，由于散射声子的频率是随机采样的，因此需要添加或删除粒子，直到近似达到目标能量，强制实现能量守恒。</p>

<p>此方法并不总是确保能量守恒，导致模拟系统的能量随机游走，会引入确定性误差。</p>

<h3 id="22-基于能量模拟">2.2 基于能量模拟</h3>

<p>以能量作为模拟粒子，算法与上述类似，但需要做出以下调整：</p>

<ol>
  <li>初始化、边界发射或散射期间，频率分布的采样需考虑乘以因子 $\hbar\omega$ 的修正。</li>
  <li>网格内能量的计算很简单，只需计算粒子的数量即可。 $N$ 个粒子的能量由 $\varepsilon_\text{eff} N$ 给出。</li>
  <li>由于网格内的能量与粒子数量成正比，因此不需要添加或删除过程：只需保持粒子数量守恒，能量就严格自动守恒。</li>
</ol>

<h3 id="23-基于偏差能量模拟">2.3 基于偏差能量模拟</h3>

<h3 id="初始化-1"><strong>初始化:</strong></h3>

<p>首先选择温度 $T_\text{eq}$ 下的平衡状态作为参考值。</p>

<p>如果初始状态 $f^0$ 与平衡分布相同，那么模拟开始时没有粒子。基于对温度偏差上限的猜测，系统的偏差能量可以估计为：</p>

\[\Delta E = \int_{\omega=0}^{\omega_\text{max}}\sum_p\hbar\omega D(\omega,p)\times \bigg|\frac{1}{\exp(\frac{\hbar\omega}{k_BT})-1}-\frac{1}{\exp(\frac{\hbar\omega}{k_BT_\text{eq}})-1}\bigg| d\omega\]

<p>偏差有效能量 $\varepsilon_\text{eff}^d$ 可以根据所需的模拟粒子数量大致确定。</p>

<p>如果初始状态 $f^0$ 与平衡分布不同，则需要对粒子进行初始化。它们的频率和极化是从分布中得出的</p>

\[D(\omega,p)e^d(\omega) = \hbar\omega D(\omega,p)\bigg[f^0-\frac{1}{\exp(\frac{\hbar\omega}{k_BT_\text{eq}})-1}\bigg]\]

<p>通常，$f^0$ 是某个温度 $T$ 下的平衡分布，由此上述表达式可简化为</p>

\[D(\omega,p)e^d(\omega) = \hbar\omega D(\omega,p)\bigg[\frac{1}{\exp(\frac{\hbar\omega}{k_BT})-1}-\frac{1}{\exp(\frac{\hbar\omega}{k_BT_\text{eq}})-1}\bigg]\]

<p>如果 $T&gt;T_\text{eq}$ 该函数为正，如果 $T &lt; T_\text{eq}$ 该函数为负。因此，在后一种情况下，粒子被赋予负号。</p>

<p>频率的采样：通过将频率范围细分为 bin，根据上式定义一个离散化和归一化的累积分布，均匀地抽取一个0到1之间的随机数，通过该随机数对应归一化累积分布，从而找到对应的 bin。</p>

<h3 id="时间演化-1"><strong>时间演化:</strong></h3>

<p><strong>(1) 声子 drift：</strong></p>

<p>在这一时间步长 $\Delta t$，模拟粒子 $i$ 移动 $\boldsymbol v_{g,i}\Delta t$ 。</p>

<p><strong>(2) 采样：</strong></p>

<p>(a) 令 $C_j$ 为对应于时间 $t$ 时体积为 $V_j$ 的单元 $j$ 内的粒子的索引集。由于每个粒子代表相同的能量，因此偏差能量为</p>

\[\Delta E_j = \varepsilon_\text{eff}^d \sum_{i\in C_j} s(i) = \varepsilon_\text{eff}^d (N_j^+-N_j^-)\]

<p>其中 $N^+_j$ 和 $N^−_j$ 分别是单元 $j$ 内正粒子和负粒子的数量。</p>

<p>(b) 相应的温度 $T_j$ 通过对下式进行数值反演来计算</p>

\[\frac{\Delta E_j}{V_j} = \int_0^{\omega_\text{max}}\sum_p D(\omega,p)\hbar\omega \bigg[\frac{1}{\exp(\frac{\hbar\omega}{k_BT_j})-1} - \frac{1}{\exp(\frac{\hbar\omega}{k_BT_\text{eq}})-1} \bigg] d\omega\]

<p>(c) 通过数值反演计算相应的伪温度 $[T_\text{loc}]_j$</p>

\[\frac{\Delta \widetilde E_j}{V_j} = \int_0^{\omega_\text{max}}\sum_p \frac{D(\omega,p)\hbar\omega}{\tau(\omega,p,T_j)} \bigg[\frac{1}{\exp(\frac{\hbar\omega}{k_B[T_\text{loc}]_j})-1} - \frac{1}{\exp(\frac{\hbar\omega}{k_BT_\text{eq}})-1} \bigg] d\omega\]

\[\Delta\widetilde E_j = \varepsilon^d_\text{eff} \sum_{i\in C_j}\frac{s(i)}{\tau(\omega_i,p_i,T_j)}\]

<p><strong>(3) 声子 scatter：</strong></p>

<p>我们根据散射概率判断每个声子是否发生散射，散射概率公式为：</p>

\[P(\omega_i, p_i, T_j) = 1 - \exp\left(-\frac{\Delta t}{\tau(\omega_i, p_i, T_j)}\right)\]

<p>其中，$\omega_i$ 是声子的频率，$p_i$ 是偏振，$\tau$ 是声子的散射时间，取决于频率、偏振和局部温度 $T_j$ 。</p>

<p>散射过程中，单元格 $j$ 中的声子群代表了一定的偏差能量：$E^d_\text{eff}(N^+<em>{s,j} - N^-</em>{s,j})$</p>

<p>其中：</p>
<ul>
  <li>$N^+_{s,j}$ 表示单元格 $j$ 中正偏差粒子的数量；</li>
  <li>$N^-_{s,j}$ 表示单元格 $j$ 中负偏差粒子的数量。</li>
</ul>

<p>散射后的声子群需要替换为新的粒子，其属性（频率和偏振）从以下分布中抽取：</p>

\[\frac{D(\omega, p)(e^\text{loc} - e^\text{eq}_{T_\text{eq}})}{\tau(\omega, p, T_j)} = \frac{D(\omega, p)\hbar\omega}{\tau(\omega, p, T_j)} \bigg[\frac{1}{\exp\left(\frac{\hbar\omega}{k_B [T_\text{loc}]_j}\right) - 1} - \frac{1}{\exp\left(\frac{\hbar\omega}{k_B T_\text{eq}}\right) - 1} \bigg]\]

<h2 id="3-设置边界条件">3. 设置边界条件</h2>

<p>在声子输运问题中，会出现各种类型的边界条件：绝热边界，等温边界，周期性边界。</p>

<h3 id="31-绝热边界-adiabatic-boundary">3.1 绝热边界 (Adiabatic boundary)</h3>

<p>绝热边界反映了所有入射声子。这种反射过程可分为两大类：漫反射和镜面反射。
在这两种情况下，假设声子反射时偏振和频率保持相同。</p>

<p>在此过程中唯一修改的参数是行进方向。</p>

<p>(i) 镜面反射保证能量守恒 \(e^d(\boldsymbol x, \boldsymbol k) = e^d(\boldsymbol x, \boldsymbol k')\) ，方向为：\(\boldsymbol k' = \boldsymbol k - 2(\boldsymbol k \cdot \boldsymbol n) \boldsymbol n\)，其中 \(\boldsymbol n\) 为边界的法向量。</p>

<p>(ii) 漫反射相当于入射在边界上的声子的反射方向随机化，即与散射声子处理方式一致。</p>

<p>镜面反射发生在边界非常光滑时（相对于声子波长），即边界表面粗糙度远小于声子的波长。镜面反射不会导致声子分布的随机化，因此声子保持较强的方向性传输。</p>

<p>漫反射发生在边界粗糙度与声子波长相当或大于声子波长时。漫反射导致声子分布趋于各向同性，使声子传热效率降低。在纳米结构中，漫反射增强了声子边界散射效应，显著降低材料的有效热导率。</p>

<h3 id="32-等温边界-isothermal-boundary">3.2 等温边界 (Isothermal boundary)</h3>

<p>在温度 \(T_b\) 的等温边界条件下，入射到边界的声子会被边界完全吸收。同时，边界会以其自身温度 \(T_b\) 为准，从对应的平衡分布中重新发射声子。</p>

<p>每单位径向频率的发射热通量可以表示为：</p>

\[q_{\omega,b}'' = \frac{1}{4} \sum_p \frac{D(\omega,p)v_g(\omega,p)\hbar\omega}{\exp\left(\frac{\hbar\omega}{k_B T_b}\right) - 1}\]

<p>在偏差能量模拟中，需要考虑等温边界与参考平衡温度 $T_\text{eq}$ 之间的热流差异，我们可以通过减去 \(T_\text{eq}\) 对应的热通量来得到修正的表达式：</p>

\[q_{\omega,b}'' = \frac{1}{4} \sum_p D(\omega,p)v_g(\omega,p)\hbar\omega \cdot \bigg[\frac{1}{\exp\left(\frac{\hbar\omega}{k_B T_b}\right) - 1} - \frac{1}{\exp\left(\frac{\hbar\omega}{k_B T_\text{eq}}\right) - 1} \bigg]\]

<p>该公式提供了在等温边界条件下，发射粒子的频率分布函数。具体来说，它反映了边界在温度 \(T_b\) 下的非平衡声子输运特性，即边界如何根据温度差对声子进行吸收和重新发射。</p>

<h3 id="33-周期性边界-periodic-boundary">3.3 周期性边界 (Periodic boundary)</h3>

<p>周期性边界条件允许我们仅通过考虑一个晶胞（周期）来有效模拟完整的结构。</p>

<div class="text-center">
  



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/peri_bond-480.webp 480w,/assets/img/blog/peri_bond-800.webp 800w,/assets/img/blog/peri_bond-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/peri_bond.png" class="w-75" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
    <figcaption class="caption">图 2: 周期性边界条件</figcaption>
  
</figure>

</div>

<p>在边界处，声子分布与局部平衡的偏差是周期性的，可以通过以下关系描述：</p>

\[f_1^+ - f_{T_1}^\text{eq} = f_2^+ - f_{T_2}^\text{eq}\]

\[f_1^- - f_{T_1}^\text{eq} = f_2^- - f_{T_2}^\text{eq}\]

<p>其中 $f_{T_1}^\text{eq}$ 和 $f_{T_2}^\text{eq}$ 指温度 $T_1$ 和 $T_2$ 下的平衡分布，上标 $+$ 表示粒子向右移动，上标 $-$ 表示粒子向左移动。该公式同时反映了热通量和温度梯度的周期性。</p>

<p>对于偏差能量分布，该关系变为</p>

\[\hbar\omega(f_1^+ - f_{T_\text{eq}}^\text{eq} - f_{T_1}^\text{eq}) = \hbar\omega(f_2^+ - f_{T_\text{eq}}^\text{eq} - f_{T_2}^\text{eq})\]

\[\hbar\omega(f_1^- - f_{T_\text{eq}}^\text{eq} - f_{T_1}^\text{eq}) = \hbar\omega(f_2^- - f_{T_\text{eq}}^\text{eq} - f_{T_2}^\text{eq})\]

<p>用偏差能量来表示为：</p>

\[e_1^{d,+} - e_{T_1}^\text{eq} = e_2^{d,+} - e_{T_2}^\text{eq}\]

\[e_1^{d,-} - e_{T_1}^\text{eq} = e_2^{d,-} - e_{T_2}^\text{eq}\]

<p>周期性边界条件可以通过以下方式强制实现：</p>

<p>(i) 将跨越周期性边界的粒子从系统的一侧移除，并重新插入到另一侧，同时保持粒子的属性不变。</p>

<p>(ii) 在边界生成新的粒子：这些粒子的行进方向在半球体上是随机的，在热边界，它们被发送到带有正号的右侧行进。相反，具有相同性质的负粒子从冷边界发射出来。粒子的生成遵循下列分布：</p>

\[(e_{T_1}^\text{eq}-e_{T_2}^\text{eq})\frac{D(\omega,p)}{4\pi} v_g(\omega,p)\]

<hr />

<p>参考文献：</p>

<p>[1] S. Mazumder, A. Majumdar, Monte Carlo Study of Phonon Transport in Solid Thin Films Including Dispersion and Polarization, Journal of Heat Transfer 123 (2001) 749–759.</p>

<p>[2] Q. Hao, G. Chen, M.-S. Jeng, Frequency-dependent Monte Carlo simulations of phonon transport in two-dimensional porous silicon with aligned pores, Journal of Applied Physics 106 (2009) 114321.</p>

<p>[3] J.-P.M. Péraud, N.G. Hadjiconstantinou, Efficient simulation of multidimensional phonon transport using energy-based variance-reduced Monte Carlo formulations, Phys. Rev. B 84 (2011) 205331.</p>]]></content><author><name></name></author><category term="Monte-Carlo" /><summary type="html"><![CDATA[1. 玻尔兹曼输运方程]]></summary></entry><entry><title type="html">态密度的数值求解方法</title><link href="https://lyushisyan.github.io/zh-CN/blog/2024/dos-method/" rel="alternate" type="text/html" title="态密度的数值求解方法" /><published>2024-10-06T02:36:10+03:00</published><updated>2024-10-06T02:36:10+03:00</updated><id>https://lyushisyan.github.io/blog/2024/dos-method</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2024/dos-method/"><![CDATA[<p>晶格动力学研究中最重要的量之一是态密度 (DOS)，定义为在频率 $\omega$ 和 $\omega+d\omega$ 之间的简正模态的数量。</p>

<p>态密度的表达式：</p>

\[\text{DOS}(\omega)=\frac{V}{8\pi^3}\sum_s\int\frac{dS_\omega}{|\Delta_{\boldsymbol k}\omega_s|}\]

<p>其中，$S_\omega$ 是等频面。</p>

<h2 id="根采样法">根采样法</h2>

<p>这是一种最简单的方法 (也可称为直方图统计法)</p>

\[\text{DOS}(\omega)=\frac{V}{8\pi^3}\sum_{\boldsymbol qs} \delta(\omega-\omega(\boldsymbol qs))\]

<p>根据此方法，我们可以统计位于 $\Delta\omega$ 中的模态数量，从而得到态密度。但该方法需要布里渊区内大量的 $\boldsymbol k$ 点（网格需要足够密）以得到准确的结果。</p>

<h2 id="线性外推">线性外推</h2>

<p>GR 方法将第一布里渊区的不可约部分划分为由点 $\boldsymbol k_c$ 组成的均匀简单立方网格，点之间的距离为 \(2b\)。每个点 $\boldsymbol k_c$ 都位于一个小立方体的中心。从包含每个 $\boldsymbol k_c$ 的小立方体中提取 “所有” 频率，然后对所有立方体的贡献求和获得完整的频率分布。</p>

<p>在 $\boldsymbol k_c$ 处对应的特征频率为 $\omega(\boldsymbol k_c)$。我们假设线性外推法在每个小立方体中都适用，所以，等频面可以表示为垂直于 $\nabla\omega(\boldsymbol k_c)$ 的平行平面。两个这样的平行平面之间的体积元 $dV$ 与 $\omega$ 和 $\omega+d\omega$ 之间的频率数量成正比。当 $dV$ 接近 0 时，可以近似为</p>

\[dV=Sdk_\perp\]

<p>其中 $S$ 是立方体限制的平面面积（即为截面积），$dk_\perp$ 是体积单元的厚度。</p>

<div class="text-center">
  



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/GR_method-480.webp 480w,/assets/img/blog/GR_method-800.webp 800w,/assets/img/blog/GR_method-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/GR_method.png" class="w-75" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
    <figcaption class="caption">图 1: 线性外推（GR方法）</figcaption>
  
</figure>

</div>

<p>接下来需要考虑这一组恒频平面在立方体中横截面积的大小。首先假设等频平面的法线的三个方向余弦从大到小分别为 $l_1$，$l_2$ 和 $l_3$。</p>

<p>设任意截面与 $\boldsymbol k_c$ 的距离为 $h$，截面积表示为 $S(h)$</p>

<p>而且必然满足 $S(h) = S(-h)$, 所以我们只需考虑立方体的一半 ($h&gt;0$)</p>

<p>以递增的顺序列出位于这半部分的四个角与通过立方体中心的平面的距离：</p>

<p>\(h_1 = b|l_1-l_2-l_3|\)
\(h_2 = b(l_1-l_2+l_3)\)
\(h_3 = b(l_1+l_2-l_3)\)
\(h_4 = b(l_1+l_2+l_3)\)</p>

<p>在第一个范围 $(0\leq h \leq h_1)$ 中有两种可能性，取决于 $(l_1-l_2-l_3)$ 的符号。如果符号为正，则横截面是平行四边形，面积为</p>

\[S(h) = 4b^2/l_1\]

<p>如果为负，则横截面为六边形，面积为</p>

\[S(h) = \frac{2b^2(l_1l_2+l_2l_3+l_3l_1) - (h^2+b^2)}{l_1l_2l_3}\]

<p>在第二个范围 \((h_1\leq h \leq h_2)\) 中，形状是五边形，其面积为</p>

\[S(h) = \frac{2b^2(l_1l_2+3l_2l_3+l_3l_1) - bh(-l_1+l_2+l_3) - \frac{1}{2}(h^2+b^2)}{l_1l_2l_3}\]

<p>在第三个范围 \((h_2\leq h \leq h_3)\) 中，形状是四边形，其面积为</p>

\[S(h) = 2\frac{b^2l_3(l_1+l_2)-bhl_3}{l_1l_2l_3}\]

<p>在第四个范围 \((h_3\leq h \leq h_4)\) 中，形状是四边形，其面积为</p>

\[S(h) = \frac{[b(l_1+l_2+l_3)-h]^2}{2l_1l_2l_3}\]

<p>这些表达式及其导数在各自的边界处都是连续的，\(S(h)\) 在整个范围内积分可得到立方体的体积。</p>

<p>对整个立方体进行线性外推可以获得频率变化</p>

\[\Omega = \omega(\boldsymbol k_c) \pm h\nabla\omega(\boldsymbol k_c)\]

<p>其中 $0\leq h\leq h_4$</p>

<p>为了构造 $\text{DOS}(\omega)$，我们定义一个函数 $g_s(\boldsymbol k_c,\omega)$，它是通过线性外推整个以 $\boldsymbol k_c$ 为中心的立方体而获得的频率分布:</p>

\[g_s(\boldsymbol k_c,\omega) = CW(\boldsymbol k_c)S_s(h)dh = CW(\boldsymbol k_c)S_s(w) \frac{d\omega}{|\nabla\omega(\boldsymbol k_c)|}\]

<p>其中, $\omega(\boldsymbol k_c) - h_4\nabla\omega(\boldsymbol k_c) \leq \omega \leq \omega(\boldsymbol k_c) + h_4\nabla\omega(\boldsymbol k_cs)$</p>

<p>这里 $C$ 是归一化常数，$W(\boldsymbol k_c)$ 是点 $\boldsymbol k_c$ 与对称性相关的权重因子</p>

<p>最后, 完整的态密度</p>

\[\text{DOS}(\omega) = \sum_{\boldsymbol k_c, s} g_s(\boldsymbol k_c,\omega)\]

<p>GR 方法有两个实际困难：
（i）它需要首先计算梯度 $\nabla\omega(\boldsymbol k_c)$，
（ii）由于立方体通常不完全符合布里渊区，因此有必要确定区域不可约部分的立方体的统计权重。</p>

<h2 id="线性外推的推广">线性外推的推广</h2>

<p>GGR 方法的核心思想是使用仿射变换将平行六面体的布里渊区变换为立方体，从而使得原始 GR 方法可以用于任何格子。</p>

<p>BZ是由三个倒易向量 $\boldsymbol b_i(i=1,2,3)$ 构成的平行六面体。$\boldsymbol k$ 点沿三个基向量 $\boldsymbol b_i$ 均匀分布。</p>

<p>仿射变换将平行六面体 BZ 的 $\boldsymbol k$ 基变为立方的 $\boldsymbol t=(t_1, t_2, t_3)$ 基：</p>

\[\boldsymbol k = \boldsymbol b_1 t_1 + \boldsymbol b_2 t_2 + \boldsymbol b_3 t_3\]

<p>其中 $t_1, t_2, t_3 \in [0, 1]$</p>

<div class="text-center">
  



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/GGR-480.webp 480w,/assets/img/blog/GGR-800.webp 800w,/assets/img/blog/GGR-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/GGR.png" class="w-75" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
    <figcaption class="caption">图 1: 线性外推的推广（GGR方法）</figcaption>
  
</figure>

</div>

<p>两组基底的体积元满足 $dV_k = \det(B)dV_t = \Omega dV_t$，其中 $\Omega$ 为 BZ 的体积。</p>

<p>我们将 $\text{DOS}(\omega)$（等频曲面 $S_\omega$ 上的积分）从 $\boldsymbol k$ 基变为立方的 $\boldsymbol t$ 基：</p>

\[\text{DOS}(\omega)=\frac{1}{\Omega} \sum_s\int_{S_\omega}\frac{dS_k}{|\Delta_{\boldsymbol k}\omega_s|} = \sum_s\int_{S_\omega}\frac{dS_t}{|\Delta_{\boldsymbol t}\omega_s|}\]

<h2 id="线性内插">线性内插</h2>

<p>将不可约部分内的立方体划分为多个等体积的四面体。在四面体的每个顶点处已知声子频率，然后四面体内部任意位置的声子频率 $\nabla\omega(\boldsymbol k)$ 可以通过线性内插得到</p>

\[\omega(\boldsymbol k) = a_1\omega(\boldsymbol k_1) + a_2\omega(\boldsymbol k_2) + a_3\omega(\boldsymbol k_3) + a_4\omega(\boldsymbol k_4)\]

<p>其中，$a_i$ 是四面体的顶点权重系数，满足 $a_1+a_2+a_3+a_4 = 1$，而这些权重系数依赖于点 $\boldsymbol k$ 在四面体内的位置。</p>

<p>四面体法只需要粗网格下的 $\omega(\boldsymbol k_i)$ 的分布，不需要频率梯度（群速度）。</p>

<p>但是在带交叉处，即对简并性上的点进行采样，线性插值会导致误差增加。</p>]]></content><author><name></name></author><category term="Calculation" /><summary type="html"><![CDATA[晶格动力学研究中最重要的量之一是态密度 (DOS)，定义为在频率 $\omega$ 和 $\omega+d\omega$ 之间的简正模态的数量。]]></summary></entry><entry><title type="html">QE 计算硅的声子色散关系</title><link href="https://lyushisyan.github.io/zh-CN/blog/2024/qe-disp-si/" rel="alternate" type="text/html" title="QE 计算硅的声子色散关系" /><published>2024-04-06T02:36:10+03:00</published><updated>2024-04-06T02:36:10+03:00</updated><id>https://lyushisyan.github.io/blog/2024/qe-disp-si</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2024/qe-disp-si/"><![CDATA[<p>在 Quantum Espresso 中，声子色散是使用 <code class="language-plaintext highlighter-rouge">ph.x</code> 程序计算的，该程序基于密度泛函微扰理论 (DFPT) 。本文以单晶硅 (Si) 为例展开计算。</p>

<h2 id="第一步-pwx">第一步 pw.x</h2>

<p>使用 <code class="language-plaintext highlighter-rouge">pw.x</code> 进行SCF计算</p>

<ul>
  <li><strong>SCF 输入文件 (<code class="language-plaintext highlighter-rouge">pw.scf.Si.in</code>)</strong></li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&amp;control
  calculation <span class="o">=</span> <span class="s1">'scf'</span>
  restart_mode <span class="o">=</span> <span class="s1">'from_scratch'</span>
  pseudo_dir <span class="o">=</span> <span class="s1">'./pseudos/'</span>
  outdir <span class="o">=</span> <span class="s1">'./out/'</span>
  prefix <span class="o">=</span> <span class="s1">'Si'</span>
/
&amp;system
  ibrav <span class="o">=</span> 2
  celldm<span class="o">(</span>1<span class="o">)</span> <span class="o">=</span> 10.20
  nat <span class="o">=</span> 2
  ntyp <span class="o">=</span> 1
  ecutwfc <span class="o">=</span> 16
/
&amp;electrons
  mixing_mode <span class="o">=</span> <span class="s1">'plain'</span>
  mixing_beta <span class="o">=</span> 0.7
  conv_thr <span class="o">=</span> 1.0e-8
/
ATOMIC_SPECIES
  Si 28.0855 Si.vbc.UPF
ATOMIC_POSITIONS
  Si 0.00 0.00 0.00
  Si 0.25 0.25 0.25
K_POINTS <span class="o">{</span>automatic<span class="o">}</span>
  8 8 8 0 0 0
</code></pre></div></div>

<ul>
  <li><strong>执行 SCF 计算</strong></li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mpirun <span class="nt">-np</span> 4 pw.x <span class="nt">-i</span> pw.scf.Si.in <span class="o">&gt;</span> pw.scf.Si.out
</code></pre></div></div>

<h2 id="第二步-phx">第二步 ph.x</h2>

<p>使用 <code class="language-plaintext highlighter-rouge">ph.x</code> 计算 q 点均匀网格上的动力学矩阵</p>

<ul>
  <li><strong>输入文件 (<code class="language-plaintext highlighter-rouge">ph.Si.in</code>)</strong></li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&amp;INPUTPH
  tr2_ph <span class="o">=</span> 1d-14
  amass<span class="o">(</span>1<span class="o">)</span> <span class="o">=</span> 28.0855
  ldisp <span class="o">=</span> .true.
  nq1 <span class="o">=</span> 4
  nq2 <span class="o">=</span> 4
  nq3 <span class="o">=</span> 4
  outdir <span class="o">=</span> <span class="s1">'./out/'</span>
  prefix <span class="o">=</span> <span class="s1">'Si'</span>
  fildyn <span class="o">=</span> <span class="s1">'Si.dyn'</span>
/
</code></pre></div></div>

<ul>
  <li><strong>执行计算</strong></li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mpirun <span class="nt">-np</span> 4 ph.x <span class="nt">-i</span> ph.Si.in <span class="o">&gt;</span> ph.Si.out
</code></pre></div></div>

<ul>
  <li><strong>输出文件</strong></li>
</ul>

<p><strong><code class="language-plaintext highlighter-rouge">Si.dyn0</code></strong> 包含有关 q 点网格的坐标</p>

<p><strong><code class="language-plaintext highlighter-rouge">Si.dyn1-N</code></strong> 包含力常数 C(q_n)，其中 n = 1,…N，其中 N 是不可约布里渊区中 <strong>q</strong> 点数量</p>

<h2 id="第三步-q2rx">第三步 q2r.x</h2>

<p>使用 <code class="language-plaintext highlighter-rouge">q2r.x</code> 对 q 空间的力常数进行逆傅里叶变换以获得实空间中的力常数。</p>

<ul>
  <li><strong>输入文件 (<code class="language-plaintext highlighter-rouge">q2r.graphene.in</code>)</strong></li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&amp;INPUT
  fildyn <span class="o">=</span> <span class="s1">'Si.dyn'</span>
  zasr <span class="o">=</span> <span class="s1">'simple'</span> 
  flfrc <span class="o">=</span> <span class="s1">'Si444.fc'</span>
/
</code></pre></div></div>

<ul>
  <li><strong>执行计算</strong></li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mpirun <span class="nt">-np</span> 4 q2r.x <span class="nt">-i</span> q2r.Si.in <span class="o">&gt;</span> q2r.Si.out
</code></pre></div></div>

<ul>
  <li><strong>输出文件</strong></li>
</ul>

<p><strong><code class="language-plaintext highlighter-rouge">Si444.fc</code></strong> 包含实空间 <strong>4<em>4</em>4</strong> 超胞的原子间力常数</p>

<h2 id="第四步-matdynx">第四步 matdyn.x</h2>

<p>使用 <strong><code class="language-plaintext highlighter-rouge">matdyn.x</code></strong> 对实空间分量进行傅里叶变换，得到任意 q 处的动力学矩阵，进而得到任意 q 处的特征值（频率）。</p>

<ul>
  <li><strong>输入文件 (<code class="language-plaintext highlighter-rouge">matdyn.Si.in</code>)</strong></li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&amp;INPUT
  asr <span class="o">=</span> <span class="s1">'simple'</span>  
  flfrc <span class="o">=</span> <span class="s1">'Si444.fc'</span>
  flfrq <span class="o">=</span> <span class="s1">'Si.freq'</span>  
  flvec <span class="o">=</span> <span class="s1">'Si.modes'</span> 
  q_in_band_form <span class="o">=</span> .true.
/
6
0.000 0.000 0.000   50
0.500 0.000 0.500   50
0.625 0.250 0.625   1
0.375 0.375 0.750   50
0.000 0.000 0.000   50
0.500 0.500 0.500    1
</code></pre></div></div>

<ul>
  <li><strong>执行计算</strong></li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mpirun <span class="nt">-np</span> 4 matdyn.x <span class="nt">-i</span> matdyn.Si.in <span class="o">&gt;</span> matdyn.Si.out
</code></pre></div></div>

<p>然后根据得到的 <code class="language-plaintext highlighter-rouge">Si.freq.gp</code> 文件进行绘图：</p>

<div class="text-center">
  



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/Si-bulk-qe-480.webp 480w,/assets/img/blog/Si-bulk-qe-800.webp 800w,/assets/img/blog/Si-bulk-qe-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/Si-bulk-qe.png" class="w-75" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
    <figcaption class="caption">图: 硅的声子色散关系</figcaption>
  
</figure>

</div>]]></content><author><name></name></author><category term="Calculation" /><summary type="html"><![CDATA[在 Quantum Espresso 中，声子色散是使用 ph.x 程序计算的，该程序基于密度泛函微扰理论 (DFPT) 。本文以单晶硅 (Si) 为例展开计算。]]></summary></entry><entry><title type="html">使用 QE 进行能量自洽计算</title><link href="https://lyushisyan.github.io/zh-CN/blog/2024/qe-scf/" rel="alternate" type="text/html" title="使用 QE 进行能量自洽计算" /><published>2024-03-17T02:36:10+03:00</published><updated>2024-03-17T02:36:10+03:00</updated><id>https://lyushisyan.github.io/blog/2024/qe-scf</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2024/qe-scf/"><![CDATA[<p>pw.x 处理的计算包括以下7种类型，在输入文件中用 <code class="language-plaintext highlighter-rouge">calculation</code> 设置：</p>

<p><code class="language-plaintext highlighter-rouge">'scf'</code>：自洽计算，self-consistent field，通过迭代的方式数值求解微分-积分方程（Kohn-Sham方程），迭代收敛以电荷的变化足够小为准，最终得到自洽电荷。</p>

<p><code class="language-plaintext highlighter-rouge">'nscf'</code>：非自洽计算，nscf 计算常在k空间的网格上进行，网格要足够密以完成 k 空间上的积分，在DOS等计算需要更密的 k 点，这时在自洽电荷基础上，计算这些更多的 k 点，nscf计算保持自洽电荷不变。</p>

<p><code class="language-plaintext highlighter-rouge">'bands'</code>：也是一种 nscf 计算，k 点按照三维 k 空间中的特殊路径选取。</p>

<p><code class="language-plaintext highlighter-rouge">'relax'</code>：一系列 scf 计算，通过 Hellman-Feynman 力计算离子坐标驰豫（通过优化算法找到受力为零的结构），relax计算时固定cell不变。</p>

<p><code class="language-plaintext highlighter-rouge">'vc-relax'</code>: 允许cell变化的relax，通过应力的计算改变cell。</p>

<p><code class="language-plaintext highlighter-rouge">'md'</code>：分子动力学，将电子对离子的作用看成离子感受到的势，根据势能和离子初始速度求解离子运动的经典力学方程。</p>

<p><code class="language-plaintext highlighter-rouge">'vc-md'</code>：允许cell改变的md。</p>

<h2 id="输入文件">输入文件</h2>

<p>在 QE 的输入文件中，有 <code class="language-plaintext highlighter-rouge">NAMELISTS</code> 和 <code class="language-plaintext highlighter-rouge">INPUT_CARDS</code>。</p>

<p><code class="language-plaintext highlighter-rouge">PWscf</code> 中有三个强制 <code class="language-plaintext highlighter-rouge">NAMELISTS</code>：</p>

<ol>
  <li><code class="language-plaintext highlighter-rouge">&amp;CONTROL</code>：指定计算流，</li>
  <li><code class="language-plaintext highlighter-rouge">&amp;SYSTEM</code>：指定系统，</li>
  <li><code class="language-plaintext highlighter-rouge">&amp;ELECTRONS</code>：指定用于求解 Kohn-Sham 方程的算法。</li>
</ol>

<p>还有另外两个 <code class="language-plaintext highlighter-rouge">NAMELISTS</code>：<code class="language-plaintext highlighter-rouge">&amp;IONS</code> 和 <code class="language-plaintext highlighter-rouge">&amp;CELLS</code>，需要根据计算指定。</p>

<p><code class="language-plaintext highlighter-rouge">PWscf</code> 中的三个 <code class="language-plaintext highlighter-rouge">INPUT_CARDS</code>：<code class="language-plaintext highlighter-rouge">ATOMIC_SPECIES</code>、<code class="language-plaintext highlighter-rouge">ATOMIC_POSITIONS</code> 和 <code class="language-plaintext highlighter-rouge">K_POINTS</code> 是必需的。 在某些计算中还必须提供其他一些信息。</p>

<p><strong>示例：单晶硅的自洽计算  pw.scf.silicon.in</strong></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&amp;CONTROL
<span class="nv">calculation</span><span class="o">=</span><span class="s1">'scf'</span>,   <span class="c"># self-consistent field 进行自洽计算</span>
<span class="nv">prefix</span><span class="o">=</span><span class="s1">'silicon'</span>,   <span class="c"># 输出文件的前缀</span>
<span class="nv">pseudo_dir</span><span class="o">=</span><span class="s1">'./pseudo/'</span>,   <span class="c"># 存放赝势的文件夹</span>
<span class="nv">outdir</span><span class="o">=</span><span class="s1">'./out/'</span>,   <span class="c"># 指向输出文件的文件夹</span>
/
&amp;SYSTEM
<span class="nv">ibrav</span><span class="o">=</span>2,   <span class="c"># 布拉维晶格类型 FCC结构</span>
celldm<span class="o">(</span>1<span class="o">)=</span>10.2625,   <span class="c"># 晶格常数 （单位为波尔，1波尔=0.529A）</span>
<span class="nv">nat</span><span class="o">=</span>2,   <span class="c"># 结构内原子个数</span>
<span class="nv">ntyp</span><span class="o">=</span>1,   <span class="c"># 结构内原子种类数</span>
<span class="nv">ecutwfc</span><span class="o">=</span>60.0,   <span class="c"># 波函数截断能 （单位为里德伯格，1Ry = 13.606 eV）</span>
<span class="nv">ecutrho</span><span class="o">=</span>720.0,   <span class="c"># 电荷密度截断能</span>
<span class="o">!</span> occupations <span class="o">=</span> <span class="s1">'smearing'</span>, smearing <span class="o">=</span> <span class="s1">'gauss'</span>, degauss <span class="o">=</span> 1.0d-9 <span class="c"># 高斯展宽</span>
/
&amp;ELECTRONS
<span class="nv">mixing_beta</span><span class="o">=</span>0.7,   <span class="c"># 自洽计算过程中前后电荷密度混合比，默认0.7</span>
<span class="nv">conv_thr</span><span class="o">=</span>1d-8,   <span class="c"># 自洽收敛阙值，默认为1d-6</span>
/
ATOMIC_SPECIES
SI 28.0855 Si.pbe-rrkj.UPF   <span class="c"># 赝势</span>
ATOMIC_POSITIONS <span class="o">(</span>alat<span class="o">)</span>   <span class="c"># 原子位置（alat 表示采用分子坐标）</span>
Si 0.00 0.00 0.00
Si 0.25 0.25 0.25
K_POINTS automatic  <span class="c"># K点自动分布</span>
4 4 4 1 1 1
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">ibrav</code> - 取值 1-14 对应 14 个布拉维晶格，0对应自由晶格</li>
  <li><code class="language-plaintext highlighter-rouge">ecutwfc</code> - 波函数截断能，选择不同的赝势，会有对应的建议值。</li>
  <li><code class="language-plaintext highlighter-rouge">ecutrho</code> - 电荷密度截断能，与 ecutwfc 大小相关</li>
  <li>赝势为 NC ，该值为 ecutwfc 的 4 倍</li>
  <li>赝势为 US，该值为 ecutwfc 的 8-12 倍</li>
  <li>赝势为 PAW，该值为 ecutwfc 的 4 倍</li>
  <li><code class="language-plaintext highlighter-rouge">mixing</code> - 自洽计算过程中前后电荷密度混合比，默认0.7</li>
  <li><code class="language-plaintext highlighter-rouge">conv_thr</code> - 自洽收敛阙值，默认1d-6</li>
  <li>文件保存为 <code class="language-plaintext highlighter-rouge">pw.scf.silicon.in</code></li>
  <li>建议设置 <code class="language-plaintext highlighter-rouge">occupations='smearing',smearing='gaussian'</code>，使用高斯展宽。高斯展宽对导体和绝缘体是通用的，对于不同的材料调整degauss的值：（1）对于有带隙的材料，<code class="language-plaintext highlighter-rouge">degauss=1d-9</code>，也就是接近0就可以；（2）对于没有带隙的导体材料，<code class="language-plaintext highlighter-rouge">degauss</code> 从小尝试到大。</li>
</ul>

<p>必须阅读 <a href="https://www.quantum-espresso.org/Doc/INPUT_PW.html"><strong>PWscf user manual</strong></a> 才能深入理解自洽计算的输入文件。</p>

<p>https://www.quantum-espresso.org/Doc/INPUT_PW.html</p>

<h2 id="运行">运行</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mpirun <span class="nt">-np</span> 4 pw.x <span class="nt">-inp</span> pw.scf.silicon.in <span class="o">&gt;</span> pw.scf.silicon.out
</code></pre></div></div>

<h2 id="输出文件">输出文件</h2>

<p>现在让我们看看输出文件 <code class="language-plaintext highlighter-rouge">pw.scf.silicon.out</code> 并看看如何达到收敛：</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">grep</span> <span class="nt">-e</span> <span class="s1">'total energy'</span> <span class="nt">-e</span> estimate pw.scf.silicon.out
</code></pre></div></div>

<p>之后我们会看到：</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">Self-consistent</span><span class="w"> </span><span class="err">Calculation</span><span class="w">

</span><span class="err">iteration</span><span class="w"> </span><span class="err">#</span><span class="w">  </span><span class="mi">1</span><span class="w">     </span><span class="err">ecut=</span><span class="w">    </span><span class="mf">16.00</span><span class="w"> </span><span class="err">Ry</span><span class="w">     </span><span class="err">beta=</span><span class="w"> </span><span class="mf">0.70</span><span class="w">
</span><span class="err">Davidson</span><span class="w"> </span><span class="err">diagonalization</span><span class="w"> </span><span class="err">with</span><span class="w"> </span><span class="err">overlap</span><span class="w">
</span><span class="err">ethr</span><span class="w"> </span><span class="err">=</span><span class="w">  </span><span class="mf">1.00E-02</span><span class="err">,</span><span class="w">  </span><span class="err">avg</span><span class="w"> </span><span class="err">#</span><span class="w"> </span><span class="err">of</span><span class="w"> </span><span class="err">iterations</span><span class="w"> </span><span class="err">=</span><span class="w">  </span><span class="mf">2.0</span><span class="w">
</span><span class="err">Threshold</span><span class="w"> </span><span class="err">(ethr)</span><span class="w"> </span><span class="err">on</span><span class="w"> </span><span class="err">eigenvalues</span><span class="w"> </span><span class="err">was</span><span class="w"> </span><span class="err">too</span><span class="w"> </span><span class="err">large:</span><span class="w">
</span><span class="err">Diagonalizing</span><span class="w"> </span><span class="err">with</span><span class="w"> </span><span class="err">lowered</span><span class="w"> </span><span class="err">threshold</span><span class="w">
</span><span class="err">Davidson</span><span class="w"> </span><span class="err">diagonalization</span><span class="w"> </span><span class="err">with</span><span class="w"> </span><span class="err">overlap</span><span class="w">
</span><span class="err">ethr</span><span class="w"> </span><span class="err">=</span><span class="w">  </span><span class="mf">6.93E-04</span><span class="err">,</span><span class="w">  </span><span class="err">avg</span><span class="w"> </span><span class="err">#</span><span class="w"> </span><span class="err">of</span><span class="w"> </span><span class="err">iterations</span><span class="w"> </span><span class="err">=</span><span class="w">  </span><span class="mf">1.0</span><span class="w">
</span><span class="err">total</span><span class="w"> </span><span class="err">cpu</span><span class="w"> </span><span class="err">time</span><span class="w"> </span><span class="err">spent</span><span class="w"> </span><span class="err">up</span><span class="w"> </span><span class="err">to</span><span class="w"> </span><span class="err">now</span><span class="w"> </span><span class="err">is</span><span class="w">        </span><span class="mf">0.3</span><span class="w"> </span><span class="err">secs</span><span class="w">
</span><span class="err">total</span><span class="w"> </span><span class="err">energy</span><span class="w">              </span><span class="err">=</span><span class="w">     </span><span class="mf">-15.83539933</span><span class="w"> </span><span class="err">Ry</span><span class="w">
</span><span class="err">estimated</span><span class="w"> </span><span class="err">scf</span><span class="w"> </span><span class="err">accuracy</span><span class="w">    </span><span class="err">&lt;</span><span class="w">       </span><span class="mf">0.06071141</span><span class="w"> </span><span class="err">Ry</span><span class="w">

</span><span class="err">iteration</span><span class="w"> </span><span class="err">#</span><span class="w">  </span><span class="mi">2</span><span class="w">     </span><span class="err">ecut=</span><span class="w">    </span><span class="mf">16.00</span><span class="w"> </span><span class="err">Ry</span><span class="w">     </span><span class="err">beta=</span><span class="w"> </span><span class="mf">0.70</span><span class="w">
</span><span class="err">Davidson</span><span class="w"> </span><span class="err">diagonalization</span><span class="w"> </span><span class="err">with</span><span class="w"> </span><span class="err">overlap</span><span class="w">
</span><span class="err">ethr</span><span class="w"> </span><span class="err">=</span><span class="w">  </span><span class="mf">7.59E-04</span><span class="err">,</span><span class="w">  </span><span class="err">avg</span><span class="w"> </span><span class="err">#</span><span class="w"> </span><span class="err">of</span><span class="w"> </span><span class="err">iterations</span><span class="w"> </span><span class="err">=</span><span class="w">  </span><span class="mf">1.0</span><span class="w">
</span><span class="err">total</span><span class="w"> </span><span class="err">cpu</span><span class="w"> </span><span class="err">time</span><span class="w"> </span><span class="err">spent</span><span class="w"> </span><span class="err">up</span><span class="w"> </span><span class="err">to</span><span class="w"> </span><span class="err">now</span><span class="w"> </span><span class="err">is</span><span class="w">        </span><span class="mf">0.4</span><span class="w"> </span><span class="err">secs</span><span class="w">
</span><span class="err">total</span><span class="w"> </span><span class="err">energy</span><span class="w">              </span><span class="err">=</span><span class="w">     </span><span class="mf">-15.83851631</span><span class="w"> </span><span class="err">Ry</span><span class="w">
</span><span class="err">estimated</span><span class="w"> </span><span class="err">scf</span><span class="w"> </span><span class="err">accuracy</span><span class="w">    </span><span class="err">&lt;</span><span class="w">       </span><span class="mf">0.00218630</span><span class="w"> </span><span class="err">Ry</span><span class="w">

</span><span class="err">iteration</span><span class="w"> </span><span class="err">#</span><span class="w">  </span><span class="mi">3</span><span class="w">     </span><span class="err">ecut=</span><span class="w">    </span><span class="mf">16.00</span><span class="w"> </span><span class="err">Ry</span><span class="w">     </span><span class="err">beta=</span><span class="w"> </span><span class="mf">0.70</span><span class="w">
</span><span class="err">Davidson</span><span class="w"> </span><span class="err">diagonalization</span><span class="w"> </span><span class="err">with</span><span class="w"> </span><span class="err">overlap</span><span class="w">
</span><span class="err">ethr</span><span class="w"> </span><span class="err">=</span><span class="w">  </span><span class="mf">2.73E-05</span><span class="err">,</span><span class="w">  </span><span class="err">avg</span><span class="w"> </span><span class="err">#</span><span class="w"> </span><span class="err">of</span><span class="w"> </span><span class="err">iterations</span><span class="w"> </span><span class="err">=</span><span class="w">  </span><span class="mf">2.3</span><span class="w">
</span><span class="err">total</span><span class="w"> </span><span class="err">cpu</span><span class="w"> </span><span class="err">time</span><span class="w"> </span><span class="err">spent</span><span class="w"> </span><span class="err">up</span><span class="w"> </span><span class="err">to</span><span class="w"> </span><span class="err">now</span><span class="w"> </span><span class="err">is</span><span class="w">        </span><span class="mf">0.4</span><span class="w"> </span><span class="err">secs</span><span class="w">
</span><span class="err">total</span><span class="w"> </span><span class="err">energy</span><span class="w">              </span><span class="err">=</span><span class="w">     </span><span class="mf">-15.83897965</span><span class="w"> </span><span class="err">Ry</span><span class="w">
</span><span class="err">estimated</span><span class="w"> </span><span class="err">scf</span><span class="w"> </span><span class="err">accuracy</span><span class="w">    </span><span class="err">&lt;</span><span class="w">       </span><span class="mf">0.00007075</span><span class="w"> </span><span class="err">Ry</span><span class="w">

</span><span class="err">iteration</span><span class="w"> </span><span class="err">#</span><span class="w">  </span><span class="mi">4</span><span class="w">     </span><span class="err">ecut=</span><span class="w">    </span><span class="mf">16.00</span><span class="w"> </span><span class="err">Ry</span><span class="w">     </span><span class="err">beta=</span><span class="w"> </span><span class="mf">0.70</span><span class="w">
</span><span class="err">Davidson</span><span class="w"> </span><span class="err">diagonalization</span><span class="w"> </span><span class="err">with</span><span class="w"> </span><span class="err">overlap</span><span class="w">
</span><span class="err">ethr</span><span class="w"> </span><span class="err">=</span><span class="w">  </span><span class="mf">8.84E-07</span><span class="err">,</span><span class="w">  </span><span class="err">avg</span><span class="w"> </span><span class="err">#</span><span class="w"> </span><span class="err">of</span><span class="w"> </span><span class="err">iterations</span><span class="w"> </span><span class="err">=</span><span class="w">  </span><span class="mf">2.6</span><span class="w">
</span><span class="err">total</span><span class="w"> </span><span class="err">cpu</span><span class="w"> </span><span class="err">time</span><span class="w"> </span><span class="err">spent</span><span class="w"> </span><span class="err">up</span><span class="w"> </span><span class="err">to</span><span class="w"> </span><span class="err">now</span><span class="w"> </span><span class="err">is</span><span class="w">        </span><span class="mf">0.4</span><span class="w"> </span><span class="err">secs</span><span class="w">
</span><span class="err">total</span><span class="w"> </span><span class="err">energy</span><span class="w">              </span><span class="err">=</span><span class="w">     </span><span class="mf">-15.83900178</span><span class="w"> </span><span class="err">Ry</span><span class="w">
</span><span class="err">estimated</span><span class="w"> </span><span class="err">scf</span><span class="w"> </span><span class="err">accuracy</span><span class="w">    </span><span class="err">&lt;</span><span class="w">       </span><span class="mf">0.00000211</span><span class="w"> </span><span class="err">Ry</span><span class="w">

</span><span class="err">iteration</span><span class="w"> </span><span class="err">#</span><span class="w">  </span><span class="mi">5</span><span class="w">     </span><span class="err">ecut=</span><span class="w">    </span><span class="mf">16.00</span><span class="w"> </span><span class="err">Ry</span><span class="w">     </span><span class="err">beta=</span><span class="w"> </span><span class="mf">0.70</span><span class="w">
</span><span class="err">Davidson</span><span class="w"> </span><span class="err">diagonalization</span><span class="w"> </span><span class="err">with</span><span class="w"> </span><span class="err">overlap</span><span class="w">
</span><span class="err">ethr</span><span class="w"> </span><span class="err">=</span><span class="w">  </span><span class="mf">2.64E-08</span><span class="err">,</span><span class="w">  </span><span class="err">avg</span><span class="w"> </span><span class="err">#</span><span class="w"> </span><span class="err">of</span><span class="w"> </span><span class="err">iterations</span><span class="w"> </span><span class="err">=</span><span class="w">  </span><span class="mf">3.6</span><span class="w">
</span><span class="err">total</span><span class="w"> </span><span class="err">cpu</span><span class="w"> </span><span class="err">time</span><span class="w"> </span><span class="err">spent</span><span class="w"> </span><span class="err">up</span><span class="w"> </span><span class="err">to</span><span class="w"> </span><span class="err">now</span><span class="w"> </span><span class="err">is</span><span class="w">        </span><span class="mf">0.4</span><span class="w"> </span><span class="err">secs</span><span class="w">
</span><span class="err">total</span><span class="w"> </span><span class="err">energy</span><span class="w">              </span><span class="err">=</span><span class="w">     </span><span class="mf">-15.83900299</span><span class="w"> </span><span class="err">Ry</span><span class="w">
</span><span class="err">estimated</span><span class="w"> </span><span class="err">scf</span><span class="w"> </span><span class="err">accuracy</span><span class="w">    </span><span class="err">&lt;</span><span class="w">       </span><span class="mf">0.00000012</span><span class="w"> </span><span class="err">Ry</span><span class="w">

</span><span class="err">iteration</span><span class="w"> </span><span class="err">#</span><span class="w">  </span><span class="mi">6</span><span class="w">     </span><span class="err">ecut=</span><span class="w">    </span><span class="mf">16.00</span><span class="w"> </span><span class="err">Ry</span><span class="w">     </span><span class="err">beta=</span><span class="w"> </span><span class="mf">0.70</span><span class="w">
</span><span class="err">Davidson</span><span class="w"> </span><span class="err">diagonalization</span><span class="w"> </span><span class="err">with</span><span class="w"> </span><span class="err">overlap</span><span class="w">
</span><span class="err">ethr</span><span class="w"> </span><span class="err">=</span><span class="w">  </span><span class="mf">1.46E-09</span><span class="err">,</span><span class="w">  </span><span class="err">avg</span><span class="w"> </span><span class="err">#</span><span class="w"> </span><span class="err">of</span><span class="w"> </span><span class="err">iterations</span><span class="w"> </span><span class="err">=</span><span class="w">  </span><span class="mf">2.7</span><span class="w">
</span><span class="err">total</span><span class="w"> </span><span class="err">cpu</span><span class="w"> </span><span class="err">time</span><span class="w"> </span><span class="err">spent</span><span class="w"> </span><span class="err">up</span><span class="w"> </span><span class="err">to</span><span class="w"> </span><span class="err">now</span><span class="w"> </span><span class="err">is</span><span class="w">        </span><span class="mf">0.4</span><span class="w"> </span><span class="err">secs</span><span class="w">

</span><span class="err">End</span><span class="w"> </span><span class="err">of</span><span class="w"> </span><span class="err">self-consistent</span><span class="w"> </span><span class="err">calculation</span><span class="w">
</span></code></pre></div></div>

<p>值得注意的是，DFT <strong>总能量</strong>的绝对值并不相对于真空参考，而是取决于所选的赝势。</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">!</span><span class="w">    </span><span class="err">total</span><span class="w"> </span><span class="err">energy</span><span class="w">              </span><span class="err">=</span><span class="w">     </span><span class="mf">-15.83900302</span><span class="w"> </span><span class="err">Ry</span><span class="w">
     </span><span class="err">estimated</span><span class="w"> </span><span class="err">scf</span><span class="w"> </span><span class="err">accuracy</span><span class="w">    </span><span class="err">&lt;</span><span class="w">          </span><span class="mf">3.2E-10</span><span class="w"> </span><span class="err">Ry</span><span class="w">

     </span><span class="err">The</span><span class="w"> </span><span class="err">total</span><span class="w"> </span><span class="err">energy</span><span class="w"> </span><span class="err">is</span><span class="w"> </span><span class="err">the</span><span class="w"> </span><span class="err">sum</span><span class="w"> </span><span class="err">of</span><span class="w"> </span><span class="err">the</span><span class="w"> </span><span class="err">following</span><span class="w"> </span><span class="err">terms:</span><span class="w">
     </span><span class="err">one-electron</span><span class="w"> </span><span class="err">contribution</span><span class="w"> </span><span class="err">=</span><span class="w">       </span><span class="mf">4.79863652</span><span class="w"> </span><span class="err">Ry</span><span class="w">
     </span><span class="err">hartree</span><span class="w"> </span><span class="err">contribution</span><span class="w">      </span><span class="err">=</span><span class="w">       </span><span class="mf">1.07565897</span><span class="w"> </span><span class="err">Ry</span><span class="w">
     </span><span class="err">xc</span><span class="w"> </span><span class="err">contribution</span><span class="w">           </span><span class="err">=</span><span class="w">      </span><span class="mf">-4.81353993</span><span class="w"> </span><span class="err">Ry</span><span class="w">
     </span><span class="err">ewald</span><span class="w"> </span><span class="err">contribution</span><span class="w">        </span><span class="err">=</span><span class="w">     </span><span class="mf">-16.89975858</span><span class="w"> </span><span class="err">Ry</span><span class="w">

     </span><span class="err">convergence</span><span class="w"> </span><span class="err">has</span><span class="w"> </span><span class="err">been</span><span class="w"> </span><span class="err">achieved</span><span class="w"> </span><span class="err">in</span><span class="w">   </span><span class="mi">6</span><span class="w"> </span><span class="err">iterations</span><span class="w">
</span></code></pre></div></div>

<p>Tips</p>

<ul>
  <li>减少 <code class="language-plaintext highlighter-rouge">mixing_beta</code> 值，特别是当收敛能量周围存在振荡时。</li>
  <li>增加能量和电荷密度截止值（确保它们足够）。</li>
  <li>某些伪势文件有问题，可以尝试使用不同库中的伪势。</li>
  <li><code class="language-plaintext highlighter-rouge">conv_thr</code> 的建议值：
    <ul>
      <li>能量和特征值（scf 计算）1.0d-7 Ry</li>
      <li>受力（relax 计算）1.0e-8 Ry</li>
      <li>应力（vc-relax 计算）1.0d-9 Ry</li>
    </ul>
  </li>
  <li>能量和特征值（scf 计算）1.0d-7</li>
</ul>

<p>输出文件上还打印了其他几个重要信息。</p>

<p>计算中使用的<strong>交换相关性</strong>：</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">Exchange-correlation=</span><span class="w"> </span><span class="err">SLA</span><span class="w">  </span><span class="err">PZ</span><span class="w">   </span><span class="err">NOGX</span><span class="w"> </span><span class="err">NOGC</span><span class="w">
</span></code></pre></div></div>

<p>其中 <code class="language-plaintext highlighter-rouge">SLA</code> — Slater交换； <code class="language-plaintext highlighter-rouge">PZ</code> — LDA 的 Perdew-Zunger 参数化； <code class="language-plaintext highlighter-rouge">NOGX</code> 和 <code class="language-plaintext highlighter-rouge">NOGC</code> 表示不考虑密度梯度。</p>

<p>计算中使用的<strong>平面波总数</strong> (1067)：</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">Parallelization</span><span class="w"> </span><span class="err">info</span><span class="w">
</span><span class="err">--------------------</span><span class="w">
</span><span class="err">sticks:</span><span class="w">   </span><span class="err">dense</span><span class="w">  </span><span class="err">smooth</span><span class="w">     </span><span class="err">PW</span><span class="w">     </span><span class="err">G-vecs:</span><span class="w">    </span><span class="err">dense</span><span class="w">   </span><span class="err">smooth</span><span class="w">      </span><span class="err">PW</span><span class="w">
</span><span class="err">Min</span><span class="w">         </span><span class="mi">108</span><span class="w">     </span><span class="mi">108</span><span class="w">     </span><span class="mi">34</span><span class="w">                 </span><span class="mi">1489</span><span class="w">     </span><span class="mi">1489</span><span class="w">     </span><span class="mi">266</span><span class="w">
</span><span class="err">Max</span><span class="w">         </span><span class="mi">109</span><span class="w">     </span><span class="mi">109</span><span class="w">     </span><span class="mi">35</span><span class="w">                 </span><span class="mi">1492</span><span class="w">     </span><span class="mi">1492</span><span class="w">     </span><span class="mi">267</span><span class="w">
</span><span class="err">Sum</span><span class="w">         </span><span class="mi">433</span><span class="w">     </span><span class="mi">433</span><span class="w">    </span><span class="mi">139</span><span class="w">                 </span><span class="mi">5961</span><span class="w">     </span><span class="mi">5961</span><span class="w">    </span><span class="mi">1067</span><span class="w">
</span></code></pre></div></div>

<p><strong>Kohn-Sham 态的数量</strong>：</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">number</span><span class="w"> </span><span class="err">of</span><span class="w"> </span><span class="err">electrons</span><span class="w">       </span><span class="err">=</span><span class="w">         </span><span class="mf">8.00</span><span class="w">
</span><span class="err">number</span><span class="w"> </span><span class="err">of</span><span class="w"> </span><span class="err">Kohn-Sham</span><span class="w"> </span><span class="err">states=</span><span class="w">            </span><span class="mi">8</span><span class="w">
</span></code></pre></div></div>]]></content><author><name></name></author><category term="Calculation" /><summary type="html"><![CDATA[pw.x 处理的计算包括以下7种类型，在输入文件中用 calculation 设置：]]></summary></entry></feed>
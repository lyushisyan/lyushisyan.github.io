<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://lyushisyan.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lyushisyan.github.io/" rel="alternate" type="text/html" /><updated>2025-05-13T00:12:17+03:00</updated><id>https://lyushisyan.github.io/feed.xml</id><title type="html">blank</title><entry><title type="html">VASP Structure Optimization</title><link href="https://lyushisyan.github.io/blog/2024/vasp-relax/" rel="alternate" type="text/html" title="VASP Structure Optimization" /><published>2024-12-02T02:36:10+03:00</published><updated>2024-12-02T02:36:10+03:00</updated><id>https://lyushisyan.github.io/blog/2024/vasp-relax</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2024/vasp-relax/"><![CDATA[<h2 id="1-input-files">1. Input Files</h2>
<p>The input files for VASP are the four basic files: <code class="language-plaintext highlighter-rouge">INCAR</code>, <code class="language-plaintext highlighter-rouge">POSCAR</code>, <code class="language-plaintext highlighter-rouge">POTCAR</code>, <code class="language-plaintext highlighter-rouge">KPOINTS</code>.</p>

<h3 id="11-incar-parameter-settings">1.1 <code class="language-plaintext highlighter-rouge">INCAR</code> Parameter Settings</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>System = Si-film    # System name, can be freely defined to identify the current calculation system.

# Job Control
ISTART = 0          # Initial state setup:
                    # 0 Start calculation from scratch.
                    # 1 Read initial wavefunctions from WAVECAR file.
                    # 2 Read wavefunctions and charge density from WAVECAR and CHGCAR files.
ISPIN = 1           # Spin polarization options:
                    # 1 Non-spin-polarized (for non-magnetic materials).
                    # 2 Spin-polarized (for magnetic materials).
ICHARGE = 2         # Initial charge density selection:
                    # 2 Start from static charge density provided by POTCAR.
                    # 1 Generate charge density from scratch.
LWAVE = .FALSE.     # Output WAVECAR file:
                    # .TRUE. Output (store wavefunction data).
                    # .FALSE. Do not output (save disk space).
LCHARG = .FALSE.    # Output CHGCAR file:
                    # .TRUE. Output (store static charge density).
                    # .FALSE. Do not output (save disk space).
ISYM = 0            # Symmetry settings:
                    # 0 Disable symmetry (for systems with defects or asymmetric structures).
                    # 1 or 2 Preserve symmetry operations.

# Electronic Relaxation
ENCUT = 500         # Plane-wave cutoff energy (eV), determines calculation precision and efficiency.
ISMEAR = 0          # Smearing method:
                    # -5 (tetrahedron method for metals), 0 (Gaussian smearing for semiconductors), 1 or 2 (Fermi smearing).
SIGMA = 0.05        # Smearing width (eV), recommended values: 0.01 ~ 0.1.
EDIFF = 1E-08       # SCF convergence criterion: stops if energy change between iterations is less than 1E-08 eV.
NELMIN = 6          # Minimum number of electronic iterations to ensure basic convergence.
NELM = 300          # Maximum number of electronic iterations to avoid iteration loops.
GGA = PE            # Functional choice, using PBE (Perdew-Burke-Ernzerhof) exchange-correlation functional.
LREAL = .FALSE.     # Reciprocal space calculations, increases precision but adds computational cost.
ADDGRID = .TRUE.    # Enable additional FFT grid for improved numerical accuracy.
ALGO = N            # Electronic relaxation algorithm:
                    # Normal (standard mode), Fast, or VeryFast (accelerated modes).
PREC = Accurate     # Precision settings:
                    # Accurate (high precision), Normal, or Low (for initial tests).

# Ionic Relaxation
ISIF = 2            # Lattice optimization options:
                    # 2 Optimize atomic positions only, keep lattice parameters fixed.
                    # 3 Optimize both atomic positions and lattice shape.
EDIFFG = -0.01      # Ionic convergence criterion:
                    # Negative values based on force (eV/\u00c5).
                    # Positive values based on energy.
IBRION = 2          # Ionic relaxation algorithm:
                    # 2 Conjugate gradient algorithm (suitable for most optimization tasks).
POTIM = 0.5         # Time step, controls optimization speed.
NSW = 200           # Maximum number of ionic steps.

# Parallel Control
NPAR = 4            # FFT grid parallelization dimension (recommended: sqrt(total cores)).
KPAR = 2            # Number of parallel k-points (total cores should be divisible by NPAR \u00d7 KPAR \u00d7 NCORE).
NCORE = 12          # Number of cores per task.
</code></pre></div></div>

<p>For structural optimization, key parameters in <code class="language-plaintext highlighter-rouge">INCAR</code> include <code class="language-plaintext highlighter-rouge">IBRION</code>, <code class="language-plaintext highlighter-rouge">ISIF</code>, <code class="language-plaintext highlighter-rouge">NSW</code>, <code class="language-plaintext highlighter-rouge">EDIFF</code>, and <code class="language-plaintext highlighter-rouge">EDIFFG</code>.</p>

<h4 id="111-common-ibrion-settings-and-applications">1.1.1 Common <code class="language-plaintext highlighter-rouge">IBRION</code> Settings and Applications</h4>

<h5 id="1-single-point-energy-calculation">(1) Single-Point Energy Calculation</h5>
<ul>
  <li><strong><code class="language-plaintext highlighter-rouge">IBRION = -1</code></strong><br />
<strong>Usage</strong>: Used for single-point energy calculations such as fixed lattice, electronic structure, or DOS analysis.<br />
<strong>Note</strong>: Avoid setting <code class="language-plaintext highlighter-rouge">NSW &gt; 0</code> to prevent wasting resources.</li>
</ul>

<h5 id="2-structure-optimization">(2) Structure Optimization</h5>
<ul>
  <li>
    <p><strong><code class="language-plaintext highlighter-rouge">IBRION = 1</code></strong> (RMM-DIIS)<br />
<strong>Usage</strong>: Suitable for smooth potential energy surfaces in simple systems.<br />
<strong>Limitation</strong>: May encounter convergence issues for complex or unstable surfaces.</p>
  </li>
  <li>
    <p><strong><code class="language-plaintext highlighter-rouge">IBRION = 2</code></strong> (Conjugate Gradient)<br />
<strong>Usage</strong>: Most commonly used method, suitable for most systems.<br />
<strong>Advantage</strong>: Performs well for steep and complex surfaces.</p>
  </li>
  <li>
    <p><strong><code class="language-plaintext highlighter-rouge">IBRION = 3</code></strong> (Damped Molecular Dynamics)<br />
<strong>Usage</strong>: Stabilizes optimization paths that oscillate or diverge.</p>
  </li>
</ul>

<h5 id="3-molecular-dynamics">(3) Molecular Dynamics</h5>
<ul>
  <li><strong><code class="language-plaintext highlighter-rouge">IBRION = 0</code></strong><br />
<strong>Usage</strong>: For studying dynamic behavior of systems at different temperatures, such as diffusion or vibrational modes.</li>
</ul>

<h5 id="4-phonon-calculations">(4) Phonon Calculations</h5>

<p>a. <strong>Finite Difference Method</strong> <strong><code class="language-plaintext highlighter-rouge">IBRION = 5, 6</code></strong><br />
Calculates phonon modes using finite difference:</p>
<ul>
  <li><strong><code class="language-plaintext highlighter-rouge">5</code></strong>: Without symmetry, suitable for defective or low-symmetry structures.</li>
  <li><strong><code class="language-plaintext highlighter-rouge">6</code></strong>: Exploits symmetry for efficient calculations in high-symmetry systems.</li>
</ul>

<p>b. <strong>Perturbation Theory (DFPT)</strong> <strong><code class="language-plaintext highlighter-rouge">IBRION = 7, 8</code></strong><br />
Calculates phonon modes using density functional perturbation theory (DFPT):</p>
<ul>
  <li><strong><code class="language-plaintext highlighter-rouge">7</code></strong>: Without symmetry optimization, suitable for low-symmetry structures.</li>
  <li><strong><code class="language-plaintext highlighter-rouge">8</code></strong>: Utilizes symmetry for faster computation.</li>
</ul>

<h4 id="112-common-isif-settings-and-applications">1.1.2 Common <code class="language-plaintext highlighter-rouge">ISIF</code> Settings and Applications</h4>

<ul>
  <li>
    <p>Default value (if not set): <code class="language-plaintext highlighter-rouge">ISIF = 2</code> (Optimize atomic positions only, keep lattice shape and volume fixed).</p>
  </li>
  <li>Special Cases:
    <ul>
      <li><code class="language-plaintext highlighter-rouge">IBRION = 0</code> (molecular dynamics) or <code class="language-plaintext highlighter-rouge">LHFCALC = .TRUE.</code> (hybrid functional): <code class="language-plaintext highlighter-rouge">ISIF = 0</code>.</li>
    </ul>
  </li>
  <li>
    <p><strong><code class="language-plaintext highlighter-rouge">ISIF = 2</code> (Most Common)</strong><br />
Optimizes atomic positions only, suitable for 2D materials, fixed lattice constants, or surface/interface systems.</p>
  </li>
  <li>
    <p><strong><code class="language-plaintext highlighter-rouge">ISIF = 3</code> (Bulk Optimization)</strong><br />
Optimizes atomic positions, lattice shape, and volume, suitable for bulk material relaxations.</p>
  </li>
  <li>
    <p><strong><code class="language-plaintext highlighter-rouge">ISIF = 4</code> (Fixed Volume Optimization)</strong><br />
Optimizes atomic positions and lattice shape while keeping the volume fixed, useful for pressure tests.</p>
  </li>
  <li>
    <p><strong><code class="language-plaintext highlighter-rouge">ISIF = 6</code> (Lattice-Only Optimization)</strong><br />
Optimizes lattice shape and volume without relaxing atomic positions, useful for testing lattice parameters.</p>
  </li>
  <li><strong><code class="language-plaintext highlighter-rouge">ISIF = 0</code> (Position Optimization, No Stress Calculation)</strong><br />
Optimizes atomic positions without calculating stress, for fixed cell optimizations.</li>
</ul>

<h4 id="113-recommended-settings-for-nsw-ediff-and-ediffg">1.1.3 Recommended Settings for <code class="language-plaintext highlighter-rouge">NSW</code>, <code class="language-plaintext highlighter-rouge">EDIFF</code>, and <code class="language-plaintext highlighter-rouge">EDIFFG</code></h4>

<table>
  <thead>
    <tr>
      <th>Parameter</th>
      <th>Function</th>
      <th>Initial Optimization</th>
      <th>High-Precision Optimization</th>
      <th>Single Point</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">NSW</code></td>
      <td>Max ionic steps</td>
      <td>100-200</td>
      <td>200-500</td>
      <td>0</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">EDIFF</code></td>
      <td>SCF convergence (eV)</td>
      <td>1e-05</td>
      <td>1e-08</td>
      <td>1e-06</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">EDIFFG</code></td>
      <td>Ionic convergence (eV/\u00c5)</td>
      <td>-0.1</td>
      <td>-0.01</td>
      <td>Not required</td>
    </tr>
  </tbody>
</table>

<h3 id="12-example-poscar">1.2 Example <code class="language-plaintext highlighter-rouge">POSCAR</code></h3>

<p>Below is an example <code class="language-plaintext highlighter-rouge">POSCAR</code> file describing the structure of bulk silicon:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Si-bulk   # System name, customizable
1.0       # Global scaling factor (can be used to scale the lattice)
   5.430    0.000    0.000  # Lattice vector a
   0.000    5.430    0.000  # Lattice vector b
   0.000    0.000    5.430  # Lattice vector c
Si           # Atom types
2            # Number of atoms for each type
Direct       # Coordinate type (Direct: fractional; Cartesian: cartesian)
  0.000  0.000  0.000  # Coordinates for atom 1
  0.250  0.250  0.250  # Coordinates for atom 2
</code></pre></div></div>

<p>Example POSCAR File for Silicon Thin Film (Si-film):</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Si Thin Film                            
   1.00000000000000     
     5.4299999999999997    0.0000000000000000    0.0000000000000000
     0.0000000000000000    5.4299999999999997    0.0000000000000000
     0.0000000000000000    0.0000000000000000   20.8599999999999994
   Si
    16
Selective dynamics  # Enable Selective Dynamics
Direct
0.000000 0.000000 0.200000 F F F  # Fixed in all three directions
0.500000 0.500000 0.200000 T T F  # Fixed in z-direction, free in x and y
0.500000 0.000000 0.330153 T T T  # Free in all directions
0.000000 0.500000 0.330153 T T T
0.250000 0.250000 0.265077 T T T
0.750000 0.750000 0.265077 T T T
0.750000 0.250000 0.395230 T T T
0.250000 0.750000 0.395230 T T T
0.000000 0.000000 0.460307 T T T
0.500000 0.500000 0.460307 T T T
0.500000 0.000000 0.590460 T T T
0.000000 0.500000 0.590460 T T T
0.250000 0.250000 0.525384 T T T
0.750000 0.750000 0.525384 T T T
0.750000 0.250000 0.655537 T T T
0.250000 0.750000 0.655537 T T T
</code></pre></div></div>

<h3 id="13-kpoints-file">1.3 KPOINTS File</h3>

<h4 id="1-monkhorst-pack-grid">(1) Monkhorst-Pack Grid</h4>
<p>Monkhorst-Pack grids provide a uniform k-point distribution for periodic crystal calculations.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Automatic k-point generation   # Automatic k-point generation method (comment)
0                              # Ignore total k-point count, use automatic generation
Monkhorst-Pack                 # Choose Monkhorst-Pack grid
4 4 4                          # Grid density in x, y, z directions
0 0 0                          # No grid shift
</code></pre></div></div>
<p><strong>Use Case:</strong> Periodic crystals, optimization, DOS calculations, and electronic structure analysis.</p>

<h4 id="2-gamma-grid">(2) Gamma Grid</h4>
<p>Gamma grids center the k-point grid at the Gamma point, suitable for small or asymmetric lattices.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Automatic k-point generation   # Automatic k-point generation method (comment)
0                              # Ignore total k-point count, use automatic generation
Gamma                          # Choose Gamma-centered grid
4 4 4                          # Grid density in x, y, z directions
0 0 0                          # No grid shift
</code></pre></div></div>
<p><strong>Use Case:</strong> Small systems, asymmetric lattices, or fast calculation optimization tasks.</p>

<h3 id="14-potcar-file-usage">1.4 POTCAR File Usage</h3>

<p>POTCAR contains pseudopotential information required to describe atomic properties in the system.</p>

<h4 id="vasp-provides-multiple-types-of-pseudopotentials">VASP Provides Multiple Types of Pseudopotentials:</h4>
<ul>
  <li><strong>POT_GGA_PAW:</strong> PAW pseudopotentials with GGA functional.</li>
  <li><strong>POT_LDA_PAW:</strong> PAW pseudopotentials with LDA functional.</li>
</ul>

<h4 id="generating-the-potcar-file">Generating the POTCAR File:</h4>
<p>For a system with atoms like Si and H, concatenate the pseudopotential files:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cat /POT_GGA_PAW/POTCAR_Si /POT_GGA_PAW/POTCAR_H &gt; POTCAR
</code></pre></div></div>
<ul>
  <li>Ensure the functional type in POTCAR matches the INCAR settings.</li>
  <li>Maintain the atom order in POTCAR consistent with the element order in POSCAR.</li>
</ul>

<h2 id="2-output-files">2. Output Files</h2>

<h3 id="21-contcar-file">2.1 CONTCAR File</h3>

<p><strong>Content:</strong> Optimized crystal structure, including updated atomic coordinates and lattice parameters.
<strong>Format:</strong> Same as POSCAR, can directly serve as input for further calculations.
<strong>Use Case:</strong></p>
<ul>
  <li>Review the final optimized crystal structure.</li>
  <li>Use for further calculations (e.g., band structure, DOS).</li>
</ul>

<h3 id="22-oszicar-file">2.2 OSZICAR File</h3>

<p><strong>Content:</strong></p>
<ul>
  <li>Brief record of SCF (Self-Consistent Field) iteration energy changes.</li>
  <li>Energy (E0, dE) for each SCF step.</li>
  <li>Convergence information for SCF.</li>
  <li>Total energy changes per ion step during optimization.</li>
</ul>

<p><strong>Use Case:</strong></p>
<ul>
  <li>Quickly check SCF calculation or optimization convergence.</li>
  <li>Decide if adjustments to EDIFF or optimization steps are necessary.</li>
</ul>

<h3 id="23-outcar-file">2.3 OUTCAR File</h3>

<p><strong>Content:</strong></p>
<ul>
  <li>Most detailed output file with complete calculation history.</li>
  <li>Includes parameters like electronic relaxation, iteration info, convergence criteria, etc.</li>
  <li>Energy, force, stress, atomic coordinates for each optimization step.</li>
  <li>Charge density info (if applicable).</li>
</ul>

<p><strong>Use Case:</strong></p>
<ul>
  <li>Analyze convergence details and energy/force variations during optimization.</li>
</ul>

<h3 id="24-xdatcar-file">2.4 XDATCAR File</h3>

<p><strong>Content:</strong></p>
<ul>
  <li>Atomic coordinates for each ionic step during optimization or molecular dynamics (MD).</li>
</ul>

<p><strong>Use Case:</strong></p>
<ul>
  <li>Analyze atomic movement paths during optimization.</li>
  <li>Perform trajectory analysis for structural changes.</li>
</ul>

<h3 id="25-vasprunxml-file">2.5 vasprun.xml File</h3>

<p><strong>Content:</strong> XML-formatted record of all calculation data, suitable for parsing and post-processing.</p>
<ul>
  <li>Includes electronic iteration, ionic optimization parameters, and results.</li>
  <li>Data for energy, force, stress, atomic coordinates, etc.</li>
</ul>

<p><strong>Use Case:</strong></p>
<ul>
  <li>Extract key information using tools like pymatgen or ASE.</li>
</ul>

<h2 id="3-optimization-process-and-convergence-criteria">3. Optimization Process and Convergence Criteria</h2>

<h3 id="31-optimization-process">3.1 Optimization Process</h3>

<ol>
  <li><strong>Initialization of the Structure:</strong>
    <ul>
      <li>The initial structure is provided through the <code class="language-plaintext highlighter-rouge">POSCAR</code> file.</li>
      <li>The optimization conditions are configured using the <code class="language-plaintext highlighter-rouge">POTCAR</code>, <code class="language-plaintext highlighter-rouge">KPOINTS</code>, and <code class="language-plaintext highlighter-rouge">INCAR</code> files.</li>
    </ul>
  </li>
  <li><strong>Stepwise Optimization:</strong>
    <ul>
      <li>After each ionic optimization step, the total energy, atomic forces, and lattice stress of the system are recalculated.</li>
      <li>The optimization continues until convergence criteria (e.g., <code class="language-plaintext highlighter-rouge">EDIFFG</code>) are satisfied or the maximum number of steps (<code class="language-plaintext highlighter-rouge">NSW</code>) is reached.</li>
    </ul>
  </li>
  <li><strong>Structure Updates:</strong>
    <ul>
      <li>Intermediate results of each optimization step are stored in the <code class="language-plaintext highlighter-rouge">XDATCAR</code> file.</li>
      <li>The final structure after optimization is saved in the <code class="language-plaintext highlighter-rouge">CONTCAR</code> file.</li>
    </ul>
  </li>
</ol>

<h3 id="32-convergence-criteria">3.2 Convergence Criteria</h3>

<p>The convergence of the optimization process can be determined using the following methods:</p>

<ol>
  <li><strong><code class="language-plaintext highlighter-rouge">OUTCAR</code> File:</strong>
    <ul>
      <li>
        <table>
          <tbody>
            <tr>
              <td>Check whether the force on each atom is less than</td>
              <td><code class="language-plaintext highlighter-rouge">EDIFFG</code></td>
              <td>.</td>
            </tr>
          </tbody>
        </table>
      </li>
      <li>Verify whether the total energy change is less than <code class="language-plaintext highlighter-rouge">EDIFF</code>.</li>
    </ul>
  </li>
  <li><strong><code class="language-plaintext highlighter-rouge">OSZICAR</code> File:</strong>
    <ul>
      <li>Review the energy changes (<code class="language-plaintext highlighter-rouge">E0</code> and <code class="language-plaintext highlighter-rouge">dE</code>) during the SCF iterations.</li>
      <li>Determine whether the SCF process has stabilized and converged.</li>
    </ul>
  </li>
  <li><strong><code class="language-plaintext highlighter-rouge">CONTCAR</code> File:</strong>
    <ul>
      <li>Extract the final optimized atomic positions and lattice parameters.</li>
      <li>If the optimization has not converged, the <code class="language-plaintext highlighter-rouge">CONTCAR</code> file contains the structure from the last step.</li>
    </ul>
  </li>
  <li><strong>Using Tools:</strong>
    <ul>
      <li>Use tools like <code class="language-plaintext highlighter-rouge">pymatgen</code> or <code class="language-plaintext highlighter-rouge">ASE</code> to parse the <code class="language-plaintext highlighter-rouge">vasprun.xml</code> file and evaluate convergence.</li>
    </ul>
  </li>
</ol>

<h3 id="33-common-issues-and-solutions">3.3 Common Issues and Solutions</h3>

<h4 id="331-scf-not-converging"><strong>3.3.1 SCF Not Converging</strong></h4>

<p><strong>Issue:</strong> SCF iterations show energy oscillations or divergence.</p>

<p><strong>Possible Causes:</strong></p>
<ul>
  <li>The initial electronic density is poorly set.</li>
  <li>Insufficient cutoff energy (<code class="language-plaintext highlighter-rouge">ENCUT</code>).</li>
</ul>

<p><strong>Solutions:</strong></p>
<ul>
  <li>Increase the maximum number of SCF iterations by setting <code class="language-plaintext highlighter-rouge">NELM=200</code>.</li>
  <li>Raise the cutoff energy: increase <code class="language-plaintext highlighter-rouge">ENCUT</code> to 520 eV or higher.</li>
</ul>

<h4 id="332-optimization-not-converging"><strong>3.3.2 Optimization Not Converging</strong></h4>

<p><strong>Issue:</strong> Optimization reaches the maximum steps (<code class="language-plaintext highlighter-rouge">NSW</code>) but does not meet convergence criteria for force or energy.</p>

<p><strong>Possible Causes:</strong></p>
<ul>
  <li>The initial structure is far from the energy minimum.</li>
  <li>Convergence criteria (<code class="language-plaintext highlighter-rouge">EDIFFG</code>) are too strict.</li>
  <li>The optimization step size (<code class="language-plaintext highlighter-rouge">POTIM</code>) is too large.</li>
</ul>

<p><strong>Solutions:</strong></p>
<ul>
  <li>Provide a reasonable initial structure or pre-optimize using external tools.</li>
  <li>Relax the convergence criteria: adjust <code class="language-plaintext highlighter-rouge">EDIFFG</code> from <code class="language-plaintext highlighter-rouge">-0.01</code> to <code class="language-plaintext highlighter-rouge">-0.02</code>.</li>
  <li>Reduce the optimization step size: adjust <code class="language-plaintext highlighter-rouge">POTIM</code> from <code class="language-plaintext highlighter-rouge">0.5</code> to <code class="language-plaintext highlighter-rouge">0.2</code>.</li>
</ul>

<h4 id="333-oscillations-during-optimization"><strong>3.3.3 Oscillations During Optimization</strong></h4>

<p><strong>Issue:</strong> Energy and forces oscillate repeatedly during optimization, preventing stable convergence.</p>

<p><strong>Possible Causes:</strong></p>
<ul>
  <li>The optimization step size (<code class="language-plaintext highlighter-rouge">POTIM</code>) is too large.</li>
  <li>The optimization algorithm is unsuitable for the system.</li>
</ul>

<p><strong>Solutions:</strong></p>
<ul>
  <li>Decrease the optimization step size: set <code class="language-plaintext highlighter-rouge">POTIM</code> to <code class="language-plaintext highlighter-rouge">0.2</code> or smaller.</li>
  <li>Change the optimization algorithm:
    <ul>
      <li>Use the conjugate gradient method by setting <code class="language-plaintext highlighter-rouge">IBRION=2</code>.</li>
      <li>Use damped molecular dynamics by setting <code class="language-plaintext highlighter-rouge">IBRION=3</code>.</li>
    </ul>
  </li>
</ul>

<h4 id="334-divergence-during-optimization"><strong>3.3.4 Divergence During Optimization</strong></h4>

<p><strong>Issue:</strong> Severe deformation of the structure occurs during optimization, leading to significant energy increases.</p>

<p><strong>Possible Causes:</strong></p>
<ul>
  <li>Atomic distances are too short due to an unreasonable initial structure.</li>
  <li>Inadequate vacuum spacing (for low-dimensional systems such as thin films or nanostructures).</li>
  <li>Incorrect pseudopotential files.</li>
</ul>

<p><strong>Solutions:</strong></p>
<ul>
  <li>Ensure reasonable initial atomic distances to avoid overly close atoms.</li>
  <li>Increase the vacuum spacing: for low-dimensional systems, set the vacuum layer thickness to at least 15 Å.</li>
  <li>Verify the <code class="language-plaintext highlighter-rouge">POTCAR</code> file to ensure the pseudopotential matches the atomic species.</li>
</ul>]]></content><author><name></name></author><category term="Method" /><summary type="html"><![CDATA[1. Input Files The input files for VASP are the four basic files: INCAR, POSCAR, POTCAR, KPOINTS.]]></summary></entry><entry><title type="html">Topological Quantities and Properties of Phonons</title><link href="https://lyushisyan.github.io/blog/2024/topology/" rel="alternate" type="text/html" title="Topological Quantities and Properties of Phonons" /><published>2024-12-02T02:36:10+03:00</published><updated>2024-12-02T02:36:10+03:00</updated><id>https://lyushisyan.github.io/blog/2024/topology</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2024/topology/"><![CDATA[<h2 id="topological-geometry">Topological Geometry</h2>

<p>Topology studies geometric properties that remain invariant under continuous transformations, reflecting global characteristics.<br />
For example, the <strong>Gaussian curvature</strong> \(K\) of a surface describes local geometric properties and is related to global topological characteristics through the <strong>Gauss-Bonnet theorem</strong>:</p>

\[\int_S K \, d^2r = 4\pi (1-\text{genus}),\]

<p>where \(\text{genus}\) represents the number of holes in a geometric object. For example, the genus of a sphere is \(0\), while the genus of a torus (like a donut) is \(1\).</p>

<div class="row">
    <div class="col-md-6 text-center">
        



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/topology_huan-480.webp 480w,/assets/img/blog/topology_huan-800.webp 800w,/assets/img/blog/topology_huan-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/topology_huan.gif" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
</figure>

    </div>
</div>

<h2 id="topological-physics">Topological Physics</h2>

<p>Topological physics primarily investigates the topological properties in momentum space. In periodic lattices, electronic states can be described by the time-independent Schrödinger equation:</p>

\[H|\varphi\rangle = E|\varphi\rangle,\]

<p>where \(H\) is the Hamiltonian of the system, \(E\) is the energy eigenvalue of the electron, and \(\vert\varphi\rangle\) is the corresponding eigenstate. By solving this equation, one can obtain the band structure, i.e., the relationship between energy and momentum of electrons.</p>

<p>Traditional band theory focuses on the energy eigenvalues of electrons, while the significant contribution of topological physics lies in uncovering the hidden topological information within wavefunctions, i.e., the topology of electronic wavefunctions. For example, in the <strong>quantum Hall effect</strong>, the time-reversal symmetry of the system is broken, and the Chern number \(C \neq 0\). Based on different symmetries, researchers have developed many topological material systems, such as the valley Hall effect, topological crystalline insulators, and gapless topological semimetals, including Dirac states, Weyl states, nodal lines, and triple degeneracy points.</p>

<h2 id="topological-phonons">Topological Phonons</h2>

<p>Phonons, lacking charge and spin properties, entered topological research relatively late. Traditionally, phonon studies primarily focused on their particle-like properties (dispersion and scattering) and wave-like properties (coherence effects). Inspired by the analogy between phonons and electrons, researchers have recently observed novel transport phenomena in phononic systems, such as the <strong>phonon thermal Hall effect</strong>.</p>

<p>In phononic systems, breaking time-reversal symmetry is challenging. For crystals with time-reversal symmetry, atomic vibrations can be described by the equations of motion based on Newton’s laws. Under the harmonic approximation, the phonon characteristic equation can be written as:</p>

\[\boldsymbol{D}(\boldsymbol{k}) \boldsymbol{u}(\boldsymbol{k}) = \omega^2(\boldsymbol{k}) \boldsymbol{u}(\boldsymbol{k}),\]

<p>where \(\boldsymbol{u}(\boldsymbol{k})\) is the phonon eigenstate, and \(\omega(\boldsymbol{k})\) is the phonon frequency. Traditional studies only focus on eigenvalues, yielding phonon dispersion relations and density of states, while topological phonon research further explores the hidden topological information within eigenstates.</p>

<h3 id="topological-quantities-in-phononic-systems">Topological Quantities in Phononic Systems</h3>

<p>Using the wavefunctions of phonon eigenstates, topological quantities can be defined:</p>

<ul>
  <li>
    <p><strong>Berry Connection</strong>:</p>

\[A_{s,\boldsymbol{k}} = \text{i} \langle u_{s\boldsymbol{k}} | \nabla_{\boldsymbol{k}} | u_{s\boldsymbol{k}} \rangle,\]

    <p>describing the geometric properties of wavefunctions in momentum space.</p>
  </li>
  <li>
    <p><strong>Berry Curvature</strong>:</p>

\[\Omega_{s,\boldsymbol{k}} = \nabla_{\boldsymbol{k}} \times A_{s,\boldsymbol{k}},\]

    <p>the curl of the Berry connection, characterizing the local topological structure of wavefunctions in momentum space.</p>
  </li>
  <li>
    <p><strong>Berry Phase</strong>:</p>

\[\gamma_s = \int_L A \cdot d\boldsymbol{k},\]

    <p>the integral of the Berry connection along a specific path or loop.</p>
  </li>
  <li>
    <p><strong>Chern Number</strong>:<br />
In three-dimensional systems, the Chern number is defined as the integral over a closed surface in momentum space:</p>

\[C = \frac{1}{2\pi} \oint \Omega_{s,\boldsymbol{k}} d^2\boldsymbol{k}.\]
  </li>
</ul>

<p>Since phonons do not have spin \(1/2\) properties, the theory of quantum spin Hall states cannot be directly applied. Quantum spin Hall states in electronic systems can be seen as two quantum Hall states with opposite Chern numbers, resulting in a total Chern number of \(0\) under time-reversal symmetry. In phononic systems, lattice symmetry can be used to achieve double or multiple degeneracies, constructing pseudo-spin-like properties and providing new approaches to topological phonon research.</p>

<p>In classical phonon transport research, lattice symmetry is used to analyze phonon scattering channels and simplify force constant calculations. From the perspective of topological phonons, lattice symmetry is primarily used to determine phonon degeneracy and classify phonon branches.</p>

<p>At the boundaries or interfaces of materials, topological phonons can form special boundary states. These boundary states originate from inherent topological invariants of materials (such as Chern numbers or Berry curvature) and can propagate along scattering-free channels. This stability is known as the <strong>topological protection mechanism</strong>.</p>

<p>The dispersion relations of topological phonons also exhibit unique characteristics. In certain frequency ranges, phonon propagation is more efficient, while in other ranges, phonons may be suppressed.</p>]]></content><author><name></name></author><category term="Theory" /><summary type="html"><![CDATA[Topological Geometry]]></summary></entry><entry><title type="html">Theoretical framework for phonon Monte Carlo simulations</title><link href="https://lyushisyan.github.io/blog/2024/MC-phononBTE/" rel="alternate" type="text/html" title="Theoretical framework for phonon Monte Carlo simulations" /><published>2024-11-16T02:36:10+03:00</published><updated>2024-11-16T02:36:10+03:00</updated><id>https://lyushisyan.github.io/blog/2024/MC-phononBTE</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2024/MC-phononBTE/"><![CDATA[<h2 id="1-boltzmann-transport-equation">1. Boltzmann Transport Equation</h2>

<h3 id="11-particle-based-boltzmann-transport-equation">1.1 Particle-Based Boltzmann Transport Equation:</h3>

\[\frac{\partial f}{\partial t} + \boldsymbol v_g(\omega,p)\nabla f = - \frac{f-f^{\text{loc}}}{\tau(\omega,p,T)}\]

<p>where \(f=f(t,\boldsymbol x,\boldsymbol k,p)\) is the phonon distribution function in phase space, \(\omega=\omega(\boldsymbol k,p)\) is the phonon angular frequency, \(p\) is phonon polarization, and \(T\) is temperature. Moreover, \(f^\text{loc}\) is the BE equilibrium distribution parameterized by a local pseudo-temperature.</p>

<p>Using phonon bundles to represent simulated particles:</p>

\[f(t,\boldsymbol x,\boldsymbol k,p) \approx 8\pi^3N_\text{eff}\sum_i \delta^3(\boldsymbol x - \boldsymbol x_i) \delta^3(\boldsymbol k - \boldsymbol k_i) \delta_{p,p_i}\]

<p>where \(N_\text{eff}\) is the effective number of phonons in each phonon bundle.</p>

<h3 id="12-energy-based-boltzmann-transport-equation-energy-based-bte">1.2 Energy-Based Boltzmann Transport Equation (Energy-Based BTE):</h3>

\[\frac{\partial e}{\partial t} + \boldsymbol v_g\nabla e = - \frac{e-e^{\text{loc}}}{\tau}\]

<p>Here, simulated particles represent energy \(e=\hbar\omega f\), and \(e^\text{loc}=\hbar\omega f^\text{loc}\).</p>

\[e \approx 8\pi^3\varepsilon_\text{eff}\sum_i \delta^3(\boldsymbol x - \boldsymbol x_i) \delta^3(\boldsymbol k - \boldsymbol k_i) \delta_{p,p_i}\]

<p>where \(\varepsilon_\text{eff}\) is defined as the effective energy carried by each simulated particle, \(\varepsilon_\text{eff}=N_\text{eff}\hbar\omega\). The effective number of phonons represented by the energy particle \(\varepsilon_\text{eff}\) is variable.</p>

<h3 id="13-deviational-energy-based-boltzmann-transport-equation-deviational-energy-based-bte">1.3 Deviational Energy-Based Boltzmann Transport Equation (Deviational Energy-Based BTE):</h3>

\[\frac{\partial e^d}{\partial t} + \boldsymbol v_g\nabla e^d = \frac{(e^{\text{loc}}-e^{\text{eq}}_{T_\text{eq}})-e^d}{\tau}\]

<p>where,</p>

\[e^{\text{eq}}_{T_\text{eq}}(\omega) = \frac{\hbar\omega}{\exp\left(\frac{\hbar\omega}{k_BT_\text{eq}}\right)-1}\]

<p>Here, simulated particles represent deviational energy: \(e^d = e - e^{\text{eq}}_{T_\text{eq}}\).</p>

\[e^d \approx 8\pi^3\varepsilon_\text{eff}^d\sum_i s(i) \delta^3(\boldsymbol x - \boldsymbol x_i) \delta^3(\boldsymbol k - \boldsymbol k_i) \delta_{p,p_i}\]

<p>\(s(i)=+1\) represents a share of deviational energy increase relative to the reference state (the “excess” phonon group in higher-temperature regions).</p>

<p>\(s(i)=-1\) represents a share of deviational energy decrease relative to the reference state (the “deficient” phonon group in lower-temperature regions).</p>

<div class="row">
    <div class="col-md-6 text-center">
        



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/detaE-480.webp 480w,/assets/img/blog/detaE-800.webp 800w,/assets/img/blog/detaE-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/detaE.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
</figure>

    </div>
</div>

<p>The deviational energy method focuses calculations on the non-equilibrium energy deviations by introducing a reference equilibrium temperature \(T_\text{eq}\), rather than the full phonon distribution function. This reduces the simulation of large numbers of equilibrium phonons, significantly improving simulation efficiency, especially in cases of small temperature differences or near-equilibrium states.</p>

<p>In the deviational energy method, the number and sign (positive or negative) of simulated particles directly correspond to changes in deviational energy, reducing energy errors during particle addition or removal. Moreover, the computation inherently follows the principle of energy conservation.</p>

<h2 id="2-monte-carlo-simulation-algorithm">2. Monte Carlo Simulation Algorithm</h2>

<h3 id="21-particle-based-simulation">2.1 Particle-Based Simulation</h3>

<h3 id="initialization"><strong>Initialization:</strong></h3>

<p>At the initial temperature \(T\), use BE statistics to calculate the number of phonons in volume \(V\):
\(N=V\int_{\omega=0}^{\omega_\text{max}}\sum_p D(\omega,p) f_T^\text{eq}(\omega) d\omega\)
The number of simulated particles (each representing a phonon bundle) is given by \(N/N_\text{eff}\).</p>

<p>The value of \(N_\text{eff}\) is determined by balancing computational cost and the number of particles needed to obtain statistically meaningful results.</p>

<h3 id="time-evolution"><strong>Time Evolution:</strong></h3>

<p>After system initialization, the simulation is performed using a time-stepping algorithm with time step \(\Delta t\).
Each time step consists of three substeps:</p>

<p>1). <strong>Phonon Drift</strong></p>

<p>During this period, simulated particle \(i\) moves \(\boldsymbol v_{g,i}\Delta t\).</p>

<p>2). <strong>Sampling</strong></p>

<p>Record temperature (\(T\)) and pseudo-temperature (\(T_\text{loc}\)), which are computed by inverting the energy (\(E\)) and pseudo-energy (\(\widetilde E\)) relations:
\(E=N_\text{eff}\sum_i\hbar\omega_i=V\int_{\omega=0}^{\omega_\text{max}}\sum_p \frac{D(\omega,p) \hbar\omega}{\exp\left(\frac{\hbar\omega}{k_BT}\right)-1} d\omega\)
\(\widetilde E=N_\text{eff}\sum_i\frac{\hbar\omega_i}{\tau(\omega_i,p_i,T)}=V\int_{\omega=0}^{\omega_\text{max}}\sum_p \frac{D(\omega,p) \hbar\omega}{\tau(\omega,p,T)}\frac{1}{\exp\left(\frac{\hbar\omega}{k_BT_\text{loc}}\right)-1} d\omega\)
Temperature (\(T\)) represents the average temperature in thermal equilibrium, while pseudo-temperature (\(T_\text{loc}\)) is related to phonon scattering processes and used to analyze phonon behavior in non-equilibrium states.</p>

<p>3). <strong>Phonon Scatter</strong></p>

<p>Perform scattering based on the scattering probability:</p>

\[P_i = 1-\exp\left(-\frac{\Delta t}{\tau(\omega_i,p_i,T)}\right)\]

<p>Scattering is performed by sampling new frequencies, polarizations, and propagation directions. The post-scattering frequencies must be drawn from the distribution \(D(\omega,p)f^\text{loc}/\tau(\omega,p,T)\).</p>

<p>During scattering, energy conservation must be ensured. However, since the frequency of scattered phonons is randomly sampled, particles need to be added or removed to approximate the target energy, enforcing energy conservation.</p>

<p>This method does not always guarantee energy conservation, causing the system’s energy to drift randomly and introducing deterministic errors.</p>

<h3 id="22-energy-based-simulation">2.2 Energy-Based Simulation</h3>

<p>Using energy as the simulated particle, the algorithm is similar to the above but requires the following adjustments:</p>

<ol>
  <li>During initialization, boundary emission, or scattering, the sampling of frequency distribution must include a correction factor \(\hbar\omega\).</li>
  <li>Calculating energy within a grid is straightforward: simply count the number of particles. The energy of \(N\) particles is given by \(\varepsilon_\text{eff} N\).</li>
  <li>Since the energy within the grid is proportional to the number of particles, no addition or deletion process is needed: simply conserving the number of particles ensures strict energy conservation.</li>
</ol>

<h3 id="23-deviational-energy-based-simulation">2.3 Deviational Energy-Based Simulation</h3>

<h3 id="initialization-1"><strong>Initialization:</strong></h3>

<p>First, select the equilibrium state at temperature \(T_\text{eq}\) as the reference.</p>

<p>If the initial state \(f^0\) matches the equilibrium distribution, no particles exist at the start of the simulation. The system’s deviational energy can be estimated based on the maximum temperature deviation:</p>

\[\Delta E = \int_{\omega=0}^{\omega_\text{max}}\sum_p\hbar\omega D(\omega,p)\times \bigg|\frac{1}{\exp(\frac{\hbar\omega}{k_BT})-1}-\frac{1}{\exp(\frac{\hbar\omega}{k_BT_\text{eq}})-1}\bigg| d\omega\]

<p>The effective deviational energy \(\varepsilon_\text{eff}^d\) can be roughly determined based on the desired number of simulated particles.</p>

<p>If the initial state \(f^0\) differs from the equilibrium distribution, particles must be initialized. Their frequencies and polarizations are drawn from the distribution:</p>

\[D(\omega,p)e^d(\omega) = \hbar\omega D(\omega,p)\bigg[f^0-\frac{1}{\exp(\frac{\hbar\omega}{k_BT_\text{eq}})-1}\bigg]\]

<p>Typically, \(f^0\) is an equilibrium distribution at some temperature \(T\), simplifying the above expression to:</p>

\[D(\omega,p)e^d(\omega) = \hbar\omega D(\omega,p)\bigg[\frac{1}{\exp(\frac{\hbar\omega}{k_BT})-1}-\frac{1}{\exp(\frac{\hbar\omega}{k_BT_\text{eq}})-1}\bigg]\]

<p>If \(T &gt; T_\text{eq}\), this function is positive; if \(T &lt; T_\text{eq}\), it is negative. In the latter case, particles are assigned a negative sign.</p>

<p>Frequency sampling: By subdividing the frequency range into bins, define a discretized and normalized cumulative distribution according to the above equation. Uniformly draw a random number between 0 and 1, and use it to find the corresponding bin in the normalized cumulative distribution.</p>

<h3 id="time-evolution-1"><strong>Time Evolution:</strong></h3>

<p><strong>(1) Phonon Drift:</strong></p>

<p>During the time step \(\Delta t\), simulated particle \(i\) moves \(\boldsymbol v_{g,i}\Delta t\).</p>

<p><strong>(2) Sampling:</strong></p>

<p>(a) Let \(C_j\) denote the set of particle indices in volume \(V_j\) of cell \(j\) at time \(t\). Since each particle represents the same amount of energy, the deviational energy is:</p>

\[\Delta E_j = \varepsilon_\text{eff}^d \sum_{i\in C_j} s(i) = \varepsilon_\text{eff}^d (N_j^+ - N_j^-)\]

<p>where \(N_j^+\) and \(N_j^-\) are the numbers of positive and negative particles in cell \(j\), respectively.</p>

<p>(b) The corresponding temperature \(T_j\) is calculated by numerically inverting the equation:</p>

\[\frac{\Delta E_j}{V_j} = \int_0^{\omega_\text{max}}\sum_p D(\omega,p)\hbar\omega \bigg[\frac{1}{\exp(\frac{\hbar\omega}{k_BT_j})-1} - \frac{1}{\exp(\frac{\hbar\omega}{k_BT_\text{eq}})-1} \bigg] d\omega\]

<p>(c) The pseudo-temperature \([T_\text{loc}]_j\) is calculated by numerically inverting:</p>

\[\frac{\Delta \widetilde E_j}{V_j} = \int_0^{\omega_\text{max}}\sum_p \frac{D(\omega,p)\hbar\omega}{\tau(\omega,p,T_j)} \bigg[\frac{1}{\exp(\frac{\hbar\omega}{k_B[T_\text{loc}]_j})-1} - \frac{1}{\exp(\frac{\hbar\omega}{k_BT_\text{eq}})-1} \bigg] d\omega\]

\[\Delta\widetilde E_j = \varepsilon^d_\text{eff} \sum_{i\in C_j}\frac{s(i)}{\tau(\omega_i,p_i,T_j)}\]

<p><strong>(3) Phonon Scatter:</strong></p>

<p>Determine whether each phonon undergoes scattering based on the probability:</p>

\[P(\omega_i, p_i, T_j) = 1 - \exp\left(-\frac{\Delta t}{\tau(\omega_i, p_i, T_j)}\right)\]

<p>Scattered phonons are replaced with new particles, whose attributes (frequency and polarization) are drawn from:</p>

\[\frac{D(\omega, p)(e^\text{loc} - e^\text{eq}_{T_\text{eq}})}{\tau(\omega, p, T_j)} = \frac{D(\omega, p)\hbar\omega}{\tau(\omega, p, T_j)} \bigg[\frac{1}{\exp\left(\frac{\hbar\omega}{k_B [T_\text{loc}]_j}\right) - 1} - \frac{1}{\exp\left(\frac{\hbar\omega}{k_B T_\text{eq}}\right) - 1} \bigg]\]

<h2 id="3-setting-boundary-conditions">3. Setting Boundary Conditions</h2>

<p>In phonon transport problems, various types of boundary conditions can arise: adiabatic boundaries, isothermal boundaries, and periodic boundaries.</p>

<h3 id="31-adiabatic-boundary">3.1 Adiabatic Boundary</h3>

<p>Adiabatic boundaries reflect all incident phonons. This reflection process can be divided into two main categories: diffuse reflection and specular reflection.</p>

<p>In both cases, it is assumed that the polarization and frequency of phonons remain unchanged upon reflection. The only parameter modified during this process is the direction of propagation.</p>

<p>(i) Specular reflection ensures energy conservation, \(e^d(\boldsymbol x, \boldsymbol k) = e^d(\boldsymbol x, \boldsymbol k')\), with the direction given by:
\(\boldsymbol k' = \boldsymbol k - 2(\boldsymbol k \cdot \boldsymbol n) \boldsymbol n\)
where \(\boldsymbol n\) is the normal vector of the boundary.</p>

<p>(ii) Diffuse reflection randomizes the reflection direction of phonons incident on the boundary, similar to how scattered phonons are treated.</p>

<p>Specular reflection occurs when the boundary is very smooth (relative to the phonon wavelength), meaning the surface roughness of the boundary is much smaller than the phonon wavelength. Specular reflection does not randomize the phonon distribution, allowing phonons to maintain directional transport.</p>

<p>Diffuse reflection occurs when the boundary roughness is comparable to or larger than the phonon wavelength. Diffuse reflection leads to an isotropic phonon distribution, reducing the efficiency of phonon heat transfer. In nanostructures, diffuse reflection enhances phonon-boundary scattering effects, significantly reducing the material’s effective thermal conductivity.</p>

<h3 id="32-isothermal-boundary">3.2 Isothermal Boundary</h3>

<p>Under isothermal boundary conditions at temperature \(T_b\), phonons incident on the boundary are completely absorbed. The boundary then re-emits phonons according to its own temperature \(T_b\), following the equilibrium distribution.</p>

<p>The emitted heat flux per unit angular frequency can be expressed as:</p>

\[q_{\omega,b}'' = \frac{1}{4} \sum_p \frac{D(\omega,p)v_g(\omega,p)\hbar\omega}{\exp\left(\frac{\hbar\omega}{k_B T_b}\right) - 1}\]

<p>In deviational energy-based simulations, the difference in heat flux between the isothermal boundary and the reference equilibrium temperature \(T_\text{eq}\) must be considered. The corrected expression is given by:</p>

\[q_{\omega,b}'' = \frac{1}{4} \sum_p D(\omega,p)v_g(\omega,p)\hbar\omega \cdot \bigg[\frac{1}{\exp\left(\frac{\hbar\omega}{k_B T_b}\right) - 1} - \frac{1}{\exp\left(\frac{\hbar\omega}{k_B T_\text{eq}}\right) - 1} \bigg]\]

<p>This formula provides the frequency distribution of emitted particles under isothermal boundary conditions. Specifically, it reflects the non-equilibrium phonon transport characteristics of the boundary at temperature \(T_b\), i.e., how the boundary absorbs and re-emits phonons based on the temperature difference.</p>

<h3 id="33-periodic-boundary">3.3 Periodic Boundary</h3>

<p>Periodic boundary conditions allow the simulation of a complete structure by considering only a single unit cell (period).</p>

<div class="row">
    <div class="col-md-10 text-center">
        



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/peri_bond-480.webp 480w,/assets/img/blog/peri_bond-800.webp 800w,/assets/img/blog/peri_bond-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/peri_bond.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
</figure>

    </div>
</div>

<p>At the boundary, deviations in phonon distribution from local equilibrium are periodic and can be described by the following relations:</p>

\[f_1^+ - f_{T_1}^\text{eq} = f_2^+ - f_{T_2}^\text{eq}\]

\[f_1^- - f_{T_1}^\text{eq} = f_2^- - f_{T_2}^\text{eq}\]

<p>Here, \(f_{T_1}^\text{eq}\) and \(f_{T_2}^\text{eq}\) denote the equilibrium distributions at temperatures \(T_1\) and \(T_2\), respectively. The superscript \(+\) represents particles moving to the right, while \(-\) represents particles moving to the left. This formula reflects both the periodicity of heat flux and the temperature gradient.</p>

<p>For deviational energy distribution, this relationship becomes:</p>

\[\hbar\omega(f_1^+ - f_{T_\text{eq}}^\text{eq} - f_{T_1}^\text{eq}) = \hbar\omega(f_2^+ - f_{T_\text{eq}}^\text{eq} - f_{T_2}^\text{eq})\]

\[\hbar\omega(f_1^- - f_{T_\text{eq}}^\text{eq} - f_{T_1}^\text{eq}) = \hbar\omega(f_2^- - f_{T_\text{eq}}^\text{eq} - f_{T_2}^\text{eq})\]

<p>Expressed in terms of deviational energy:</p>

\[e_1^{d,+} - e_{T_1}^\text{eq} = e_2^{d,+} - e_{T_2}^\text{eq}\]

\[e_1^{d,-} - e_{T_1}^\text{eq} = e_2^{d,-} - e_{T_2}^\text{eq}\]

<p>Periodic boundary conditions can be enforced as follows:</p>

<p>(i) Remove particles crossing the periodic boundary from one side of the system and reinsert them on the other side, keeping their properties unchanged.</p>

<p>(ii) Generate new particles at the boundary: these particles have directions randomized over a hemisphere. At the hot boundary, they are emitted to the right with a positive sign, while corresponding negative particles are emitted from the cold boundary. Particle generation follows the distribution:</p>

\[(e_{T_1}^\text{eq}-e_{T_2}^\text{eq})\frac{D(\omega,p)}{4\pi} v_g(\omega,p)\]

<hr />

<h2 id="references">References:</h2>

<p>[1] S. Mazumder, A. Majumdar, Monte Carlo Study of Phonon Transport in Solid Thin Films Including Dispersion and Polarization, Journal of Heat Transfer 123 (2001) 749–759.</p>

<p>[2] Q. Hao, G. Chen, M.-S. Jeng, Frequency-dependent Monte Carlo simulations of phonon transport in two-dimensional porous silicon with aligned pores, Journal of Applied Physics 106 (2009) 114321.</p>

<p>[3] J.-P.M. Péraud, N.G. Hadjiconstantinou, Efficient simulation of multidimensional phonon transport using energy-based variance-reduced Monte Carlo formulations, Phys. Rev. B 84 (2011) 205331.</p>]]></content><author><name></name></author><category term="Method" /><summary type="html"><![CDATA[1. Boltzmann Transport Equation]]></summary></entry><entry><title type="html">Numerical Methods for Density of States (DOS) Calculation</title><link href="https://lyushisyan.github.io/blog/2024/dos-method/" rel="alternate" type="text/html" title="Numerical Methods for Density of States (DOS) Calculation" /><published>2024-10-06T02:36:10+03:00</published><updated>2024-10-06T02:36:10+03:00</updated><id>https://lyushisyan.github.io/blog/2024/dos-method</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2024/dos-method/"><![CDATA[<p>One of the most critical quantities in lattice dynamics studies is the density of states (DOS), defined as the number of normal modes within the frequency range \(\omega\) and \(\omega + d\omega\).</p>

<p>Expression for DOS:
\(\text{DOS}(\omega) = \frac{V}{8\pi^3} \sum_s \int \frac{dS_\omega}{|\Delta_{\boldsymbol k}\omega_s|}\)</p>

<p>where \(S_\omega\) is the isofrequency surface.</p>

<h2 id="root-sampling-method">Root Sampling Method</h2>

<p>This is the simplest method (also known as the histogram statistical method):
\(\text{DOS}(\omega) = \frac{V}{8\pi^3} \sum_{\boldsymbol qs} \delta(\omega - \omega(\boldsymbol qs))\)</p>

<p>Using this method, we can count the number of modes within \(\Delta\omega\) to obtain the density of states. However, this method requires a large number of \(\boldsymbol k\) points in the Brillouin zone (the grid needs to be sufficiently dense) to achieve accurate results.</p>

<h2 id="linear-extrapolation">Linear Extrapolation</h2>

<p>The GR method divides the irreducible part of the first Brillouin zone into a uniform simple cubic grid with points \(\boldsymbol k_c\) spaced by \(2b\). Each point \(\boldsymbol k_c\) is at the center of a small cube. From the small cube containing each \(\boldsymbol k_c\), “all” frequencies are extracted, and the contributions from all cubes are summed to obtain the complete frequency distribution.</p>

<p>The eigenfrequency at \(\boldsymbol k_c\) is \(\omega(\boldsymbol k_c)\). Assuming linear extrapolation is valid within each small cube, the isofrequency surface can be represented as parallel planes perpendicular to \(\nabla\omega(\boldsymbol k_c)\). The volume element \(dV\) between two such parallel planes corresponds to the number of frequencies within \(\omega\) and \(\omega + d\omega\). When \(dV\) approaches zero, it can be approximated as
\(dV = Sd k_\perp\)
where \(S\) is the cross-sectional area of the plane within the cube, and \(d k_\perp\) is the thickness of the volume element.</p>

<div class="row mt-3">
    <div class="col-sm mt-3 mt-md-0">
        



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/GR_method-480.webp 480w,/assets/img/blog/GR_method-800.webp 800w,/assets/img/blog/GR_method-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/GR_method.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
</figure>

    </div>
</div>

<p>Next, consider the cross-sectional area of this set of isofrequency planes within the cube. First, assume the three direction cosines of the normal to the isofrequency plane are \(l_1\), \(l_2\), and \(l_3\), sorted in descending order.</p>

<p>For any cross-section at a distance \(h\) from \(\boldsymbol k_c\), the cross-sectional area is denoted as \(S(h)\). It must satisfy \(S(h) = S(-h)\), so we only need to consider half of the cube (\(h &gt; 0\)).</p>

<p>List in ascending order the distances of the four corners in this half to the plane passing through the cube center:
\(h_1 = b|l_1 - l_2 - l_3|\)
\(h_2 = b(l_1 - l_2 + l_3)\)
\(h_3 = b(l_1 + l_2 - l_3)\)
\(h_4 = b(l_1 + l_2 + l_3)\)</p>

<p>In the first range \((0 \leq h \leq h_1)\), there are two possibilities depending on the sign of \((l_1 - l_2 - l_3)\). If the sign is positive, the cross-section is a parallelogram with an area of
\(S(h) = \frac{4b^2}{l_1}\)
If it is negative, the cross-section is a hexagon with an area of
\(S(h) = \frac{2b^2(l_1 l_2 + l_2 l_3 + l_3 l_1) - (h^2 + b^2)}{l_1 l_2 l_3}\)</p>

<p>In the second range \((h_1 \leq h \leq h_2)\), the shape is a pentagon, and its area is
\(S(h) = \frac{2b^2(l_1 l_2 + 3l_2 l_3 + l_3 l_1) - bh(-l_1 + l_2 + l_3) - \frac{1}{2}(h^2 + b^2)}{l_1 l_2 l_3}\)</p>

<p>In the third range \((h_2 \leq h \leq h_3)\), the shape is a quadrilateral, and its area is
\(S(h) = \frac{2b^2 l_3(l_1 + l_2) - bhl_3}{l_1 l_2 l_3}\)</p>

<p>In the fourth range \((h_3 \leq h \leq h_4)\), the shape is a quadrilateral, and its area is
\(S(h) = \frac{[b(l_1 + l_2 + l_3) - h]^2}{2l_1 l_2 l_3}\)</p>

<p>These expressions and their derivatives are continuous at their respective boundaries, and \(S(h)\) integrated over the entire range yields the volume of the cube.</p>

<p>Linear extrapolation over the entire cube provides the frequency variation:
\(\Omega = \omega(\boldsymbol k_c) \pm h\nabla\omega(\boldsymbol k_c)\)
where \(0 \leq h \leq h_4\).</p>

<p>To construct \(\text{DOS}(\omega)\), we define a function \(g_s(\boldsymbol k_c, \omega)\), which is the frequency distribution obtained by linearly extrapolating the entire cube centered at \(\boldsymbol k_c\):
\(g_s(\boldsymbol k_c, \omega) = CW(\boldsymbol k_c) S_s(h)dh = CW(\boldsymbol k_c) S_s(w) \frac{d\omega}{|\nabla\omega(\boldsymbol k_c)|}\)</p>

<p>where \(\omega(\boldsymbol k_c) - h_4\nabla\omega(\boldsymbol k_c) \leq \omega \leq \omega(\boldsymbol k_c) + h_4\nabla\omega(\boldsymbol k_c)\).</p>

<p>Here, \(C\) is a normalization constant, and \(W(\boldsymbol k_c)\) is the symmetry-related weight factor for point \(\boldsymbol k_c\).</p>

<p>Finally, the complete density of states:
\(\text{DOS}(\omega) = \sum_{\boldsymbol k_c, s} g_s(\boldsymbol k_c, \omega)\)</p>

<p>The GR method has two practical challenges:
(i) It requires the gradient \(\nabla\omega(\boldsymbol k_c)\) to be calculated first.
(ii) Since the cubes do not typically conform exactly to the Brillouin zone, it is necessary to determine the statistical weights of the cubes in the irreducible part of the zone.</p>

<h2 id="generalization-of-linear-extrapolation">Generalization of Linear Extrapolation</h2>

<p>The core idea of the GGR method is to use an affine transformation to convert the parallelepiped-shaped Brillouin zone into a cube, enabling the original GR method to be applied to any lattice.</p>

<p>The BZ is a parallelepiped defined by three reciprocal vectors \(\boldsymbol b_i (i = 1, 2, 3)\). The \(\boldsymbol k\) points are uniformly distributed along the three basis vectors \(\boldsymbol b_i\).</p>

<p>An affine transformation changes the \(\boldsymbol k\) basis of the parallelepiped BZ to the \(\boldsymbol t = (t_1, t_2, t_3)\) cubic basis:
\(\boldsymbol k = \boldsymbol b_1 t_1 + \boldsymbol b_2 t_2 + \boldsymbol b_3 t_3\)
where \(t_1, t_2, t_3 \in [0, 1]\).</p>

<div class="row mt-3">
    <div class="col-sm mt-3 mt-md-0">
        



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/GGR-480.webp 480w,/assets/img/blog/GGR-800.webp 800w,/assets/img/blog/GGR-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/GGR.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
</figure>

    </div>
</div>

<p>The volume elements of the two bases satisfy \(dV_k = \det(B)dV_t = \Omega dV_t\), where \(\Omega\) is the volume of the BZ.</p>

<p>We transform \(\text{DOS}(\omega)\) (the integral over the isofrequency surface \(S_\omega\)) from the \(\boldsymbol k\) basis to the \(\boldsymbol t\) cubic basis:
\(\text{DOS}(\omega) = \frac{1}{\Omega} \sum_s \int_{S_\omega} \frac{dS_k}{|\Delta_{\boldsymbol k}\omega_s|} = \sum_s \int_{S_\omega} \frac{dS_t}{|\Delta_{\boldsymbol t}\omega_s|}\)</p>

<h2 id="linear-interpolation">Linear Interpolation</h2>

<p>The irreducible part is divided into multiple tetrahedra of equal volume. The phonon frequency at each vertex of the tetrahedron is known, and the phonon frequency \(\nabla\omega(\boldsymbol k)\) at any position inside the tetrahedron can be obtained by linear interpolation:
\(\omega(\boldsymbol k) = a_1\omega(\boldsymbol k_1) + a_2\omega(\boldsymbol k_2) + a_3\omega(\boldsymbol k_3) + a_4\omega(\boldsymbol k_4)\)</p>

<p>where \(a_i\) are the weighting coefficients at the vertices of the tetrahedron, satisfying \(a_1 + a_2 + a_3 + a_4 = 1\). These weights depend on the position of point \(\boldsymbol k\) inside the tetrahedron.</p>

<p>The tetrahedron method only requires the distribution of \(\omega(\boldsymbol k_i)\) on a coarse grid and does not require frequency gradients (group velocity).</p>

<p>However, at band crossings or degenerate points, linear interpolation introduces errors.</p>]]></content><author><name></name></author><category term="Method" /><summary type="html"><![CDATA[One of the most critical quantities in lattice dynamics studies is the density of states (DOS), defined as the number of normal modes within the frequency range \(\omega\) and \(\omega + d\omega\).]]></summary></entry><entry><title type="html">Phonon Dispersion Calculation of Silicon Using QE</title><link href="https://lyushisyan.github.io/blog/2024/qe-disp-si/" rel="alternate" type="text/html" title="Phonon Dispersion Calculation of Silicon Using QE" /><published>2024-04-06T02:36:10+03:00</published><updated>2024-04-06T02:36:10+03:00</updated><id>https://lyushisyan.github.io/blog/2024/qe-disp-si</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2024/qe-disp-si/"><![CDATA[<p>Phonon dispersion in Quantum Espresso is calculated using the <code class="language-plaintext highlighter-rouge">ph.x</code> program, based on Density Functional Perturbation Theory (DFPT). This article demonstrates the calculation process using monocrystalline silicon (Si) as an example.</p>

<h2 id="step-1-pwx">Step 1 pw.x</h2>

<p>Perform SCF calculation using <code class="language-plaintext highlighter-rouge">pw.x</code>.</p>

<ul>
  <li><strong>SCF Input File (<code class="language-plaintext highlighter-rouge">pw.scf.Si.in</code>)</strong></li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&amp;control
  calculation <span class="o">=</span> <span class="s1">'scf'</span>
  restart_mode <span class="o">=</span> <span class="s1">'from_scratch'</span>
  pseudo_dir <span class="o">=</span> <span class="s1">'./pseudos/'</span>
  outdir <span class="o">=</span> <span class="s1">'./out/'</span>
  prefix <span class="o">=</span> <span class="s1">'Si'</span>
/
&amp;system
  ibrav <span class="o">=</span> 2
  celldm<span class="o">(</span>1<span class="o">)</span> <span class="o">=</span> 10.20
  nat <span class="o">=</span> 2
  ntyp <span class="o">=</span> 1
  ecutwfc <span class="o">=</span> 16
/
&amp;electrons
  mixing_mode <span class="o">=</span> <span class="s1">'plain'</span>
  mixing_beta <span class="o">=</span> 0.7
  conv_thr <span class="o">=</span> 1.0e-8
/
ATOMIC_SPECIES
  Si 28.0855 Si.vbc.UPF
ATOMIC_POSITIONS
  Si 0.00 0.00 0.00
  Si 0.25 0.25 0.25
K_POINTS <span class="o">{</span>automatic<span class="o">}</span>
  8 8 8 0 0 0
</code></pre></div></div>

<ul>
  <li><strong>Execute SCF Calculation</strong></li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mpirun <span class="nt">-np</span> 4 pw.x <span class="nt">-i</span> pw.scf.Si.in <span class="o">&gt;</span> pw.scf.Si.out
</code></pre></div></div>

<h2 id="step-2-phx">Step 2 ph.x</h2>

<p>Compute dynamical matrices on a uniform <strong>q-point</strong> grid using <code class="language-plaintext highlighter-rouge">ph.x</code>.</p>

<ul>
  <li><strong>Input File (<code class="language-plaintext highlighter-rouge">ph.Si.in</code>)</strong></li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&amp;INPUTPH
  tr2_ph <span class="o">=</span> 1d-14
  amass<span class="o">(</span>1<span class="o">)</span> <span class="o">=</span> 28.0855
  ldisp <span class="o">=</span> .true.
  nq1 <span class="o">=</span> 4
  nq2 <span class="o">=</span> 4
  nq3 <span class="o">=</span> 4
  outdir <span class="o">=</span> <span class="s1">'./out/'</span>
  prefix <span class="o">=</span> <span class="s1">'Si'</span>
  fildyn <span class="o">=</span> <span class="s1">'Si.dyn'</span>
/
</code></pre></div></div>

<ul>
  <li><strong>Execute Calculation</strong></li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mpirun <span class="nt">-np</span> 4 ph.x <span class="nt">-i</span> ph.Si.in <span class="o">&gt;</span> ph.Si.out
</code></pre></div></div>

<ul>
  <li><strong>Output Files</strong></li>
</ul>

<p><strong><code class="language-plaintext highlighter-rouge">Si.dyn0</code></strong> contains the coordinates of the q-point grid.<br />
<strong><code class="language-plaintext highlighter-rouge">Si.dyn1-N</code></strong> contains force constants ( C(q_n) ), where ( n = 1,…N ), with ( N ) being the number of irreducible q-points in the Brillouin zone.</p>

<h2 id="step-3-q2rx">Step 3 q2r.x</h2>

<p>Use <code class="language-plaintext highlighter-rouge">q2r.x</code> to perform an inverse Fourier transform of the force constants in q-space to obtain real-space force constants.</p>

<ul>
  <li><strong>Input File (<code class="language-plaintext highlighter-rouge">q2r.Si.in</code>)</strong></li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&amp;INPUT
  fildyn <span class="o">=</span> <span class="s1">'Si.dyn'</span>
  zasr <span class="o">=</span> <span class="s1">'simple'</span> 
  flfrc <span class="o">=</span> <span class="s1">'Si444.fc'</span>
/
</code></pre></div></div>

<ul>
  <li><strong>Execute Calculation</strong></li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mpirun <span class="nt">-np</span> 4 q2r.x <span class="nt">-i</span> q2r.Si.in <span class="o">&gt;</span> q2r.Si.out
</code></pre></div></div>

<ul>
  <li><strong>Output File</strong></li>
</ul>

<p><strong><code class="language-plaintext highlighter-rouge">Si444.fc</code></strong> contains real-space force constants for a <strong>4×4×4</strong> supercell.</p>

<h2 id="step-4-matdynx">Step 4 matdyn.x</h2>

<p>Use <code class="language-plaintext highlighter-rouge">matdyn.x</code> to perform a Fourier transform on real-space components to obtain the dynamical matrix and eigenvalues (frequencies) at arbitrary q-points.</p>

<ul>
  <li><strong>Input File (<code class="language-plaintext highlighter-rouge">matdyn.Si.in</code>)</strong></li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&amp;INPUT
  asr <span class="o">=</span> <span class="s1">'simple'</span>  
  flfrc <span class="o">=</span> <span class="s1">'Si444.fc'</span>
  flfrq <span class="o">=</span> <span class="s1">'Si.freq'</span>  
  flvec <span class="o">=</span> <span class="s1">'Si.modes'</span> 
  q_in_band_form <span class="o">=</span> .true.
/
6
0.000 0.000 0.000   50
0.500 0.000 0.500   50
0.625 0.250 0.625   1
0.375 0.375 0.750   50
0.000 0.000 0.000   50
0.500 0.500 0.500    1
</code></pre></div></div>

<ul>
  <li><strong>Execute Calculation</strong></li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mpirun <span class="nt">-np</span> 4 matdyn.x <span class="nt">-i</span> matdyn.Si.in <span class="o">&gt;</span> matdyn.Si.out
</code></pre></div></div>

<p>Then, use the resulting <code class="language-plaintext highlighter-rouge">Si.freq.gp</code> file to generate plots.</p>

<div class="row">
    <div class="col-md-8 text-center">
        



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/Si-bulk-qe-480.webp 480w,/assets/img/blog/Si-bulk-qe-800.webp 800w,/assets/img/blog/Si-bulk-qe-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/Si-bulk-qe.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
</figure>

    </div>
</div>]]></content><author><name></name></author><category term="Method" /><summary type="html"><![CDATA[Phonon dispersion in Quantum Espresso is calculated using the ph.x program, based on Density Functional Perturbation Theory (DFPT). This article demonstrates the calculation process using monocrystalline silicon (Si) as an example.]]></summary></entry><entry><title type="html">Self-Consistent Energy Calculations with QE</title><link href="https://lyushisyan.github.io/blog/2024/qe-scf/" rel="alternate" type="text/html" title="Self-Consistent Energy Calculations with QE" /><published>2024-03-17T02:36:10+03:00</published><updated>2024-03-17T02:36:10+03:00</updated><id>https://lyushisyan.github.io/blog/2024/qe-scf</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2024/qe-scf/"><![CDATA[<p>The calculations handled by <code class="language-plaintext highlighter-rouge">pw.x</code> include seven types, specified in the input file with <code class="language-plaintext highlighter-rouge">calculation</code>:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">'scf'</code>: Self-consistent field (SCF) calculation, solving the differential-integral Kohn-Sham equations iteratively. Convergence is achieved when the change in charge density is small enough, resulting in self-consistent charge.</li>
  <li><code class="language-plaintext highlighter-rouge">'nscf'</code>: Non-self-consistent calculation, usually performed on a denser k-space grid for integrations like DOS. Uses self-consistent charge and computes properties for additional k-points.</li>
  <li><code class="language-plaintext highlighter-rouge">'bands'</code>: Another non-self-consistent calculation where k-points follow specific paths in 3D k-space.</li>
  <li><code class="language-plaintext highlighter-rouge">'relax'</code>: A series of SCF calculations for ionic relaxation based on Hellman-Feynman forces, optimizing atomic coordinates to minimize forces while keeping the cell fixed.</li>
  <li><code class="language-plaintext highlighter-rouge">'vc-relax'</code>: Similar to relax but allows the cell to vary based on stress calculations.</li>
  <li><code class="language-plaintext highlighter-rouge">'md'</code>: Molecular dynamics simulation, treating the ion-electron interaction as a potential for ionic motion and solving the classical equations of motion for ions.</li>
  <li><code class="language-plaintext highlighter-rouge">'vc-md'</code>: Molecular dynamics with cell variation.</li>
</ul>

<h2 id="input-file">Input File</h2>

<p>In QE input files, there are <code class="language-plaintext highlighter-rouge">NAMELISTS</code> and <code class="language-plaintext highlighter-rouge">INPUT_CARDS</code>.</p>

<p><code class="language-plaintext highlighter-rouge">PWscf</code> requires three mandatory <code class="language-plaintext highlighter-rouge">NAMELISTS</code>:</p>

<ol>
  <li><code class="language-plaintext highlighter-rouge">&amp;CONTROL</code>: Specifies the calculation flow.</li>
  <li><code class="language-plaintext highlighter-rouge">&amp;SYSTEM</code>: Describes the system.</li>
  <li><code class="language-plaintext highlighter-rouge">&amp;ELECTRONS</code>: Defines the algorithm for solving the Kohn-Sham equations.</li>
</ol>

<p>Two additional <code class="language-plaintext highlighter-rouge">NAMELISTS</code>, <code class="language-plaintext highlighter-rouge">&amp;IONS</code> and <code class="language-plaintext highlighter-rouge">&amp;CELLS</code>, are needed for specific calculations.</p>

<p>The three mandatory <code class="language-plaintext highlighter-rouge">INPUT_CARDS</code> in <code class="language-plaintext highlighter-rouge">PWscf</code> are <code class="language-plaintext highlighter-rouge">ATOMIC_SPECIES</code>, <code class="language-plaintext highlighter-rouge">ATOMIC_POSITIONS</code>, and <code class="language-plaintext highlighter-rouge">K_POINTS</code>. Other information may be required depending on the calculation.</p>

<h3 id="example-self-consistent-calculation-for-silicon-pwscfsiliconin">Example: Self-Consistent Calculation for Silicon (<code class="language-plaintext highlighter-rouge">pw.scf.silicon.in</code>)</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&amp;CONTROL
<span class="nv">calculation</span><span class="o">=</span><span class="s1">'scf'</span>,   <span class="c"># Self-consistent field calculation</span>
<span class="nv">prefix</span><span class="o">=</span><span class="s1">'silicon'</span>,   <span class="c"># Prefix for output files</span>
<span class="nv">pseudo_dir</span><span class="o">=</span><span class="s1">'./pseudo/'</span>,   <span class="c"># Directory for pseudopotentials</span>
<span class="nv">outdir</span><span class="o">=</span><span class="s1">'./out/'</span>,   <span class="c"># Directory for output files</span>
/
&amp;SYSTEM
<span class="nv">ibrav</span><span class="o">=</span>2,   <span class="c"># Bravais lattice type (FCC)</span>
celldm<span class="o">(</span>1<span class="o">)=</span>10.2625,   <span class="c"># Lattice constant (in Bohr, 1 Bohr = 0.529 Å)</span>
<span class="nv">nat</span><span class="o">=</span>2,   <span class="c"># Number of atoms</span>
<span class="nv">ntyp</span><span class="o">=</span>1,   <span class="c"># Number of atomic types</span>
<span class="nv">ecutwfc</span><span class="o">=</span>60.0,   <span class="c"># Wavefunction cutoff energy (in Ry, 1 Ry = 13.606 eV)</span>
<span class="nv">ecutrho</span><span class="o">=</span>720.0,   <span class="c"># Charge density cutoff energy</span>
/
&amp;ELECTRONS
<span class="nv">mixing_beta</span><span class="o">=</span>0.7,   <span class="c"># Mixing ratio for charge density (default 0.7)</span>
<span class="nv">conv_thr</span><span class="o">=</span>1d-8,   <span class="c"># Convergence threshold for SCF (default 1d-6)</span>
/
ATOMIC_SPECIES
Si 28.0855 Si.pbe-rrkj.UPF   <span class="c"># Pseudopotential</span>
ATOMIC_POSITIONS <span class="o">(</span>alat<span class="o">)</span>   <span class="c"># Atomic positions (alat = lattice parameter)</span>
Si 0.00 0.00 0.00
Si 0.25 0.25 0.25
K_POINTS automatic  <span class="c"># Automatic k-point grid</span>
4 4 4 1 1 1
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">ibrav</code>: Values from 1–14 correspond to the 14 Bravais lattices; 0 for free lattice.</li>
  <li><code class="language-plaintext highlighter-rouge">ecutwfc</code>: Suggested value depends on the pseudopotential used.</li>
  <li><code class="language-plaintext highlighter-rouge">ecutrho</code>: Related to <code class="language-plaintext highlighter-rouge">ecutwfc</code>:
    <ul>
      <li>For NC pseudopotentials, this is 4× <code class="language-plaintext highlighter-rouge">ecutwfc</code>.</li>
      <li>For US pseudopotentials, this is 8–12× <code class="language-plaintext highlighter-rouge">ecutwfc</code>.</li>
      <li>For PAW pseudopotentials, this is 4× <code class="language-plaintext highlighter-rouge">ecutwfc</code>.</li>
    </ul>
  </li>
  <li>File saved as <code class="language-plaintext highlighter-rouge">pw.scf.silicon.in</code>.</li>
  <li>Suggested settings: <code class="language-plaintext highlighter-rouge">occupations='smearing', smearing='gaussian', degauss=1d-9</code> for Gaussian smearing.</li>
</ul>

<p>Refer to the <a href="https://www.quantum-espresso.org/Doc/INPUT_PW.html"><strong>PWscf User Manual</strong></a> for a detailed explanation.</p>

<h2 id="execution">Execution</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mpirun <span class="nt">-np</span> 4 pw.x <span class="nt">-inp</span> pw.scf.silicon.in <span class="o">&gt;</span> pw.scf.silicon.out
</code></pre></div></div>

<h2 id="output-file">Output File</h2>

<p>Check the output file <code class="language-plaintext highlighter-rouge">pw.scf.silicon.out</code> for convergence details:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">grep</span> <span class="nt">-e</span> <span class="s1">'total energy'</span> <span class="nt">-e</span> estimate pw.scf.silicon.out
</code></pre></div></div>

<p>Example:</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">Self-consistent</span><span class="w"> </span><span class="err">Calculation</span><span class="w">

</span><span class="err">iteration</span><span class="w"> </span><span class="err">#</span><span class="w">  </span><span class="mi">1</span><span class="w">     </span><span class="err">ecut=</span><span class="w">    </span><span class="mf">16.00</span><span class="w"> </span><span class="err">Ry</span><span class="w">     </span><span class="err">beta=</span><span class="w"> </span><span class="mf">0.70</span><span class="w">
</span><span class="err">total</span><span class="w"> </span><span class="err">energy</span><span class="w">              </span><span class="err">=</span><span class="w">     </span><span class="mf">-15.83539933</span><span class="w"> </span><span class="err">Ry</span><span class="w">
</span><span class="err">estimated</span><span class="w"> </span><span class="err">scf</span><span class="w"> </span><span class="err">accuracy</span><span class="w">    </span><span class="err">&lt;</span><span class="w">       </span><span class="mf">0.06071141</span><span class="w"> </span><span class="err">Ry</span><span class="w">

</span><span class="err">iteration</span><span class="w"> </span><span class="err">#</span><span class="w">  </span><span class="mi">5</span><span class="w">     </span><span class="err">ecut=</span><span class="w">    </span><span class="mf">16.00</span><span class="w"> </span><span class="err">Ry</span><span class="w">     </span><span class="err">beta=</span><span class="w"> </span><span class="mf">0.70</span><span class="w">
</span><span class="err">total</span><span class="w"> </span><span class="err">energy</span><span class="w">              </span><span class="err">=</span><span class="w">     </span><span class="mf">-15.83900299</span><span class="w"> </span><span class="err">Ry</span><span class="w">
</span><span class="err">estimated</span><span class="w"> </span><span class="err">scf</span><span class="w"> </span><span class="err">accuracy</span><span class="w">    </span><span class="err">&lt;</span><span class="w">       </span><span class="mf">0.00000012</span><span class="w"> </span><span class="err">Ry</span><span class="w">

</span><span class="err">End</span><span class="w"> </span><span class="err">of</span><span class="w"> </span><span class="err">self-consistent</span><span class="w"> </span><span class="err">calculation</span><span class="w">
</span></code></pre></div></div>

<p>Important notes:</p>
<ul>
  <li>The <strong>total energy</strong> depends on the selected pseudopotential.</li>
  <li>Convergence is achieved in 6 iterations.</li>
</ul>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">!</span><span class="w">    </span><span class="err">total</span><span class="w"> </span><span class="err">energy</span><span class="w">              </span><span class="err">=</span><span class="w">     </span><span class="mf">-15.83900302</span><span class="w"> </span><span class="err">Ry</span><span class="w">
     </span><span class="err">estimated</span><span class="w"> </span><span class="err">scf</span><span class="w"> </span><span class="err">accuracy</span><span class="w">    </span><span class="err">&lt;</span><span class="w">          </span><span class="mf">3.2E-10</span><span class="w"> </span><span class="err">Ry</span><span class="w">

     </span><span class="err">The</span><span class="w"> </span><span class="err">total</span><span class="w"> </span><span class="err">energy</span><span class="w"> </span><span class="err">is</span><span class="w"> </span><span class="err">the</span><span class="w"> </span><span class="err">sum</span><span class="w"> </span><span class="err">of</span><span class="w"> </span><span class="err">the</span><span class="w"> </span><span class="err">following</span><span class="w"> </span><span class="err">terms:</span><span class="w">
     </span><span class="err">one-electron</span><span class="w"> </span><span class="err">contribution</span><span class="w"> </span><span class="err">=</span><span class="w">       </span><span class="mf">4.79863652</span><span class="w"> </span><span class="err">Ry</span><span class="w">
     </span><span class="err">hartree</span><span class="w"> </span><span class="err">contribution</span><span class="w">      </span><span class="err">=</span><span class="w">       </span><span class="mf">1.07565897</span><span class="w"> </span><span class="err">Ry</span><span class="w">
     </span><span class="err">xc</span><span class="w"> </span><span class="err">contribution</span><span class="w">           </span><span class="err">=</span><span class="w">      </span><span class="mf">-4.81353993</span><span class="w"> </span><span class="err">Ry</span><span class="w">
     </span><span class="err">ewald</span><span class="w"> </span><span class="err">contribution</span><span class="w">        </span><span class="err">=</span><span class="w">     </span><span class="mf">-16.89975858</span><span class="w"> </span><span class="err">Ry</span><span class="w">

     </span><span class="err">convergence</span><span class="w"> </span><span class="err">has</span><span class="w"> </span><span class="err">been</span><span class="w"> </span><span class="err">achieved</span><span class="w"> </span><span class="err">in</span><span class="w">   </span><span class="mi">6</span><span class="w"> </span><span class="err">iterations</span><span class="w">
</span></code></pre></div></div>

<h3 id="tips">Tips</h3>

<ul>
  <li>Reduce <code class="language-plaintext highlighter-rouge">mixing_beta</code> for oscillating convergence.</li>
  <li>Increase cutoff energies (<code class="language-plaintext highlighter-rouge">ecutwfc</code>, <code class="language-plaintext highlighter-rouge">ecutrho</code>).</li>
  <li>Use recommended pseudopotentials.</li>
  <li>Suggested <code class="language-plaintext highlighter-rouge">conv_thr</code> values:
    <ul>
      <li>Energy and eigenvalues (SCF): 1.0d-7 Ry.</li>
      <li>Forces (relax): 1.0e-8 Ry.</li>
      <li>Stress (vc-relax): 1.0d-9 Ry.</li>
    </ul>
  </li>
</ul>

<h3 id="additional-details">Additional Details</h3>

<ul>
  <li>Exchange-correlation used in the calculation:</li>
</ul>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">Exchange-correlation=</span><span class="w"> </span><span class="err">SLA</span><span class="w">  </span><span class="err">PZ</span><span class="w">   </span><span class="err">NOGX</span><span class="w"> </span><span class="err">NOGC</span><span class="w">
</span></code></pre></div></div>

<ul>
  <li><strong>Total plane waves</strong> used (e.g., 1067):</li>
</ul>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">sticks:</span><span class="w">   </span><span class="err">dense</span><span class="w">  </span><span class="err">smooth</span><span class="w">     </span><span class="err">PW</span><span class="w">     </span><span class="err">G-vecs:</span><span class="w">    </span><span class="err">dense</span><span class="w">   </span><span class="err">smooth</span><span class="w">      </span><span class="err">PW</span><span class="w">
</span><span class="err">Sum</span><span class="w">         </span><span class="mi">433</span><span class="w">     </span><span class="mi">433</span><span class="w">    </span><span class="mi">139</span><span class="w">                 </span><span class="mi">5961</span><span class="w">     </span><span class="mi">5961</span><span class="w">    </span><span class="mi">1067</span><span class="w">
</span></code></pre></div></div>

<ul>
  <li><strong>Number of Kohn-Sham states</strong>:</li>
</ul>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">number</span><span class="w"> </span><span class="err">of</span><span class="w"> </span><span class="err">electrons</span><span class="w">       </span><span class="err">=</span><span class="w">         </span><span class="mf">8.00</span><span class="w">
</span><span class="err">number</span><span class="w"> </span><span class="err">of</span><span class="w"> </span><span class="err">Kohn-Sham</span><span class="w"> </span><span class="err">states=</span><span class="w">            </span><span class="mi">8</span><span class="w">
</span></code></pre></div></div>]]></content><author><name></name></author><category term="Method" /><summary type="html"><![CDATA[The calculations handled by pw.x include seven types, specified in the input file with calculation:]]></summary></entry><entry><title type="html">Microscopic Description of Thermal Physics</title><link href="https://lyushisyan.github.io/blog/2023/nano-micro-thermophysics/" rel="alternate" type="text/html" title="Microscopic Description of Thermal Physics" /><published>2023-10-08T03:32:13+03:00</published><updated>2023-10-08T03:32:13+03:00</updated><id>https://lyushisyan.github.io/blog/2023/nano-micro-thermophysics</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2023/nano-micro-thermophysics/"><![CDATA[<p>The macroscopic energy conservation equation in heat transfer describes the storage, transport (conduction \(k\), convection \(u\), and radiation \(r\)), and conversion of heat energy to other forms of energy.</p>

<h2 id="energy-conservation-equation">Energy Conservation Equation</h2>

\[\nabla\cdot \boldsymbol q=-\rho c_p\frac{\partial T}{\partial t}+\sum_{i,j}\dot s_{i-j},
\nabla\cdot \boldsymbol q=\frac{\int_{\Delta A}(\boldsymbol q\cdot\boldsymbol s_{\boldsymbol n})dA}{\Delta V \to 0}\]

<p>Here, \(\rho c_p\frac{\partial T}{\partial t}\) is called sensible heat storage, and \(\dot s_{i-j}\) is the rate of energy conversion due to interactions between energy carriers \(i\) and \(j\).</p>

<p>The heat flux vector \(\boldsymbol q\) is the sum of conductive, convective, and radiative heat flux vectors:</p>

\[\boldsymbol q = \boldsymbol q_k + \boldsymbol q_u + \boldsymbol q_r\]

<p><strong>Conductive heat flux vector</strong> \(\boldsymbol q_k\) is the negative product of thermal conductivity \(k\) and the temperature gradient \(\nabla T\), according to Fourier’s law of heat conduction:</p>

\[\boldsymbol q_k = -k\nabla T\]

<p><strong>Convective heat flux vector</strong> \(\boldsymbol q_u\) is the product of \(\rho c_p\), the local velocity vector \(\boldsymbol u\), and temperature \(T\):</p>

\[\boldsymbol q_u = \rho c_p\boldsymbol u T\]

<p><strong>Radiative heat flux vector</strong> \(\boldsymbol q_r\) is the spatial and spectral integral of the product of unit vector \(\boldsymbol s\) and directional spectral intensity \(I_{ph,\omega}\):</p>

\[\boldsymbol q_r  = 2\pi\int_0^\infty\int_{-1}^1\boldsymbol s I_{ph,\omega}d\mu d\omega\]

<h2 id="primary-energy-carriers">Primary Energy Carriers</h2>

<p>The four primary energy carriers—<strong>phonons</strong> (\(p\)), <strong>electrons</strong> (\(e\)), <strong>fluid particles</strong> (\(f\)), and <strong>photons</strong> (\(ph\))—form the microscopic model of heat energy storage, transfer, and interaction.</p>

<h3 id="phonons">Phonons</h3>

<div class="text-center">
  



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/thermophysics_1-480.webp 480w,/assets/img/blog/thermophysics_1-800.webp 800w,/assets/img/blog/thermophysics_1-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/thermophysics_1.png" class="w-75" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
    <figcaption class="caption">Figure 1: Phonon</figcaption>
  
</figure>

</div>

<ul>
  <li>Phonons are quantized vibrational modes in a rigid atomic lattice.</li>
  <li>The characteristics of long-wavelength phonons lead to sound in solids, hence the name “phonons.”</li>
  <li>Phonons determine many material properties, including heat capacity and thermal/electrical conductivity (phonon propagation governs heat conduction in insulators).</li>
  <li>In classical mechanics, any lattice vibration can be decomposed into a superposition of delocalized normal modes.</li>
  <li>When analyzed using quantum mechanics, these modes exhibit particle-like properties (wave-particle duality), making phonons <strong>quasiparticles</strong>.</li>
  <li>Phonons are classified as <strong>bosons</strong> with zero spin. The energy of a phonon \(E_p=\hbar\omega_p\) is the sum of its potential and kinetic energies, where \(\hbar= h/2\pi\) and \(h\) is Planck’s constant.</li>
  <li>There are two types of phonons: <strong>acoustic phonons</strong>, denoted by \(A\), and <strong>optical phonons</strong>, denoted by \(O\).</li>
  <li>Acoustic phonons have frequencies that decrease with increasing wavelength, corresponding to sound waves in the lattice. <strong>Longitudinal</strong> and <strong>transverse</strong> acoustic phonons are often abbreviated as \(LA\) and \(TA\), respectively.</li>
  <li>Optical phonons occur in lattices with multiple atoms per unit cell. They are termed “optical” because they can be easily excited by light in ionic crystals. Optical phonons are usually abbreviated as \(LO\) (longitudinal) and \(TO\) (transverse).</li>
</ul>

<h3 id="electrons">Electrons</h3>

<div class="text-center">
  



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/thermophysics_1-480.webp 480w,/assets/img/blog/thermophysics_1-800.webp 800w,/assets/img/blog/thermophysics_1-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/thermophysics_1.png" class="w-75" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
    <figcaption class="caption">Figure 2: Electron</figcaption>
  
</figure>

</div>

<ul>
  <li>Electrons are negatively charged <strong>subatomic particles</strong>. With a spin of \(1/2\), electrons are classified as <strong>fermions</strong>.</li>
  <li>The antiparticle of an electron is the <strong>positron</strong>, which has the same charge magnitude, mass, and spin as the electron but with opposite charge.</li>
  <li>Electrons exhibit both particle and wave properties and can be considered <strong>quasiparticles</strong>. Electrons bound to nuclei behave as <strong>standing waves</strong> and can be observed.</li>
  <li>In solids, electrons are categorized into core and valence electrons. Core electrons do not participate in bonding and are considered to always move with the nucleus.</li>
  <li>Valence electrons, further divided into conduction (or free) electrons and <strong>bonding electrons</strong>, are farther from the nucleus.</li>
  <li>In quantum mechanics, electrons are described by the <strong>Dirac equation</strong>.</li>
  <li>Generally, electron energy comprises potential energy (expressed as binding energy) and kinetic energy (expressed in terms of velocity).</li>
</ul>

<h3 id="fluid-particles">Fluid Particles</h3>

<div class="text-center">
  



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/thermophysics_1-480.webp 480w,/assets/img/blog/thermophysics_1-800.webp 800w,/assets/img/blog/thermophysics_1-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/thermophysics_1.png" class="w-75" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
    <figcaption class="caption">Figure 3: Fluid Particle</figcaption>
  
</figure>

</div>

<ul>
  <li>Gases and liquids consist of atoms or molecules (generally referred to as fluid particles). Fluid particles can be neutral or charged and are constantly in <strong>random motion</strong>.</li>
  <li>The energy of fluid particles is divided into potential energy, electronic energy, and kinetic energy.</li>
  <li>In an <strong>ideal gas</strong>, collisions between particles are <strong>elastic</strong>, and interparticle attractions are negligible.</li>
  <li>For ideal gases, the Maxwell-Boltzmann distribution can be derived using statistical mechanics (along with concepts of energy distribution and symmetry).</li>
  <li>Fluid particles in liquids have sufficient kinetic energy to stretch interparticle attractions but not overcome them entirely (hence the density of liquids is close to solids). As the liquid temperature rises, particle speed increases, eventually overcoming molecular forces to form gases.</li>
</ul>

<h3 id="photons">Photons</h3>

<div class="text-center">
  



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/thermophysics_1-480.webp 480w,/assets/img/blog/thermophysics_1-800.webp 800w,/assets/img/blog/thermophysics_1-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/thermophysics_1.png" class="w-75" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
    <figcaption class="caption">Figure 4: Photon</figcaption>
  
</figure>

</div>

<ul>
  <li>Photons are quanta of the electromagnetic field and fundamental particles in quantum electrodynamics, forming part of the Standard Model of particle physics.</li>
  <li>According to quantum mechanics, photons exhibit wave properties.</li>
  <li>Photons have <strong>zero rest mass</strong> but finite, well-defined energy. As photons possess energy, general relativity predicts they are affected by gravity.</li>
  <li>With a spin of 1, photons are <strong>bosons</strong>. A single photon is circularly polarized due to its unit spin.</li>
  <li>Generally, the electromagnetic field consists of <strong>plane monochromatic waves</strong> with frequency \(f_{ph}\) (angular frequency \(\omega_{ph}=2\pi f_{ph}\)), wavelength \(\lambda_{ph}\), and velocity \(u_{ph}\).</li>
  <li>The quantum characteristics of electromagnetic waves are described by their energy \(E_{ph} = \hbar \omega_{ph}\). Photons also have momentum \(\boldsymbol p_{ph} = \hbar \boldsymbol\kappa_{ph}\), where \(\boldsymbol\kappa_{ph}\) is the wavevector.</li>
  <li>In a vacuum, the dispersion relation (relationship between angular frequency and wavevector) for photons is linear, with the proportionality constant being <strong>Planck’s constant</strong>.</li>
  <li>In matter, excitation involves a nonlinear dispersion relation, where momentum is not proportional to energy. Consequently, particle propagation speeds in a vacuum are slower than the speed of light.</li>
</ul>

<h2 id="energy-distribution-function">Energy Distribution Function</h2>

<p>In systems composed of multiple particles, the observed <strong>macroscopic state</strong> (ensemble average) relates to the probabilities of each microscopic state (energy distribution function) and the <strong>microscopic states</strong> (positions and momenta) of each particle:</p>

\[\left \langle \phi \right \rangle=\sum_if_i\phi_i\]

<p>Probability distribution functions determine carrier energy and transport characteristics.</p>

<p>These particle probability distribution functions enable us to describe the temperature dependence of lattice (phonon) and electronic heat capacity, the relationship between temperature and gas kinetic energy, and blackbody thermal emission of photons.</p>

<p>The equilibrium probability distribution function \(f_i^0\) gives the most probable distribution of microscopic states under zero perturbation:</p>

<ul>
  <li><strong>Bose-Einstein Distribution</strong> (phonons, photons)</li>
</ul>

\[f_i^0 = \frac{1}{\exp(\frac{E_i}{k_\text{B}T})-1}\]

<ul>
  <li><strong>Fermi-Dirac Distribution</strong> (electrons)</li>
</ul>

\[f_i^0 = \frac{1}{\exp(\frac{E_i-\mu}{k_\text{B}T})+1}\]

<ul>
  <li><strong>Maxwell-Boltzmann Distribution</strong> (ideal gas molecules)</li>
</ul>

\[f_i^0 = \frac{1}{\exp(\frac{E_i}{k_\text{B}T})}\]

<p>Deviations from equilibrium distributions are used to analyze transport properties of these carriers, specifically through <strong>Boltzmann transport theory</strong>.</p>

<h2 id="particles-waves-and-quasiparticles">Particles, Waves, and Quasiparticles</h2>

<h3 id="particles">Particles</h3>

<p>Particles are <strong>discrete</strong> entities. Their energy is localized within a finite region of well-defined boundaries. Particles exist in specific locations and must move according to kinematic laws to reach different points in space.</p>

<p>Interactions between particles follow simple laws, such as the conservation of energy and momentum in elastic collisions. In the absence of interactions, particles are termed ballistic particles.</p>

<h3 id="waves">Waves</h3>

<p>Waves cannot be considered finite entities. Their energy is distributed over space and time. Waves can propagate to exist at all locations. Wave phases can be analyzed to determine their speed in space. Waves are specified by frequency and wavelength.</p>

<h3 id="quasiparticles">Quasiparticles</h3>

<p>Quasiparticles (including phonons, electrons, and photons) exhibit properties of both particles and waves. They can be described by wave packets, which are localized energy constructs formed by the superposition of many different wavelengths.</p>

<p>In essence, they are simultaneously particles and waves, a concept referred to as <strong>wave-particle duality</strong>.</p>

<p>For quasiparticles, the classical distinction between particles and waves may become blurred. Their behavior partially adheres to wave theory and partially to particle theory.</p>

<h2 id="contribution-to-heat-transfer-physics">Contribution to Heat Transfer Physics</h2>

<p>Heat is a form of energy manifested as the motion of material molecules, capable of being transferred from one body to another through <strong>conduction</strong> (via phonons, electrons, and fluid particles), <strong>convection</strong> (via fluid particles), and <strong>radiation</strong> (via photons).</p>

<p>The fields most relevant to heat transfer physics include:</p>
<ul>
  <li>Atomic/Molecular Dynamics;</li>
  <li>Solid-State (Condensed Matter) and Fluid Physics;</li>
  <li>Electromagnetics;</li>
  <li>
    <p>Quantum Optics.</p>
  </li>
  <li><strong>Boltzmann</strong> proposed that heat capacity, entropy, and other thermodynamic properties result from the collective behavior of atoms, which can be treated using mechanics and statistics. He introduced the Boltzmann constant \(k_B\) and, with Maxwell, proposed the <strong>equipartition theorem</strong>.</li>
  <li><strong>Maxwell</strong> developed the electromagnetic theory of light and contributed to gas dynamics, molecular physics, and thermodynamics.</li>
  <li><strong>Planck</strong> discovered that energy exists in <strong>discrete</strong> units, later called “quanta.” He hypothesized that the energy absorbed or emitted by an object must be in multiples of \(h\nu\), where \(\nu\) is photon frequency.</li>
  <li><strong>Bohr</strong> hypothesized that atoms could only absorb and emit <strong>quantum energy</strong> corresponding to differences between energy levels while studying the hydrogen spectrum.</li>
  <li><strong>Pauli</strong> formulated the rules of atomic structure (commonly called the <strong>Pauli exclusion principle</strong>), stating that no two or more electrons in an atom can occupy the same state.</li>
  <li><strong>Schrödinger</strong> formulated the equation describing the probability waves (or <strong>wave functions</strong>) governing small particle motion and specified how these waves change under external influences, laying the foundation of <strong>quantum wave mechanics</strong>.</li>
  <li><strong>Fermi</strong> devised a method to calculate the behavior of particle systems adhering to the Pauli exclusion principle, later known as <strong>Fermi statistics</strong>. Dirac independently developed an equivalent theory.</li>
  <li><strong>Green and Kubo</strong> developed the <strong>fluctuation-dissipation theorem</strong> for transport coefficients.</li>
  <li><strong>Ziman</strong> variationally treated nonequilibrium phonon transport properties.</li>
  <li><strong>Callaway and Holland</strong> formulated (and solved) the <strong>single-mode relaxation time model</strong> for lattice thermal conductivity.</li>
</ul>

<h2 id="fundamental-constants-and-fine-structure-scales">Fundamental Constants and Fine Structure Scales</h2>

<h3 id="boltzmann-constant">Boltzmann Constant</h3>

\[k_\text{B}=1.38065\times10^{-23} ~ \text J/\text K\]

<p>Defines the relationship between the average thermal energy of an energy carrier (phonon, electron, photon, or fluid particle) and its absolute temperature \(T\).</p>

<p>When energy carriers are treated as particles, this thermal energy \(k_\text{B}T\) is used to normalize their energy.</p>

<p>In statistical mechanics, the entropy \(S\) of a system with \(N\) particles is defined as \(S=k_\text{B}N\ln Z\), where \(Z\) is the partition function, describing the probability distribution of available energy states under given macroscopic constraints.</p>

<p>In dynamical theory, energy equipartition assigns \(k_\text{B}T/2\) of energy to each degree of freedom of motion.</p>

<h3 id="planck-constant">Planck Constant</h3>

\[h=6.626069\times10^{−34} ~ \text J\cdot \text s\]

<p>According to quantum mechanics, the energy of a body is the product of its frequency \(\nu\) and \(h\).</p>

<p>The reduced Planck constant (also known as the Dirac constant) is \(\hbar = h/2\pi\).</p>

<p>The Planck constant describes quantization, where certain physical properties of primary energy carriers appear in discrete amounts rather than as a continuous range of values.</p>

<p>The Planck constant also appears in the Heisenberg uncertainty principle, which states that the uncertainties \(\Delta x\) in position and \(\Delta p_x\) in momentum measurement along the same direction satisfy \(\Delta p_x \Delta x \le \hbar/2\).</p>

<h3 id="atomic-units">Atomic Units</h3>

<p>Four fundamental constants—the reduced Planck constant \(\hbar\), electron mass \(m_e\), Coulomb electrostatic constant \(1/4\pi\varepsilon_0\) (where \(\varepsilon_0\) is the permittivity of free space), and electron charge \(e_c\)—define atomic units:</p>

<ul>
  <li>Atomic length:</li>
</ul>

\[r_\text{B} = \frac{4\pi\varepsilon_0\hbar^2}{m_e e_c^2}=5.2918\times 10^{-11}~ \text m\]

<ul>
  <li>Atomic time:</li>
</ul>

\[\tau_a=\frac{m_er_\text{B}^2}{\hbar} = 2.4189\times 10^{-17} ~ \text s\]

<ul>
  <li>Atomic energy:</li>
</ul>

\[\frac{e_c^2}{4\pi\varepsilon_0r_\text{B}}=4.3597\times10^{-18}\text J=27.211~ \text{eV}\]

<ul>
  <li>Atomic velocity:</li>
</ul>

\[\frac{r_\text{B}}{\tau_a} = 2.1877 \times 10^6~ \text m/\text s\]

<ul>
  <li>Atomic dipole moment:</li>
</ul>

\[e_cr_\text{B}=8.4783\times 10^{-30}~ \text C\cdot\text m\]

<hr />

<p><strong>References:</strong></p>

<p>Kaviany M <em>Heat Transfer Physics</em> 2008</p>]]></content><author><name></name></author><category term="Physics" /><summary type="html"><![CDATA[The macroscopic energy conservation equation in heat transfer describes the storage, transport (conduction \(k\), convection \(u\), and radiation \(r\)), and conversion of heat energy to other forms of energy.]]></summary></entry><entry><title type="html">Dispersion Relations of Elastic Waves in Rods</title><link href="https://lyushisyan.github.io/blog/2023/elastic-wave-in-wire/" rel="alternate" type="text/html" title="Dispersion Relations of Elastic Waves in Rods" /><published>2023-07-01T03:32:13+03:00</published><updated>2023-07-01T03:32:13+03:00</updated><id>https://lyushisyan.github.io/blog/2023/elastic-wave-in-wire</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2023/elastic-wave-in-wire/"><![CDATA[<h2 id="elastic-equation-in-rods">Elastic Equation in Rods</h2>

<p>General equation for elastic wave propagation:</p>

\[\mu \nabla^2 \vec{u} + (\lambda + \mu) \nabla (\nabla \cdot \vec{u}) = \rho \frac{\partial^2 \vec{u}}{\partial t^2}\]

<p>Here, $\vec{u}$ is the displacement vector; $\lambda$, $\mu$ are Lamé constants characterizing the elasticity; $\rho$ is the density; $t$ is time.</p>

<p>Express $\vec{u}$ as a combination of scalar potential $\varphi$ and vector potential $\vec{\psi}$:</p>

\[\vec{u} = \nabla \varphi + \nabla \times \vec{\psi}\]

<p>Substituting into the wave equation:</p>

\[\nabla^2 \varphi = \frac{1}{c_l^2} \frac{\partial^2 \varphi}{\partial t^2}, \quad
\nabla^2 \vec{\psi} = \frac{1}{c_t^2} \frac{\partial^2 \vec{\psi}}{\partial t^2}\]

<p>where $c_l = \sqrt{(\lambda + 2\mu)/\rho}$ is the longitudinal wave speed and $c_t = \sqrt{\mu/\rho}$ is the shear wave speed.</p>

<div class="text-center">
  



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/wire-480.webp 480w,/assets/img/blog/wire-800.webp 800w,/assets/img/blog/wire-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/wire.png" class="w-75" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
    <figcaption class="caption">Figure 1: Schematic of a rod in cylindrical coordinates</figcaption>
  
</figure>

</div>

<p>In cylindrical coordinates, the displacement components are:</p>

\[u_r = \frac{\partial \varphi}{\partial r} + \frac{1}{r} \frac{\partial \psi_z}{\partial \theta} - \frac{\partial \psi_\theta}{\partial z}\]

\[u_\theta = \frac{1}{r} \frac{\partial \varphi}{\partial \theta} + \frac{\partial \psi_r}{\partial z} - \frac{\partial \psi_z}{\partial r}\]

\[u_z = \frac{\partial \varphi}{\partial z} + \frac{1}{r} \frac{\partial (\psi_\theta r)}{\partial r} - \frac{1}{r} \frac{\partial \psi_r}{\partial \theta}\]

<p>Stress components:</p>

\[\tau_{rr} = \lambda\left(\frac{\partial u_r}{\partial r} + \frac{u_r}{r} + \frac{1}{r} \frac{\partial u_\theta}{\partial \theta} + \frac{\partial u_z}{\partial z} \right) + 2\mu \frac{\partial u_r}{\partial r}\]

\[\tau_{r\theta} = \mu \left( \frac{\partial u_\theta}{\partial r} - \frac{u_\theta}{r} + \frac{1}{r} \frac{\partial u_r}{\partial \theta} \right)\]

\[\tau_{rz} = \mu \left( \frac{\partial u_r}{\partial z} + \frac{\partial u_z}{\partial r} \right)\]

<p>Consider an infinitely long solid rod of radius $a$. Assume stress-free boundary conditions on the surface:</p>

\[\tau_{rr} = \tau_{r\theta} = \tau_{rz} = 0, \quad r = a\]

<h2 id="torsional-waves">Torsional Waves</h2>

<div class="text-center">
  



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/wire-T-480.webp 480w,/assets/img/blog/wire-T-800.webp 800w,/assets/img/blog/wire-T-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/wire-T.png" class="w-75" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
    <figcaption class="caption">Figure 2: Schematic of torsional wave in a rod</figcaption>
  
</figure>

</div>

<p>Torsional waves have only an angular displacement component $u_\theta$:</p>

\[u_\theta = \frac{1}{\beta} B J_1(\beta r) \exp[i(\xi z - \omega t)]\]

<p>The frequency equation under boundary conditions:</p>

\[\beta a \cdot J_0(\beta a) - 2 J_1(\beta a) = 0\]

<p>Dispersion relation:</p>

\[\omega^2 = c_t^2 (\xi^2 + \beta^2)\]

<p>Define nondimensional quantities $\overline{\beta} = \beta a$, $\overline{\xi} = \xi a$, and $\Omega = \omega a / c_t$, then:</p>

\[\Omega^2 = \overline{\xi}^2 + \overline{\beta}^2\]

<h2 id="longitudinal-waves">Longitudinal Waves</h2>

<div class="text-center">
  



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/wire-L-480.webp 480w,/assets/img/blog/wire-L-800.webp 800w,/assets/img/blog/wire-L-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/wire-L.png" class="w-75" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
    <figcaption class="caption">Figure 3: Schematic of longitudinal wave in a rod</figcaption>
  
</figure>

</div>

<p>Longitudinal waves are axisymmetric, with radial $u_r$ and axial $u_z$ displacement:</p>

\[u_r = [-\alpha A J_1(\alpha r) - i\xi C J_1(\beta r)] \exp[i(\xi z - \omega t)]\]

\[u_z = [i\xi A J_0(\alpha r) + \beta C J_0(\beta r)] \exp[i(\xi z - \omega t)]\]

<p>Frequency equation:</p>

\[(\xi^2 - \beta^2)^2 \frac{(\alpha a) J_0(\alpha a)}{J_1(\alpha a)} + 4\xi^2 \alpha^2 \frac{(\beta a) J_0(\beta a)}{J_1(\beta a)} = 2\alpha^2 (\xi^2 + \beta^2)\]

<p>Dispersion relation:</p>

\[\omega^2 = c_t^2 (\xi^2 + \beta^2) = c_l^2 (\xi^2 + \alpha^2)\]

<p>In nondimensional form:</p>

\[\Omega^2 = \overline{\xi}^2 + \overline{\beta}^2 = \left(\frac{c_l}{c_t}\right)^2 (\overline{\xi}^2 + \overline{\alpha}^2)\]

<h2 id="flexural-waves">Flexural Waves</h2>

<div class="text-center">
  



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/wire-F-480.webp 480w,/assets/img/blog/wire-F-800.webp 800w,/assets/img/blog/wire-F-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/wire-F.png" class="w-75" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
    <figcaption class="caption">Figure 4: Schematic of flexural wave in a rod</figcaption>
  
</figure>

</div>

<p>For flexural waves, all three displacement components must be considered:</p>

\[u_r=\left[A\frac{\partial}{\partial r}J_1(\alpha r)+\frac{B}{r}J_1(\beta r)+ikCJ_2(\beta r)\right]\cos(\theta)\exp[i(\xi z-\omega t)]\]

\[u_\theta=\left[-\frac{A}{r}J_1(\alpha r)+ikCJ_2(\beta r)-B\frac{\partial}{\partial r}J_1(\beta r)\right]\cos(\theta)\exp[i(\xi z-\omega t)]\]

\[u_z=\left[ikAJ_1(\alpha r)-\frac{C}{r}\frac{\partial}{\partial r}[rJ_2(\beta r)]-\frac{C}{r}J_2(\beta r)\right]\cos(\theta)\exp[i(\xi z-\omega t)]\]

<p>From the boundary conditions, the frequency equation for flexural waves is:</p>

\[J_1(\overline\alpha)J_1^2(\overline\beta)
\begin{vmatrix}
\overline\xi^2-\overline\beta^2+4-2\Psi_\alpha &amp; 2\overline\xi(\overline\beta^2-2+\Psi_\beta) &amp; 2\Psi_\beta-4 \\
4-2\Psi_\alpha &amp; 2\overline\xi(\Psi_\beta-2) &amp; \overline\beta^2-4+2\Psi_\beta \\
2\overline\xi(\Psi_\alpha-1) &amp; (\overline\beta^2-\overline\xi^2)(\Psi_\beta-1) &amp; \overline\xi
\end{vmatrix}
=0\]

\[\Psi_\alpha = \overline\alpha J_0(\overline\alpha)/J_1(\overline\alpha)\]

\[\Psi_\beta = \overline\beta J_0(\overline\beta)/J_1(\overline\beta)\]

<p>Non-dimensional dispersion relation:</p>

\[\Omega^2=\overline\xi^2+\overline\beta^2 = (c_l/c_t)^2(\overline\xi^2+\overline\alpha^2)\]

<h2 id="numerical-solution">Numerical Solution</h2>

<p>Depending on whether $\alpha$ is real or imaginary, the solutions can be divided into two regions:</p>

<p>Region I: $\omega &gt; c_l\xi$, $\alpha$ is real.</p>

<p>Region II: $\omega &lt; c_l\xi$, $\alpha$ is imaginary, replaced by $i\alpha’$ (where $\alpha’^2 = -\alpha^2$).</p>

<p>For different regions, the following root-finding method is used:</p>

<ol>
  <li>
    <p>At the smallest wavenumber, two sets of roots are determined by sweeping.</p>
  </li>
  <li>
    <p>Based on the initial roots, the equation is solved layer by layer using an adaptive approach.</p>
  </li>
</ol>

<div class="text-center">
  



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/mathmethod-480.webp 480w,/assets/img/blog/mathmethod-800.webp 800w,/assets/img/blog/mathmethod-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/mathmethod.png" class="w-75" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
    <figcaption class="caption">Figure 5: Illustration of numerical calculation method</figcaption>
  
</figure>

</div>]]></content><author><name></name></author><category term="Physics" /><summary type="html"><![CDATA[Elastic Equation in Rods]]></summary></entry><entry><title type="html">Dispersion Relations of Elastic Waves in Plates</title><link href="https://lyushisyan.github.io/blog/2023/elastic-wave-in-plate/" rel="alternate" type="text/html" title="Dispersion Relations of Elastic Waves in Plates" /><published>2023-05-09T03:32:13+03:00</published><updated>2023-05-09T03:32:13+03:00</updated><id>https://lyushisyan.github.io/blog/2023/elastic-wave-in-plate</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2023/elastic-wave-in-plate/"><![CDATA[<p>This article studies wave propagation by solving the <strong>elastic equation in a continuous medium</strong>.</p>

<p>In a plate, waves can be classified into longitudinal (<strong>P</strong>) waves and transverse (<strong>S</strong>) waves. <strong>S</strong> waves further include <strong>SH</strong> and <strong>SV</strong> waves.</p>

<div class="text-center">
  



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/elsplate_1-480.webp 480w,/assets/img/blog/elsplate_1-800.webp 800w,/assets/img/blog/elsplate_1-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/elsplate_1.png" class="w-50" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
    <figcaption class="caption">Figure 1: Schematic of elastic waves in thin films</figcaption>
  
</figure>

</div>

<p>Assume the wave propagates along the $x$-axis. If particle motion is in $x$, it is a <strong>P wave</strong>; in $y$, an <strong>SH wave</strong>; in $z$, an <strong>SV wave</strong>.</p>

<p>SV and P waves couple under stress-free boundary conditions to form <strong>Rayleigh-Lamb waves</strong>.</p>

<h2 id="elastic-wave-equation">Elastic Wave Equation</h2>

<p>In the continuous medium approximation, the wave equation for propagation along $x$ is:</p>

\[\mu \Delta \vec{u} + (\lambda + \mu) \nabla (\nabla \cdot \vec{u}) = \rho \frac{\partial^2 \vec{u}}{\partial t^2}\]

<p>Here, $\vec{u}$ is the displacement vector; $\lambda$, $\mu$ are Lamé constants; $\rho$ is the density.</p>

<p>All solutions can be written using scalar and vector potentials:</p>

\[\vec{u} = \nabla \varphi + \nabla \times \vec{\psi}\]

<h2 id="dispersion-relation-of-sh-waves">Dispersion Relation of SH Waves</h2>

<p>For SH waves: $\vec{u} = (0, u_y, 0)$.</p>

<p>Wave equation:</p>

\[\frac{\partial^2 u_y}{\partial x^2} + \frac{\partial^2 u_y}{\partial z^2} = \frac{1}{c_t^2} \frac{\partial^2 u_y}{\partial t^2}\]

<p>with $c_t = \sqrt{\mu / \rho}$.</p>

<p>Solution:</p>

\[u_y = (A_1 \sin \beta z + A_2 \cos \beta z) e^{i(\xi x - \omega t)}\]

<p>where:</p>

\[\beta^2 + \xi^2 = \frac{\omega^2}{c_t^2}\]

<p>Boundary condition at $y = \pm b$:</p>

\[\tau_{zy} = \mu \frac{\partial u_y}{\partial z} = 0\]

<p>From the boundary condition:</p>

\[\cos \beta b \sin \beta b = 0
\quad \Rightarrow \quad \beta b = \frac{n\pi}{2}, \quad n = 0,1,2,...\]

<p>Dispersion relation:</p>

\[\omega^2 = c_t^2 \left[ \xi^2 + \left( \frac{n\pi}{2b} \right)^2 \right]\]

<div class="text-center">
  



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/els-DS-SH-480.webp 480w,/assets/img/blog/els-DS-SH-800.webp 800w,/assets/img/blog/els-DS-SH-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/els-DS-SH.png" class="w-50" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
    <figcaption class="caption">Figure 2: Dispersion relation of SH waves</figcaption>
  
</figure>

</div>

<h2 id="dispersion-relation-of-rayleigh-lamb-waves">Dispersion Relation of Rayleigh-Lamb Waves</h2>

<p>Consider a plate of thickness $2b$ with stress-free boundaries, where both P and SV waves exist.</p>

<p>Displacement: $\vec{u} = (u_x, 0, u_z)$, scalar potential: $\varphi$, vector potential: $\vec{\psi} = (0, \psi_y, 0)$.</p>

<p>Wave equations:</p>

\[\nabla^2 \varphi = \frac{1}{c_l^2} \frac{\partial^2 \varphi}{\partial t^2}, \quad
\nabla^2 \psi_y = \frac{1}{c_t^2} \frac{\partial^2 \psi_y}{\partial t^2}\]

<p>with $c_l = \sqrt{(\lambda + 2\mu)/\rho}$.</p>

<p>The solutions are:</p>

\[\varphi=(A\sin\alpha z+B\cos\alpha z)e^{i(\xi x-\omega t)}\]

\[\psi_y=i(C\sin\beta z+ D\cos\beta z)e^{i(\xi x-\omega t)}\]

<p>Symmetric and antisymmetric waves are treated separately.</p>

<h3 id="symmetric-waves">Symmetric Waves</h3>

<p>For symmetric waves ($A=D=0$):</p>

\[\frac{\tan\beta b}{\tan\alpha b} = -\frac{4\alpha\beta \xi^2}{(\xi^2-\beta^2)^2}\]

<h3 id="antisymmetric-waves">Antisymmetric Waves</h3>

<p>For antisymmetric waves ($B=C=0$):</p>

\[\frac{\tan\beta b}{\tan\alpha b} = -\frac{(\xi^2-\beta^2)^2}{4\alpha\beta \xi^2}\]

<h3 id="rayleigh-lamb-frequency-equation">Rayleigh-Lamb Frequency Equation</h3>

<p>Combining symmetric and antisymmetric cases:</p>

\[F(\alpha,\beta,\xi) = \frac{\tan\beta b}{\tan\alpha b} + \left(\frac{4\alpha\beta \xi^2}{(\xi^2-\beta^2)^2}\right)^{\pm 1} = 0\]

<h2 id="group-velocity-and-phase-velocity">Group Velocity and Phase Velocity</h2>

<p>The phase velocity is the propagation velocity of the wave phase:</p>

\[v_p=\frac{\omega}{k}\]

<p>The group velocity is the velocity at which energy is transmitted in the medium:</p>

\[v_g=\frac{\partial\omega}{\partial k}\]

<div class="row">
  <div class="col-md-6 text-center">
    



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/els-vg-480.webp 480w,/assets/img/blog/els-vg-800.webp 800w,/assets/img/blog/els-vg-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/els-vg.png" class="img-fluid w-100" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
    <figcaption class="caption">Figure 5: Group velocity of elastic waves in thin films</figcaption>
  
</figure>

  </div>
  <div class="col-md-6 text-center">
    



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/els-vp-480.webp 480w,/assets/img/blog/els-vp-800.webp 800w,/assets/img/blog/els-vp-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/els-vp.png" class="img-fluid w-100" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
    <figcaption class="caption">Figure 6: Phase velocity of elastic waves in thin films</figcaption>
  
</figure>

  </div>
</div>]]></content><author><name></name></author><category term="Physics" /><summary type="html"><![CDATA[This article studies wave propagation by solving the elastic equation in a continuous medium.]]></summary></entry><entry><title type="html">Classical Kinetic Theory of Heat Conduction</title><link href="https://lyushisyan.github.io/blog/2023/classical-kinetic-theory/" rel="alternate" type="text/html" title="Classical Kinetic Theory of Heat Conduction" /><published>2023-04-26T03:32:13+03:00</published><updated>2023-04-26T03:32:13+03:00</updated><id>https://lyushisyan.github.io/blog/2023/classical-kinetic-theory</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2023/classical-kinetic-theory/"><![CDATA[<h2 id="kinetic-theory-of-gases">Kinetic Theory of Gases</h2>

<p>In classical kinetic theory, consider a molecule traveling a total path length $L$. The effective volume it sweeps out is $\pi d^2 L$, where $d$ is the molecular diameter. If the number density of the gas is $n$, then the number of molecules within this volume is $\pi n d^2 L$, meaning the number of collisions experienced is:</p>

\[N = \pi n d^2 L\]

<p>The mean free path $\Lambda$ between two collisions is then:</p>

\[\Lambda = \frac{L}{N} = \frac{L}{\pi n d^2 L} = \frac{1}{n \sigma}\]

<p>where $\sigma = \pi d^2$ is the collision cross-section.</p>

<div class="text-center">
  



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/meanlength-480.webp 480w,/assets/img/blog/meanlength-800.webp 800w,/assets/img/blog/meanlength-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/meanlength.png" class="w-75" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
    <figcaption class="caption">Figure 1: Schematic of mean free path</figcaption>
  
</figure>

</div>

<p>Substituting the ideal gas relation $n = \frac{p}{k_B T}$ gives:</p>

\[\Lambda = \frac{k_B T}{p \sigma}\]

<p>To calculate the heat flux from a single molecule, assume its internal energy is $\varepsilon$, and its velocity component in the $x$ direction is $v_x$. Then the energy transfer per unit time is approximately:</p>

\[q_x = \frac{1}{2} v_x \left[\varepsilon(x - \Lambda_x) - \varepsilon(x + \Lambda_x)\right]\]

<p>Expanding using a Taylor series and neglecting higher-order terms:</p>

\[q_x \approx -v_x \Lambda_x \frac{\mathrm{d} \varepsilon}{\mathrm{d}x} \approx -(\cos^2\theta) v \Lambda \frac{\mathrm{d} \varepsilon}{\mathrm{d}x}\]

<p>Integrating over all directions (assuming isotropy), the total heat flux is:</p>

\[q_x = -\frac{1}{2\pi} v \Lambda \frac{\mathrm{d} \varepsilon}{\mathrm{d}x}
\left[\int_0^{2\pi} \mathrm{d}\varphi \int_0^{\pi/2} \cos^2\theta \sin\theta \, \mathrm{d}\theta \right] \frac{\mathrm{d} \varepsilon}{\mathrm{d}T} \frac{\mathrm{d}T}{\mathrm{d}x}\]

<p>Which simplifies to:</p>

\[q_x \approx -\frac{1}{3} C v \Lambda \frac{\mathrm{d}T}{\mathrm{d}x}\]

<p>The resulting thermal conductivity is:</p>

\[\lambda = \frac{1}{3} C v \Lambda\]

<p>This shows that thermal conductivity is proportional to specific heat $C$, molecular speed $v$, and mean free path $\Lambda$.</p>

<h2 id="heat-conduction-in-dielectrics">Heat Conduction in Dielectrics</h2>

<p>In dielectrics such as insulators or semiconductors, heat is carried by <strong>phonons</strong>, the quantized vibrations of the crystal lattice. Each phonon has energy $\hbar \omega$, where $\omega$ is the vibrational frequency.</p>

<p>Phonon thermal conductivity is similarly given by:</p>

\[\lambda_{ph} = \frac{1}{3} C_{ph} v_s \Lambda_{\Sigma}\]

<p>where:</p>
<ul>
  <li>$C_{ph}$ is the specific heat of the phonon system;</li>
  <li>$v_s$ is the effective sound speed;</li>
  <li>$\Lambda_{\Sigma}$ is the effective mean free path.</li>
</ul>

<p>Main phonon scattering mechanisms include:</p>
<ul>
  <li>Boundary scattering ($b$);</li>
  <li>Impurity scattering ($imp$);</li>
  <li>Phonon-phonon scattering ($ph$).</li>
</ul>

<p>According to <strong>Matthiessen’s rule</strong>, the total inverse mean free path is the sum of the individual contributions:</p>

\[\Lambda_{\Sigma}^{-1} = \Lambda_{ph}^{-1} + \Lambda_{imp}^{-1} + \Lambda_{b}^{-1}\]

<div class="row">
  <div class="col-md-6 text-center">
    



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/classic1-480.webp 480w,/assets/img/blog/classic1-800.webp 800w,/assets/img/blog/classic1-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/classic1.png" class="img-fluid w-100" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
    <figcaption class="caption">Figure 2: Impact of different scattering mechanisms on mean free path</figcaption>
  
</figure>

  </div>
  <div class="col-md-6 text-center">
    



<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/blog/classic2-480.webp 480w,/assets/img/blog/classic2-800.webp 800w,/assets/img/blog/classic2-1400.webp 1400w," type="image/webp" sizes="95vw" />
    
    <img src="/assets/img/blog/classic2.png" class="img-fluid w-100" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
    <figcaption class="caption">Figure 3: Influence of scattering mechanisms on thermal conductivity</figcaption>
  
</figure>

  </div>
</div>

<h2 id="heat-conduction-in-metals">Heat Conduction in Metals</h2>

<p>In metals, heat is mainly carried by free electrons. The thermal conductivity of the electron gas is:</p>

\[\lambda_{e} = \frac{1}{3} C_{e} v_F \Lambda_{e}\]

<p>where:</p>
<ul>
  <li>$C_e$ is the electronic specific heat;</li>
  <li>$v_F$ is the Fermi velocity;</li>
  <li>$\Lambda_e$ is the mean free path of electrons.</li>
</ul>

<p>Again using Matthiessen’s rule:</p>

\[\frac{1}{\Lambda_e} = \frac{1}{\Lambda_{ph}} + \frac{1}{\Lambda_d} + \frac{1}{\Lambda_b}\]

<h2 id="boltzmann-transport-equation">Boltzmann Transport Equation</h2>

<p>At the microscopic level, heat transport is described by particle distribution functions. In equilibrium, these are:</p>
<ul>
  <li><strong>Maxwell–Boltzmann distribution</strong> (classical gases);</li>
  <li><strong>Bose–Einstein distribution</strong> (e.g., phonons);</li>
  <li><strong>Fermi–Dirac distribution</strong> (e.g., electrons).</li>
</ul>

<p>When far from equilibrium, the distribution becomes $f(\vec{r}, \vec{p}, t)$ and evolves according to the <strong>Boltzmann transport equation</strong>:</p>

\[\frac{\partial f}{\partial t} + \vec v \cdot \nabla_{\vec r} f + \vec F \cdot \nabla_{\vec p} f = \left(\frac{\partial f}{\partial t}\right)_\text{st}\]

<p>where the right-hand collision term $\left(\partial f / \partial t\right)_{\text{st}}$ describes how the system relaxes toward equilibrium.</p>

<h2 id="fourier-equation">Fourier Equation</h2>

<p>At the macroscopic level, classical <strong>Fourier’s law</strong> governs steady-state heat conduction:</p>

\[\vec q = -\lambda \nabla T\]

<p>Substituting into energy conservation gives the heat diffusion equation:</p>

\[\rho C_p \frac{\partial T}{\partial t} = -\nabla \cdot \vec q\]

<p>Which becomes:</p>

\[\rho C_p \frac{\partial T}{\partial t} = \lambda \nabla^2 T
\quad \Rightarrow \quad \frac{\partial T}{\partial t} = a \nabla^2 T\]

<p>Here, $a = \frac{\lambda}{\rho C_p}$ is the thermal diffusivity, describing how temperature disturbances propagate in the medium.</p>

<h2 id="summary">Summary</h2>

<ul>
  <li>Thermal transport depends not only on intrinsic properties like specific heat, velocity, and mean free path, but also on the characteristic size and timescale.</li>
  <li>When the system size is smaller than the mean free path, Fourier’s law fails; one should apply the Boltzmann equation or molecular dynamics.</li>
  <li>When the system size is comparable to carrier wavelengths, wave effects dominate and require wave-based models (e.g., phonon interference or localization theory).</li>
</ul>]]></content><author><name></name></author><category term="Heat-conduction," /><category term="Physics" /><summary type="html"><![CDATA[Kinetic Theory of Gases]]></summary></entry></feed>
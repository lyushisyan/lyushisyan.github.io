<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://lyushisyan.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://lyushisyan.github.io/" rel="alternate" type="text/html"/><updated>2024-12-28T11:34:12+00:00</updated><id>https://lyushisyan.github.io/feed.xml</id><title type="html">blank</title><entry><title type="html">Dispersion Relations of Elastic Waves in Circular Rods</title><link href="https://lyushisyan.github.io/blog/2023/elastic-wave-in-wire/" rel="alternate" type="text/html" title="Dispersion Relations of Elastic Waves in Circular Rods"/><published>2023-07-01T00:32:13+00:00</published><updated>2023-07-01T00:32:13+00:00</updated><id>https://lyushisyan.github.io/blog/2023/elastic-wave-in-wire</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2023/elastic-wave-in-wire/"><![CDATA[<h2 id="elastic-equations-in-circular-rods">Elastic Equations in Circular Rods</h2> <p>The general equation of elastic wave motion:</p> \[\mu \nabla^2\vec u=(\lambda+\mu)\nabla(\nabla\cdot\vec u)=\rho\frac{\partial^2\vec u}{\partial t^2}\] <p>where $\vec u$ is the displacement vector, $\lambda$ and $\mu$ are the Lamé constants characterizing the elastic properties of the medium, $\rho$ is the density, and $t$ is time.</p> <p>Expressing the displacement vector $\vec u$ as a combination of a scalar potential $\varphi$ and a vector potential $\vec\psi$:</p> \[\vec u=\nabla\varphi+\nabla\times\vec\psi\] <p>Substituting the displacement vector into the elastic wave equation gives:</p> \[\nabla^2\varphi=\frac{1}{c_l^2}\frac{\partial^2\varphi}{\partial t^2},~ \nabla^2\vec\psi=\frac{1}{c_t^2}\frac{\partial^2\vec\psi}{\partial t^2}\] <p>where $c_l=\sqrt{(\lambda+2\mu)/\rho}$ is the speed of compressional waves and $c_t=\sqrt{\mu/\rho}$ is the speed of shear waves.</p> <div class="row"> <div class="col-md-6 text-center"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/wire-480.webp 480w,/assets/img/blog/wire-800.webp 800w,/assets/img/blog/wire-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/blog/wire.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>In cylindrical coordinates, the displacement components are:</p> \[u_r=\frac{\partial\varphi}{\partial r}+\frac{1}{r}\frac{\partial\psi_z}{\partial\theta}-\frac{\partial\psi_\theta}{\partial z} \\ u_\theta=\frac{1}{r}\frac{\partial\varphi}{\partial\theta}+\frac{\partial\psi_r}{\partial z}-\frac{\partial\psi_z}{\partial r} \\ u_z=\frac{\partial\varphi}{\partial z}+\frac{1}{r}\frac{\partial(\psi_\theta r)}{\partial r}-\frac{1}{r}\frac{\partial\psi_r}{\partial\theta}\] <p>The stresses are:</p> \[\tau_{rr}=\lambda\left(\frac{\partial u_r}{\partial r}+\frac{u_r}{r}+\frac{1}{r}\frac{\partial u_\theta}{\partial\theta}+\frac{\partial u_z}{\partial z}\right)+2\mu\frac{\partial u_r}{\partial r}\\ \tau_{r\theta}=\mu\left(\frac{\partial u_\theta}{\partial r}-\frac{u_\theta}{r}+\frac{1}{r}\frac{\partial u_r}{\partial\theta}\right) \\ \tau_{rz}=\mu\left(\frac{\partial u_r}{\partial z}+\frac{\partial u_z}{\partial r}\right)\] <p>Considering an infinitely long solid circular rod with radius $a$ and stress-free boundary conditions at the surface:</p> \[\tau_{rr}=\tau_{r\theta}=\tau_{rz}=0,~~~r=a\] <h2 id="torsional-waves">Torsional Waves</h2> <div class="row"> <div class="col-md-6 text-center"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/wire-T-480.webp 480w,/assets/img/blog/wire-T-800.webp 800w,/assets/img/blog/wire-T-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/blog/wire-T.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>Torsional waves only involve the circumferential displacement component $u_\theta$:</p> \[u_\theta=\frac{1}{\beta}BJ_1(\beta r)\exp[i(\xi z-\omega t)]\] <p>From the boundary conditions, the frequency equation for torsional waves is:</p> \[\beta a\cdot J_0(\beta a)-2J_1(\beta a)=0\] <p>Dispersion relation:</p> \[\omega^2=c_t^2(\xi^2+\beta^2)\] <p>Introducing dimensionless variables $\overline\alpha=\alpha a$, $\overline\beta=\beta a$, $\overline\xi=\xi a$, and $\Omega=\omega a/c_t$, the non-dimensional dispersion relation becomes:</p> \[\Omega^2=\overline\xi^2+\overline\beta^2\] <h2 id="flexural-waves">Flexural Waves</h2> <div class="row"> <div class="col-md-6 text-center"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/wire-F-480.webp 480w,/assets/img/blog/wire-F-800.webp 800w,/assets/img/blog/wire-F-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/blog/wire-F.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>For flexural waves, all three displacement components must be considered:</p> \[u_r=\left[A\frac{\partial}{\partial r}J_1(\alpha r)+\frac{B}{r}J_1(\beta r)+ikCJ_2(\beta r)\right]\cos(\theta)\exp[i(\xi z-\omega t)] \\ u_\theta=\left[-\frac{A}{r}J_1(\alpha r)+ikCJ_2(\beta r)-B\frac{\partial}{\partial r}J_1(\beta r)\right]\cos(\theta)\exp[i(\xi z-\omega t)]\\ u_z=\left[ikAJ_1(\alpha r)-\frac{C}{r}\frac{\partial}{\partial r}[rJ_2(\beta r)]-\frac{C}{r}J_2(\beta r)\right]\cos(\theta)\exp[i(\xi z-\omega t)]\] <p>From the boundary conditions, the frequency equation for flexural waves is:</p> \[J_1(\overline\alpha)J_1^2(\overline\beta) \begin{vmatrix} \overline\xi^2-\overline\beta^2+4-2\Psi_\alpha &amp; 2\overline\xi(\overline\beta^2-2+\Psi_\beta) &amp; 2\Psi_\beta-4 \\ 4-2\Psi_\alpha &amp; 2\overline\xi(\Psi_\beta-2) &amp; \overline\beta^2-4+2\Psi_\beta \\ 2\overline\xi(\Psi_\alpha-1) &amp; (\overline\beta^2-\overline\xi^2)(\Psi_\beta-1) &amp; \overline\xi \end{vmatrix} =0\] \[\Psi_\alpha = \overline\alpha J_0(\overline\alpha)/J_1(\overline\alpha)\\ \Psi_\beta = \overline\beta J_0(\overline\beta)/J_1(\overline\beta)\] <p>Non-dimensional dispersion relation:</p> \[\Omega^2=\overline\xi^2+\overline\beta^2 = (c_l/c_t)^2(\overline\xi^2+\overline\alpha^2)\] <div class="row"> <div class="col-md-12 text-center"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/DS-wire-F-480.webp 480w,/assets/img/blog/DS-wire-F-800.webp 800w,/assets/img/blog/DS-wire-F-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/blog/DS-wire-F.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="numerical-solution">Numerical Solution</h2> <p>Depending on whether $\alpha$ is real or imaginary, the solutions can be divided into two regions:</p> <p>Region I: $\omega &gt; c_l\xi$, $\alpha$ is real.</p> <p>Region II: $\omega &lt; c_l\xi$, $\alpha$ is imaginary, replaced by $i\alpha’$ (where $\alpha’^2 = -\alpha^2$).</p> <p>For different regions, the following root-finding method is used:</p> <ol> <li> <p>At the smallest wavenumber, two sets of roots are determined by sweeping.</p> </li> <li> <p>Based on the initial roots, the equation is solved layer by layer using an adaptive approach.</p> </li> </ol> <div class="row"> <div class="col-md-12 text-center"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/mathmethod-480.webp 480w,/assets/img/blog/mathmethod-800.webp 800w,/assets/img/blog/mathmethod-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/blog/mathmethod.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h4 id="matlab-code-for-adaptive-layer-by-layer-root-finding-in-region-i">MATLAB Code for Adaptive Layer-by-Layer Root-Finding in Region I</h4> <div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">function</span> <span class="p">[</span><span class="n">alphaX</span><span class="p">]</span> <span class="o">=</span> <span class="n">FindrealrootsL</span><span class="p">(</span><span class="n">Fun_real</span><span class="p">,</span><span class="n">XiX</span><span class="p">,</span><span class="n">alpha01</span><span class="p">,</span><span class="n">alpha02</span><span class="p">)</span>
<span class="n">modei</span> <span class="o">=</span> <span class="nb">length</span><span class="p">(</span><span class="n">alpha01</span><span class="p">);</span>
<span class="n">N</span> <span class="o">=</span> <span class="nb">length</span><span class="p">(</span><span class="n">XiX</span><span class="p">);</span>
<span class="n">alphaX</span> <span class="o">=</span> <span class="nb">zeros</span><span class="p">(</span><span class="n">modei</span><span class="p">,</span><span class="n">N</span><span class="p">);</span>
<span class="n">exreal</span> <span class="o">=</span> <span class="nb">zeros</span><span class="p">(</span><span class="n">modei</span><span class="p">,</span><span class="n">N</span><span class="p">);</span>
<span class="n">alphaX</span><span class="p">(:,</span><span class="mi">1</span><span class="p">)</span> <span class="o">=</span> <span class="n">alpha01</span><span class="o">'</span><span class="p">;</span>
<span class="n">alphaX</span><span class="p">(:,</span><span class="mi">2</span><span class="p">)</span> <span class="o">=</span> <span class="n">alpha02</span><span class="o">'</span><span class="p">;</span>
<span class="n">NUM</span> <span class="o">=</span> <span class="nb">zeros</span><span class="p">(</span><span class="n">modei</span><span class="p">,</span><span class="n">N</span><span class="p">);</span>
<span class="k">for</span> <span class="n">im</span> <span class="o">=</span> <span class="mi">1</span><span class="p">:</span><span class="n">modei</span>
    <span class="n">delta</span> <span class="o">=</span> <span class="mf">1e-5</span><span class="p">;</span>
    <span class="k">for</span> <span class="n">ik</span> <span class="o">=</span> <span class="mi">3</span><span class="p">:</span><span class="n">N</span>
        <span class="n">Fun_real_N</span> <span class="o">=</span> <span class="o">@</span><span class="p">(</span><span class="nb">alpha</span><span class="p">)</span> <span class="n">Fun_real</span><span class="p">(</span><span class="n">XiX</span><span class="p">(</span><span class="n">ik</span><span class="p">),</span><span class="nb">alpha</span><span class="p">);</span>
        <span class="n">num</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="n">alphaleft</span><span class="p">(</span><span class="n">im</span><span class="p">)</span> <span class="o">=</span> <span class="mi">2</span><span class="o">*</span><span class="n">alphaX</span><span class="p">(</span><span class="n">im</span><span class="p">,</span><span class="n">ik</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">-</span> <span class="n">alphaX</span><span class="p">(</span><span class="n">im</span><span class="p">,</span><span class="n">ik</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span> <span class="o">+</span> <span class="n">delta</span><span class="p">;</span>
        <span class="n">alpharight</span><span class="p">(</span><span class="n">im</span><span class="p">)</span> <span class="o">=</span> <span class="mi">2</span><span class="o">*</span><span class="n">alphaX</span><span class="p">(</span><span class="n">im</span><span class="p">,</span><span class="n">ik</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">-</span> <span class="n">alphaX</span><span class="p">(</span><span class="n">im</span><span class="p">,</span><span class="n">ik</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span> <span class="o">-</span> <span class="n">delta</span><span class="p">;</span>
        <span class="k">while</span> <span class="n">Fun_real_N</span><span class="p">(</span><span class="n">alphaleft</span><span class="p">(</span><span class="n">im</span><span class="p">))</span><span class="o">*</span><span class="n">Fun_real_N</span><span class="p">(</span><span class="n">alpharight</span><span class="p">(</span><span class="n">im</span><span class="p">))</span> <span class="o">&gt;</span> <span class="mi">0</span>
            <span class="n">alphaleft</span><span class="p">(</span><span class="n">im</span><span class="p">)</span> <span class="o">=</span> <span class="n">alphaleft</span><span class="p">(</span><span class="n">im</span><span class="p">)</span><span class="o">+</span><span class="n">delta</span><span class="o">*</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="n">num</span><span class="p">);</span>
            <span class="n">alpharight</span><span class="p">(</span><span class="n">im</span><span class="p">)</span> <span class="o">=</span> <span class="n">alpharight</span><span class="p">(</span><span class="n">im</span><span class="p">)</span><span class="o">+</span><span class="n">delta</span><span class="o">*</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="n">num</span><span class="p">);</span>
            <span class="k">if</span> <span class="n">Fun_real_N</span><span class="p">(</span><span class="n">alphaleft</span><span class="p">(</span><span class="n">im</span><span class="p">))</span><span class="o">*</span><span class="n">Fun_real_N</span><span class="p">(</span><span class="n">alpharight</span><span class="p">(</span><span class="n">im</span><span class="p">))</span> <span class="o">&lt;</span> <span class="mi">0</span>
                <span class="k">break</span>
            <span class="k">end</span>
            <span class="n">alphaleft</span><span class="p">(</span><span class="n">im</span><span class="p">)</span> <span class="o">=</span> <span class="n">alphaleft</span><span class="p">(</span><span class="n">im</span><span class="p">)</span><span class="o">-</span><span class="n">delta</span><span class="o">*</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="n">num</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
            <span class="n">alpharight</span><span class="p">(</span><span class="n">im</span><span class="p">)</span> <span class="o">=</span> <span class="n">alpharight</span><span class="p">(</span><span class="n">im</span><span class="p">)</span><span class="o">-</span><span class="n">delta</span><span class="o">*</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="n">num</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
            <span class="n">num</span> <span class="o">=</span> <span class="n">num</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
        <span class="k">end</span>
        <span class="n">NUM</span><span class="p">(</span><span class="n">im</span><span class="p">,</span><span class="n">ik</span><span class="p">)</span> <span class="o">=</span> <span class="n">num</span><span class="p">;</span>
        <span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="o">~</span><span class="p">,</span> <span class="n">exitflag</span><span class="p">,</span> <span class="o">~</span><span class="p">]</span> <span class="o">=</span> <span class="nb">fzero</span><span class="p">(</span><span class="n">Fun_real_N</span><span class="p">,[</span><span class="n">alphaleft</span><span class="p">(</span><span class="n">im</span><span class="p">)</span> <span class="n">alpharight</span><span class="p">(</span><span class="n">im</span><span class="p">)]);</span>
        <span class="n">alphaX</span><span class="p">(</span><span class="n">im</span><span class="p">,</span><span class="n">ik</span><span class="p">)</span> <span class="o">=</span> <span class="n">x</span><span class="p">;</span>
        <span class="n">exreal</span><span class="p">(</span><span class="n">im</span><span class="p">,</span><span class="n">ik</span><span class="p">)</span> <span class="o">=</span> <span class="n">exitflag</span><span class="p">;</span>
        <span class="k">if</span> <span class="n">exitflag</span> <span class="o">==</span> <span class="o">-</span><span class="mi">5</span>
            <span class="n">num</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
            <span class="n">Fun_real_N</span> <span class="o">=</span> <span class="o">@</span><span class="p">(</span><span class="nb">alpha</span><span class="p">)</span> <span class="n">Fun_real_N</span><span class="p">(</span><span class="nb">alpha</span><span class="p">)/(</span><span class="nb">alpha</span><span class="o">-</span><span class="n">x</span><span class="p">);</span>
            <span class="k">while</span> <span class="n">Fun_real_N</span><span class="p">(</span><span class="n">alphaleft</span><span class="p">(</span><span class="n">im</span><span class="p">))</span><span class="o">*</span><span class="n">Fun_real_N</span><span class="p">(</span><span class="n">alpharight</span><span class="p">(</span><span class="n">im</span><span class="p">))</span> <span class="o">&gt;</span> <span class="mi">0</span>
                <span class="n">alphaleft</span><span class="p">(</span><span class="n">im</span><span class="p">)</span> <span class="o">=</span> <span class="n">alphaleft</span><span class="p">(</span><span class="n">im</span><span class="p">)</span><span class="o">+</span><span class="n">delta</span><span class="o">*</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="n">num</span><span class="p">);</span>
                <span class="n">alpharight</span><span class="p">(</span><span class="n">im</span><span class="p">)</span> <span class="o">=</span> <span class="n">alpharight</span><span class="p">(</span><span class="n">im</span><span class="p">)</span><span class="o">+</span><span class="n">delta</span><span class="o">*</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="n">num</span><span class="p">);</span>
                <span class="k">if</span> <span class="n">Fun_real_N</span><span class="p">(</span><span class="n">alphaleft</span><span class="p">(</span><span class="n">im</span><span class="p">))</span><span class="o">*</span><span class="n">Fun_real_N</span><span class="p">(</span><span class="n">alpharight</span><span class="p">(</span><span class="n">im</span><span class="p">))</span> <span class="o">&lt;</span> <span class="mi">0</span>
                    <span class="k">break</span>
                <span class="k">end</span>
                <span class="n">alphaleft</span><span class="p">(</span><span class="n">im</span><span class="p">)</span> <span class="o">=</span> <span class="n">alphaleft</span><span class="p">(</span><span class="n">im</span><span class="p">)</span><span class="o">-</span><span class="n">delta</span><span class="o">*</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="n">num</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
                <span class="n">alpharight</span><span class="p">(</span><span class="n">im</span><span class="p">)</span> <span class="o">=</span> <span class="n">alpharight</span><span class="p">(</span><span class="n">im</span><span class="p">)</span><span class="o">-</span><span class="n">delta</span><span class="o">*</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="n">num</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
                <span class="n">num</span> <span class="o">=</span> <span class="n">num</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
            <span class="k">end</span>
            <span class="n">NUM</span><span class="p">(</span><span class="n">im</span><span class="p">,</span><span class="n">ik</span><span class="p">)</span> <span class="o">=</span> <span class="n">num</span><span class="p">;</span>
            <span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="o">~</span><span class="p">,</span> <span class="n">exitflag</span><span class="p">,</span> <span class="o">~</span><span class="p">]</span> <span class="o">=</span> <span class="nb">fzero</span><span class="p">(</span><span class="n">Fun_real_N</span><span class="p">,[</span><span class="n">alphaleft</span><span class="p">(</span><span class="n">im</span><span class="p">)</span> <span class="n">alpharight</span><span class="p">(</span><span class="n">im</span><span class="p">)]);</span>
            <span class="n">alphaX</span><span class="p">(</span><span class="n">im</span><span class="p">,</span><span class="n">ik</span><span class="p">)</span> <span class="o">=</span> <span class="n">x</span><span class="p">;</span>
            <span class="n">exreal</span><span class="p">(</span><span class="n">im</span><span class="p">,</span><span class="n">ik</span><span class="p">)</span> <span class="o">=</span> <span class="n">exitflag</span><span class="p">;</span>
        <span class="k">end</span>
    <span class="k">end</span>
<span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div> <h4 id="matlab-code-for-adaptive-layer-by-layer-root-finding-in-region-ii">MATLAB Code for Adaptive Layer-by-Layer Root-Finding in Region II</h4> <div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">function</span> <span class="p">[</span><span class="n">NUMi</span><span class="p">,</span><span class="n">alphaiX</span><span class="p">]</span> <span class="o">=</span> <span class="n">FindimagerootsL</span><span class="p">(</span><span class="n">Fun_image</span><span class="p">,</span><span class="n">alphai0</span><span class="p">,</span><span class="n">XiX</span><span class="p">,</span><span class="n">XiXX</span><span class="p">)</span>
<span class="n">XiXX</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span> <span class="n">XiXX</span><span class="p">];</span>
<span class="n">modei</span> <span class="o">=</span> <span class="nb">length</span><span class="p">(</span><span class="n">XiXX</span><span class="p">);</span>
<span class="n">N</span> <span class="o">=</span> <span class="nb">length</span><span class="p">(</span><span class="n">XiX</span><span class="p">);</span>
<span class="n">delta</span> <span class="o">=</span><span class="mf">1e-4</span><span class="p">;</span>
<span class="n">alphaleft</span> <span class="o">=</span> <span class="n">alphai0</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nb">ones</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">modei</span><span class="p">)</span><span class="o">-</span><span class="n">delta</span><span class="p">;</span>
<span class="n">alpharight</span> <span class="o">=</span> <span class="n">alphai0</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nb">ones</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">modei</span><span class="p">)</span><span class="o">+</span><span class="n">delta</span><span class="p">;</span>
<span class="n">alphaiX</span> <span class="o">=</span> <span class="nb">zeros</span><span class="p">(</span><span class="n">modei</span><span class="p">,</span><span class="n">N</span><span class="p">);</span>
<span class="k">for</span> <span class="n">im</span> <span class="o">=</span> <span class="mi">1</span><span class="p">:</span><span class="n">modei</span>
    <span class="k">for</span> <span class="n">ik</span> <span class="o">=</span> <span class="mi">1</span><span class="p">:</span><span class="n">N</span>
        <span class="k">if</span> <span class="n">XiX</span><span class="p">(</span><span class="n">ik</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="n">XiXX</span><span class="p">(</span><span class="n">im</span><span class="p">)</span>
            <span class="n">Fun_image_N</span> <span class="o">=</span> <span class="o">@</span><span class="p">(</span><span class="nb">alpha</span><span class="p">)</span> <span class="n">Fun_image</span><span class="p">(</span><span class="n">XiX</span><span class="p">(</span><span class="n">ik</span><span class="p">),</span><span class="nb">alpha</span><span class="p">);</span>
            <span class="n">num</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
            <span class="k">while</span> <span class="n">Fun_image_N</span><span class="p">(</span><span class="n">alphaleft</span><span class="p">(</span><span class="n">im</span><span class="p">))</span><span class="o">*</span><span class="n">Fun_image_N</span><span class="p">(</span><span class="n">alpharight</span><span class="p">(</span><span class="n">im</span><span class="p">))</span> <span class="o">&gt;=</span> <span class="mi">0</span> 
                <span class="n">alphaleft</span><span class="p">(</span><span class="n">im</span><span class="p">)</span> <span class="o">=</span> <span class="n">alphaleft</span><span class="p">(</span><span class="n">im</span><span class="p">)</span><span class="o">+</span><span class="n">delta</span><span class="o">*</span><span class="p">(</span><span class="n">num</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
                <span class="n">alpharight</span><span class="p">(</span><span class="n">im</span><span class="p">)</span> <span class="o">=</span> <span class="n">alpharight</span><span class="p">(</span><span class="n">im</span><span class="p">)</span><span class="o">+</span><span class="n">delta</span><span class="o">*</span><span class="p">(</span><span class="n">num</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
                <span class="k">if</span> <span class="n">Fun_image_N</span><span class="p">(</span><span class="n">alphaleft</span><span class="p">(</span><span class="n">im</span><span class="p">))</span><span class="o">*</span><span class="n">Fun_image_N</span><span class="p">(</span><span class="n">alpharight</span><span class="p">(</span><span class="n">im</span><span class="p">))</span> <span class="o">&lt;</span> <span class="mi">0</span>
                    <span class="k">break</span>
                <span class="k">end</span>
            <span class="k">end</span>
            <span class="n">NUMi</span><span class="p">(</span><span class="n">im</span><span class="p">,</span><span class="n">ik</span><span class="p">)</span> <span class="o">=</span> <span class="n">num</span><span class="p">;</span>
            <span class="n">alphaiX</span><span class="p">(</span><span class="n">im</span><span class="p">,</span><span class="n">ik</span><span class="p">)</span> <span class="o">=</span> <span class="nb">fzero</span><span class="p">(</span><span class="n">Fun_image_N</span><span class="p">,[</span><span class="n">alphaleft</span><span class="p">(</span><span class="n">im</span><span class="p">)</span> <span class="n">alpharight</span><span class="p">(</span><span class="n">im</span><span class="p">)]);</span>
        <span class="k">end</span>
    <span class="k">end</span>  
<span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="Theory"/><category term="Wave"/><summary type="html"><![CDATA[Elastic Equations in Circular Rods]]></summary></entry><entry><title type="html">Dispersion Relations of Elastic Waves in Plates</title><link href="https://lyushisyan.github.io/blog/2023/elastic-wave-in-plate/" rel="alternate" type="text/html" title="Dispersion Relations of Elastic Waves in Plates"/><published>2023-05-09T00:32:13+00:00</published><updated>2023-05-09T00:32:13+00:00</updated><id>https://lyushisyan.github.io/blog/2023/elastic-wave-in-plate</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2023/elastic-wave-in-plate/"><![CDATA[<p>This article studies the wave propagation process based on solving the <strong>elastic equations of a continuous medium</strong>.</p> <p>In plates, waves can be divided into longitudinal waves (<strong>P</strong> waves) and transverse waves (<strong>S</strong> waves), with <strong>S</strong> waves further classified into <strong>SH</strong> waves and <strong>SV</strong> waves.</p> <div class="row"> <div class="col-md-6 text-center"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/elsplate_1-480.webp 480w,/assets/img/blog/elsplate_1-800.webp 800w,/assets/img/blog/elsplate_1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/blog/elsplate_1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>Assuming the wave propagates along the $x$-axis:</p> <ul> <li>Displacement in the $x$ direction corresponds to <strong>P waves</strong>.</li> <li>Displacement in the $y$ direction corresponds to <strong>SH waves</strong>.</li> <li>Displacement in the $z$ direction corresponds to <strong>SV waves</strong>.</li> </ul> <p><strong>SV waves</strong> and <strong>P waves</strong> couple under the stress-free conditions of a plate surface to form <strong>Rayleigh-Lamb waves</strong>.</p> <h2 id="elastic-wave-equation">Elastic Wave Equation</h2> <p>In the approximation of a continuous medium, considering elastic waves propagating along the \(x\) direction in a plate, the wave equation is: \(\mu\Delta\vec u+(\lambda+\mu)\nabla(\nabla\vec u) = \rho \frac{\partial^2 \vec u}{\partial t^2}\)</p> <p>where \(\vec u\) is the displacement vector, \(\lambda + \mu\) are Lamé constants (dependent on the medium’s elastic properties), and \(\rho\) is the medium density.</p> <p>The solutions to the wave equation can be expressed as a combination of scalar potential \(\varphi\) and vector potential \(\vec\psi\): \(\vec u =\text{grad }\varphi + \text{rot }\vec\psi\)</p> <h2 id="dispersion-relation-of-sh-waves">Dispersion Relation of SH Waves</h2> <p>In SH waves, atomic displacement occurs in the \(y\) direction, i.e., the displacement vector is \(\vec u = (0,u_y,0)\).</p> <p>Thus, the wave equation for SH waves is: \(\frac{\partial^2 u_y}{\partial x^2}+\frac{\partial^2 u_y}{\partial z^2} = \frac{1}{c_t^2}\frac{\partial^2 u_y}{\partial t^2}\)</p> <p>where \(c_t=\sqrt{\mu/\rho}\) is the shear wave velocity.</p> <p>The solution is: \(u_y=(A_1\sin\beta z + A_2\cos\beta z)e^{i(\xi x-\omega t)}\)</p> <p>where \(\xi\) is the wave vector projection along the \(x\)-axis, \(\omega\) is the frequency, and \(\beta\) is the wave vector projection along the \(z\)-axis, satisfying: \(\beta^2+\xi^2=\frac{\omega^2}{c_t^2}\)</p> <p>Considering stress-free boundary conditions on the plate surfaces, \(\tau_{zy} =\mu\frac{\partial u_y}{\partial z}=0\) at \(y=\pm b\), the solution yields: \(A_1\cos\beta b-A_2\sin\beta b =0 \quad \text{and} \quad A_1\cos\beta b+A_2\sin\beta b =0\)</p> <p>Thus, the frequency equation is: \(\cos\beta b\sin \beta b=0\)</p> <p>This equation is satisfied when: \(\beta b = n\pi/2~~~(n=0,1,2,3,...)\)</p> <p>The dispersion relation for SH waves is then: \(\omega^2=c_t^2\left[\xi^2+\left(n\pi/2b\right)^2\right]\)</p> <div class="row"> <div class="col-md-6 text-center"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/els-DS-SH-480.webp 480w,/assets/img/blog/els-DS-SH-800.webp 800w,/assets/img/blog/els-DS-SH-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/blog/els-DS-SH.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="dispersion-relation-of-rayleigh-lamb-waves">Dispersion Relation of Rayleigh-Lamb Waves</h2> <p>Considering the simultaneous presence of P and SV waves in a plate of thickness \(2b\) with stress-free boundaries:</p> <ul> <li>The displacement vector is \(\vec u = (u_x,0,u_z)\).</li> <li>Scalar potential \(\psi\) and vector potential \(\vec\psi=(0,\psi_y,0)\) are used.</li> </ul> <p>The wave equations for Rayleigh-Lamb waves are: \(\frac{\partial^2 \varphi}{\partial x^2}+\frac{\partial^2 \varphi}{\partial y^2}=\frac{1}{c_l^2}\frac{\partial \varphi}{\partial t^2}\) \(\frac{\partial^2 \psi_y}{\partial x^2}+\frac{\partial^2 \psi_y}{\partial y^2}=\frac{1}{c_t^2}\frac{\partial \psi_y}{\partial t^2}\)</p> <p>where \(c_l=\sqrt{(\lambda+2\mu)/\rho}\) is the longitudinal wave velocity and \(c_t=\sqrt{\mu/\rho}\) is the shear wave velocity.</p> <p>The solutions are: \(\varphi=(A\sin\alpha z+B\cos\alpha z)e^{i(\xi x-\omega t)}\) \(\psi_y=i(C\sin\beta z+ D\cos\beta z)e^{i(\xi x-\omega t)}\)</p> <p>Symmetric and antisymmetric waves are treated separately.</p> <h3 id="symmetric-waves">Symmetric Waves</h3> <p>For symmetric waves (\(A=D=0\)): \(\frac{\tan\beta b}{\tan\alpha b} = -\frac{4\alpha\beta \xi^2}{(\xi^2-\beta^2)^2}\)</p> <div class="row"> <div class="col-md-6 text-center"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/els-DS-L-480.webp 480w,/assets/img/blog/els-DS-L-800.webp 800w,/assets/img/blog/els-DS-L-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/blog/els-DS-L.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h3 id="antisymmetric-waves">Antisymmetric Waves</h3> <p>For antisymmetric waves (\(B=C=0\)): \(\frac{\tan\beta b}{\tan\alpha b} = -\frac{(\xi^2-\beta^2)^2}{4\alpha\beta \xi^2}\)</p> <h3 id="rayleigh-lamb-frequency-equation">Rayleigh-Lamb Frequency Equation</h3> <p>Combining symmetric and antisymmetric cases: \(F(\alpha,\beta,\xi) = \frac{\tan\beta b}{\tan\alpha b} + \left(\frac{4\alpha\beta \xi^2}{(\xi^2-\beta^2)^2}\right)^{\pm 1} = 0\)</p> <h2 id="group-velocity-and-phase-velocity">Group Velocity and Phase Velocity</h2> <p>The phase velocity is the propagation velocity of the wave phase: \(v_p=\frac{\omega}{k}\)</p> <div class="row"> <div class="col-md-6 text-center"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/els-vp-480.webp 480w,/assets/img/blog/els-vp-800.webp 800w,/assets/img/blog/els-vp-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/blog/els-vp.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>The group velocity is the velocity at which energy is transmitted in the medium: \(v_g=\frac{\partial\omega}{\partial k}\)</p> <div class="row"> <div class="col-md-6 text-center"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/els-vg-480.webp 480w,/assets/img/blog/els-vg-800.webp 800w,/assets/img/blog/els-vg-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/blog/els-vg.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div>]]></content><author><name></name></author><category term="Theory"/><category term="Wave"/><summary type="html"><![CDATA[This article studies the wave propagation process based on solving the elastic equations of a continuous medium.]]></summary></entry><entry><title type="html">Classical Dynamic Theory of Heat Transfer</title><link href="https://lyushisyan.github.io/blog/2023/classic-heat-transfer/" rel="alternate" type="text/html" title="Classical Dynamic Theory of Heat Transfer"/><published>2023-04-26T00:32:13+00:00</published><updated>2023-04-26T00:32:13+00:00</updated><id>https://lyushisyan.github.io/blog/2023/classic-heat-transfer</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2023/classic-heat-transfer/"><![CDATA[<h2 id="mean-free-path-of-gas-molecules-and-thermal-conductivity">Mean Free Path of Gas Molecules and Thermal Conductivity</h2> <p>Assuming the total path traveled by a molecule is \(L\), the total volume it occupies during energy transfer is \(\pi d^2L\) (\(d\) being the molecular diameter). The total number of molecules in this volume is \(\pi n d^2 L\) (\(n\) being molecular density), so the number of collisions is \(\pi n d^2 L\).</p> <p>The mean distance \(\Lambda\) between two collisions equals the ratio of the total path \(L\) to the number of collisions: \(\Lambda = \frac{L}{n \pi d^2 L} = \frac{1}{n \sigma}\)</p> <p>where \(\sigma\) is the collision cross-section.</p> <p>Substituting the ideal gas molecular density \(n = \frac{p}{k_B T}\): \(\Lambda = \frac{k_B T}{p \sigma}\)</p> <p>Based on kinetic theory, the heat flux in an ideal gas is calculated. Let \(\varepsilon\) be the internal energy of the gas, and the heat flux of one molecule is: \(q_x = \frac{1}{2} v_x [\varepsilon(x - \Lambda_x) - \varepsilon(x + \Lambda_x)]\)</p> <p>where \(x\) is the coordinate, and \(v_x\) is the x-component of velocity.</p> <p>Expanding into a Taylor series, we get: \(q_x = -v_x \Lambda_x \frac{\text{d}\varepsilon}{\text{dx}} \approx -\cos^2\theta v \Lambda \frac{\text{d}\varepsilon}{\text{dx}}\)</p> <p>Integrating over all angles gives the total heat flux: \(q_x = -\frac{1}{2\pi} v \Lambda \frac{\text{d}\varepsilon}{\text{dx}} \left[\int_{\varphi=0}^{2\pi}\int_{\theta=0}^{\pi/2}\cos^2\theta\sin\theta\text{d}\theta\text{d}\varphi\right] \frac{\text{d}\varepsilon}{\text{dT}} \frac{\text{dT}}{\text{dx}} \approx -\frac{1}{3} C v \Lambda \frac{\text{dT}}{\text{dx}}\)</p> <p>Thus, the expression for gas thermal conductivity is: \(\lambda \approx \frac{1}{3} C v \Lambda\)</p> <p>It is proportional to the heat capacity \(C\), molecular velocity \(v\), and mean free path \(\Lambda\).</p> <h2 id="heat-transfer-in-dielectrics-phonon-gas-thermal-conductivity">Heat Transfer in Dielectrics: Phonon Gas Thermal Conductivity</h2> <p>Heat transfer in dielectrics is carried by phonons, which are quanta of vibrational energy \(\hbar \omega\). The thermal conductivity of the phonon gas can be calculated using the above formula: \(\lambda_{ph} = \frac{1}{3} C_{ph} v_s \Lambda_{\Sigma}\)</p> <p>The main scattering mechanisms for phonons are:</p> <ul> <li>Phonon-boundary scattering (\(b\));</li> <li>Phonon-impurity scattering (\(imp\));</li> <li>Phonon-phonon scattering (\(ph\)).</li> </ul> <p>According to Matthiessen’s rule: \(\Lambda_{\Sigma}^{-1} = \Lambda_{ph}^{-1} + \Lambda_{imp}^{-1} + \Lambda_{b}^{-1}\)</p> <div class="row text-center"> <div class="col-md-6"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/classic1-480.webp 480w,/assets/img/blog/classic1-800.webp 800w,/assets/img/blog/classic1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/blog/classic1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-md-6"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/classic2-480.webp 480w,/assets/img/blog/classic2-800.webp 800w,/assets/img/blog/classic2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/blog/classic2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="heat-transfer-in-metals-electron-gas-thermal-conductivity">Heat Transfer in Metals: Electron Gas Thermal Conductivity</h2> <p>Considering the thermal conductivity of electron gas (metals), similar to phonons: \(\lambda_{e} = \frac{1}{3} C_{e} v_F \Lambda_{e}\)</p> <p>Electrons in metals are scattered by phonons, defects, and boundaries. According to Matthiessen’s rule: \(\frac{1}{\Lambda_e} = \frac{1}{\Lambda_{ph}} + \frac{1}{\Lambda_d} + \frac{1}{\Lambda_b}\)</p> <h2 id="boltzmann-equation">Boltzmann Equation</h2> <p>The thermodynamic equilibrium state can be described by the equilibrium distribution function \(f(\varepsilon, T)\) (Maxwell-Boltzmann, Bose-Einstein, or Fermi-Dirac), which depends on energy, temperature, and chemical potential.</p> <p>If thermodynamic equilibrium is disrupted, the state of the system is described by a non-equilibrium distribution function, which may also depend on the coordinates and momentum of individual carriers in addition to energy, temperature, and chemical potential.</p> <p>In a closed system, due to internal relaxation processes, the non-equilibrium distribution evolves towards equilibrium. The Boltzmann equation describes this evolution: \(\frac{\partial f}{\partial t} + \vec v \cdot \nabla_{\vec r} f + \vec F \cdot \nabla_{\vec p} f = \left(\frac{\partial f}{\partial t}\right)_\text{st}\)</p> <p>The equation is meaningful if the collision term \((\partial f/\partial t)_\text{st}\) is known.</p> <h2 id="thermal-conductivity-fourier-equation">Thermal Conductivity: Fourier Equation</h2> <p>In macroscopic systems, Fourier’s law determines heat transfer in the absence of macroscopic motion: \(\vec q = -\lambda \nabla T\)</p> <p>The heat transfer equation is: \(\rho C_p \frac{\partial T}{\partial t} = -\nabla \vec q\)</p> <p>Substituting Fourier’s law: \(\rho C_p \frac{\partial T}{\partial t} = \lambda \nabla^2 T\)</p> <p>Introducing the thermal diffusivity: \(\frac{1}{a} \frac{\partial T}{\partial t} = \nabla^2 T\)</p> <h2 id="summary">Summary</h2> <ul> <li>The heat transfer properties of macroscopic objects are related to characteristic length and time, which are compared to mean free path and relaxation time.</li> <li>The Boltzmann equation applies to dilute systems.</li> <li>For systems where characteristic dimensions are comparable to the wavelength of carriers, wave-like analysis methods are needed.</li> </ul>]]></content><author><name></name></author><category term="Theory"/><category term="Phonon"/><summary type="html"><![CDATA[Mean Free Path of Gas Molecules and Thermal Conductivity]]></summary></entry></feed>